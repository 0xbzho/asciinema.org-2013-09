[[1.516697,{"lines":{"0":[["                                                                                                                                   ",{}]],"1":[["                                                                                                                                   ",{}]],"2":[["                                                                                                                                   ",{}]],"3":[["                                                                                                                                   ",{}]],"4":[["                                                                                                                                   ",{}]],"5":[["                                                                                                                                   ",{}]],"6":[["                                                                                                                                   ",{}]],"7":[["                                                                                                                                   ",{}]],"8":[["                                                                                                                                   ",{}]],"9":[["                                                                                                                                   ",{}]],"10":[["                                                                                                                                   ",{}]],"11":[["                                                                                                                                   ",{}]],"12":[["                                                                                                                                   ",{}]],"13":[["                                                                                                                                   ",{}]],"14":[["                                                                                                                                   ",{}]],"15":[["                                                                                                                                   ",{}]],"16":[["                                                                                                                                   ",{}]],"17":[["                                                                                                                                   ",{}]],"18":[["                                                                                                                                   ",{}]],"19":[["                                                                                                                                   ",{}]],"20":[["                                                                                                                                   ",{}]],"21":[["                                                                                                                                   ",{}]],"22":[["                                                                                                                                   ",{}]],"23":[["                                                                                                                                   ",{}]],"24":[["                                                                                                                                   ",{}]],"25":[["                                                                                                                                   ",{}]],"26":[["                                                                                                                                   ",{}]],"27":[["                                                                                                                                   ",{}]],"28":[["                                                                                                                                   ",{}]],"29":[["                                                                                                                                   ",{}]],"30":[["                                                                                                                                   ",{}]],"31":[["                                                                                                                                   ",{}]],"32":[["                                                                                                                                   ",{}]],"33":[["                                                                                                                                   ",{}]],"34":[["                                                                                                                                   ",{}]],"35":[["                                                                                                                                   ",{}]],"36":[["                                                                                                                                   ",{}]],"37":[["                                                                                                                                   ",{}]],"38":[["                                                                                                                                   ",{}]],"39":[["                                                                                                                                   ",{}]],"40":[["                                                                                                                                   ",{}]],"41":[["                                                                                                                                   ",{}]],"42":[["                                                                                                                                   ",{}]],"43":[["                                                                                                                                   ",{}]],"44":[["                                                                                                                                   ",{}]],"45":[["                                                                                                                                   ",{}]],"46":[["                                                                                                                                   ",{}]],"47":[["                                                                                                                                   ",{}]],"48":[["                                                                                                                                   ",{}]],"49":[["                                                                                                                                   ",{}]],"50":[["                                                                                                                                   ",{}]],"51":[["                                                                                                                                   ",{}]],"52":[["                                                                                                                                   ",{}]],"53":[["                                                                                                                                   ",{}]]},"cursor":{"x":0,"y":0,"visible":true}}],[0.019068,{"lines":{"0":[["riot67",{"fg":2}],[" Y2R/y2r ",{}],["‹master› ",{"fg":3}],["»",{"bold":true}],["                                                                                                          ",{}]]},"cursor":{"x":26}}],[3.828332,{"lines":{"0":[["riot67",{"fg":2}],[" Y2R/y2r ",{}],["‹master› ",{"fg":3}],["»",{"bold":true}],[" r                                                                                                        ",{}]]},"cursor":{"x":27}}],[0.519234,{"lines":{"0":[["riot67",{"fg":2}],[" Y2R/y2r ",{}],["‹master› ",{"fg":3}],["»",{"bold":true}],[" rs                                                                                                       ",{}]]},"cursor":{"x":28}}],[0.191962,{"lines":{"0":[["riot67",{"fg":2}],[" Y2R/y2r ",{}],["‹master› ",{"fg":3}],["»",{"bold":true}],[" rsp                                                                                                      ",{}]]},"cursor":{"x":29}}],[0.120009,{"lines":{"0":[["riot67",{"fg":2}],[" Y2R/y2r ",{}],["‹master› ",{"fg":3}],["»",{"bold":true}],[" rspe                                                                                                     ",{}]]},"cursor":{"x":30}}],[0.304037,{"lines":{"0":[["riot67",{"fg":2}],[" Y2R/y2r ",{}],["‹master› ",{"fg":3}],["»",{"bold":true}],[" rspec                                                                                                    ",{}]]},"cursor":{"x":31}}],[0.191881,{"cursor":{"x":32}}],[0.72819,{"lines":{"0":[["riot67",{"fg":2}],[" Y2R/y2r ",{}],["‹master› ",{"fg":3}],["»",{"bold":true}],[" rspec -                                                                                                  ",{}]]},"cursor":{"x":33}}],[0.13587,{"lines":{"0":[["riot67",{"fg":2}],[" Y2R/y2r ",{}],["‹master› ",{"fg":3}],["»",{"bold":true}],[" rspec --                                                                                                 ",{}]]},"cursor":{"x":34}}],[0.232013,{"lines":{"0":[["riot67",{"fg":2}],[" Y2R/y2r ",{}],["‹master› ",{"fg":3}],["»",{"bold":true}],[" rspec --f                                                                                                ",{}]]},"cursor":{"x":35}}],[0.232055,{"lines":{"0":[["riot67",{"fg":2}],[" Y2R/y2r ",{}],["‹master› ",{"fg":3}],["»",{"bold":true}],[" rspec --fo                                                                                               ",{}]]},"cursor":{"x":36}}],[0.167981,{"lines":{"0":[["riot67",{"fg":2}],[" Y2R/y2r ",{}],["‹master› ",{"fg":3}],["»",{"bold":true}],[" rspec --for                                                                                              ",{}]]},"cursor":{"x":37}}],[0.08803800000000001,{"lines":{"0":[["riot67",{"fg":2}],[" Y2R/y2r ",{}],["‹master› ",{"fg":3}],["»",{"bold":true}],[" rspec --form                                                                                             ",{}]]},"cursor":{"x":38}}],[0.119975,{"lines":{"0":[["riot67",{"fg":2}],[" Y2R/y2r ",{}],["‹master› ",{"fg":3}],["»",{"bold":true}],[" rspec --forma                                                                                            ",{}]]},"cursor":{"x":39}}],[0.224005,{"lines":{"0":[["riot67",{"fg":2}],[" Y2R/y2r ",{}],["‹master› ",{"fg":3}],["»",{"bold":true}],[" rspec --format                                                                                           ",{}]]},"cursor":{"x":40}}],[0.192419,{"lines":{"0":[["riot67",{"fg":2}],[" Y2R/y2r ",{}],["‹master› ",{"fg":3}],["»",{"bold":true}],[" rspec --format=                                                                                          ",{}]]},"cursor":{"x":41}}],[0.71959,{"lines":{"0":[["riot67",{"fg":2}],[" Y2R/y2r ",{}],["‹master› ",{"fg":3}],["»",{"bold":true}],[" rspec --format=d                                                                                         ",{}]]},"cursor":{"x":42}}],[0.303979,{"lines":{"0":[["riot67",{"fg":2}],[" Y2R/y2r ",{}],["‹master› ",{"fg":3}],["»",{"bold":true}],[" rspec --format=do                                                                                        ",{}]]},"cursor":{"x":43}}],[0.192005,{"lines":{"0":[["riot67",{"fg":2}],[" Y2R/y2r ",{}],["‹master› ",{"fg":3}],["»",{"bold":true}],[" rspec --format=doc                                                                                       ",{}]]},"cursor":{"x":44}}],[0.175964,{"lines":{"0":[["riot67",{"fg":2}],[" Y2R/y2r ",{}],["‹master› ",{"fg":3}],["»",{"bold":true}],[" rspec --format=docu                                                                                      ",{}]]},"cursor":{"x":45}}],[0.199992,{"lines":{"0":[["riot67",{"fg":2}],[" Y2R/y2r ",{}],["‹master› ",{"fg":3}],["»",{"bold":true}],[" rspec --format=docum                                                                                     ",{}]]},"cursor":{"x":46}}],[0.151996,{"lines":{"0":[["riot67",{"fg":2}],[" Y2R/y2r ",{}],["‹master› ",{"fg":3}],["»",{"bold":true}],[" rspec --format=docume                                                                                    ",{}]]},"cursor":{"x":47}}],[0.128003,{"lines":{"0":[["riot67",{"fg":2}],[" Y2R/y2r ",{}],["‹master› ",{"fg":3}],["»",{"bold":true}],[" rspec --format=documen                                                                                   ",{}]]},"cursor":{"x":48}}],[0.111966,{"lines":{"0":[["riot67",{"fg":2}],[" Y2R/y2r ",{}],["‹master› ",{"fg":3}],["»",{"bold":true}],[" rspec --format=document                                                                                  ",{}]]},"cursor":{"x":49}}],[0.168138,{"lines":{"0":[["riot67",{"fg":2}],[" Y2R/y2r ",{}],["‹master› ",{"fg":3}],["»",{"bold":true}],[" rspec --format=documenta                                                                                 ",{}]]},"cursor":{"x":50}}],[0.175904,{"lines":{"0":[["riot67",{"fg":2}],[" Y2R/y2r ",{}],["‹master› ",{"fg":3}],["»",{"bold":true}],[" rspec --format=documentat                                                                                ",{}]]},"cursor":{"x":51}}],[0.127989,{"lines":{"0":[["riot67",{"fg":2}],[" Y2R/y2r ",{}],["‹master› ",{"fg":3}],["»",{"bold":true}],[" rspec --format=documentati                                                                               ",{}]]},"cursor":{"x":52}}],[0.168073,{"lines":{"0":[["riot67",{"fg":2}],[" Y2R/y2r ",{}],["‹master› ",{"fg":3}],["»",{"bold":true}],[" rspec --format=documentatio                                                                              ",{}]]},"cursor":{"x":53}}],[0.199928,{"lines":{"0":[["riot67",{"fg":2}],[" Y2R/y2r ",{}],["‹master› ",{"fg":3}],["»",{"bold":true}],[" rspec --format=documentation                                                                             ",{}]]},"cursor":{"x":54}}],[0.159919,{"cursor":{"x":55}}],[0.320124,{"lines":{"0":[["riot67",{"fg":2}],[" Y2R/y2r ",{}],["‹master› ",{"fg":3}],["»",{"bold":true}],[" rspec --format=documentation s                                                                           ",{}]]},"cursor":{"x":56}}],[0.11276,{"lines":{"0":[["riot67",{"fg":2}],[" Y2R/y2r ",{}],["‹master› ",{"fg":3}],["»",{"bold":true}],[" rspec --format=documentation sp                                                                          ",{}]]},"cursor":{"x":57}}],[0.095208,{"lines":{"0":[["riot67",{"fg":2}],[" Y2R/y2r ",{}],["‹master› ",{"fg":3}],["»",{"bold":true}],[" rspec --format=documentation spe                                                                         ",{}]]},"cursor":{"x":58}}],[0.200075,{"lines":{"0":[["riot67",{"fg":2}],[" Y2R/y2r ",{}],["‹master› ",{"fg":3}],["»",{"bold":true}],[" rspec --format=documentation spec                                                                        ",{}]]},"cursor":{"x":59}}],[0.809503,{"cursor":{"x":0,"y":1}}],[0.636923,{"lines":{"2":[["Y2R::AST::Ruby::Node                                                                                                               ",{}]]},"cursor":{"y":3}}],[0.016595,{"lines":{"3":[["  #to_ruby                                                                                                                         ",{}]],"4":[["    on nodes without any comments                                                                                                  ",{}]],"5":[["      returns code without any comments",{"fg":2}],["                                                                                            ",{}]],"6":[["    on nodes with comment before                                                                                                   ",{}]],"7":[["      returns code with comment before",{"fg":2}],["                                                                                             ",{}]],"8":[["    on nodes with comment after                                                                                                    ",{}]],"9":[["      returns code with comment after",{"fg":2}],["                                                                                              ",{}]],"10":[["  #single_line_width                                                                                                               ",{}]],"11":[["    on nodes without any comments                                                                                                  ",{}]],"12":[["      returns width without any comments",{"fg":2}],["                                                                                           ",{}]],"13":[["    on nodes with comment before                                                                                                   ",{}]],"14":[["      returns width with comment before",{"fg":2}],["                                                                                            ",{}]],"15":[["    on nodes with comment after                                                                                                    ",{}]],"16":[["      returns width with comment after",{"fg":2}],["                                                                                             ",{}]]},"cursor":{"y":17}}],[0.012962,{"lines":{"18":[["Y2R::AST::Ruby::Program                                                                                                            ",{}]],"19":[["  #to_ruby                                                                                                                         ",{}]],"20":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"21":[["    passes correct context to statements",{"fg":2}],["                                                                                           ",{}]],"22":[["  #single_line_width_base                                                                                                          ",{}]],"23":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"25":[["Y2R::AST::Ruby::Class                                                                                                              ",{}]],"26":[["  #to_ruby_base                                                                                                                    ",{}]]},"cursor":{"y":27}}],[0.014765,{"lines":{"27":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"28":[["    passes correct context to superclass",{"fg":2}],["                                                                                           ",{}]],"29":[["    passes correct context to statements",{"fg":2}],["                                                                                           ",{}]],"30":[["  #single_line_width_base                                                                                                          ",{}]],"31":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"33":[["Y2R::AST::Ruby::Module                                                                                                             ",{}]],"34":[["  #to_ruby_base                                                                                                                    ",{}]]},"cursor":{"y":35}}],[0.010425,{"lines":{"35":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"36":[["    passes correct context to statements",{"fg":2}],["                                                                                           ",{}]],"37":[["  #single_line_width_base                                                                                                          ",{}]],"38":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"40":[["Y2R::AST::Ruby::Def                                                                                                                ",{}]],"41":[["  #to_ruby_base                                                                                                                    ",{}]]},"cursor":{"y":42}}],[0.009376000000000001,{"lines":{"42":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"43":[["    for single-line method definitions                                                                                             ",{}]]},"cursor":{"y":44}}],[0.033927,{"lines":{"44":[["      passes correct context to args",{"fg":2}],["                                                                                               ",{}]]},"cursor":{"y":45}}],[0.016657,{"lines":{"0":[["                                                                                                                                   ",{}]],"1":[["Y2R::AST::Ruby::Node                                                                                                               ",{}]],"2":[["  #to_ruby                                                                                                                         ",{}]],"3":[["    on nodes without any comments                                                                                                  ",{}]],"4":[["      returns code without any comments",{"fg":2}],["                                                                                            ",{}]],"5":[["    on nodes with comment before                                                                                                   ",{}]],"6":[["      returns code with comment before",{"fg":2}],["                                                                                             ",{}]],"7":[["    on nodes with comment after                                                                                                    ",{}]],"8":[["      returns code with comment after",{"fg":2}],["                                                                                              ",{}]],"9":[["  #single_line_width                                                                                                               ",{}]],"10":[["    on nodes without any comments                                                                                                  ",{}]],"11":[["      returns width without any comments",{"fg":2}],["                                                                                           ",{}]],"12":[["    on nodes with comment before                                                                                                   ",{}]],"13":[["      returns width with comment before",{"fg":2}],["                                                                                            ",{}]],"14":[["    on nodes with comment after                                                                                                    ",{}]],"15":[["      returns width with comment after",{"fg":2}],["                                                                                             ",{}]],"16":[["                                                                                                                                   ",{}]],"17":[["Y2R::AST::Ruby::Program                                                                                                            ",{}]],"18":[["  #to_ruby                                                                                                                         ",{}]],"19":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"20":[["    passes correct context to statements",{"fg":2}],["                                                                                           ",{}]],"21":[["  #single_line_width_base                                                                                                          ",{}]],"22":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"23":[["                                                                                                                                   ",{}]],"24":[["Y2R::AST::Ruby::Class                                                                                                              ",{}]],"25":[["  #to_ruby_base                                                                                                                    ",{}]],"26":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"27":[["    passes correct context to superclass",{"fg":2}],["                                                                                           ",{}]],"28":[["    passes correct context to statements",{"fg":2}],["                                                                                           ",{}]],"29":[["  #single_line_width_base                                                                                                          ",{}]],"30":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"31":[["                                                                                                                                   ",{}]],"32":[["Y2R::AST::Ruby::Module                                                                                                             ",{}]],"33":[["  #to_ruby_base                                                                                                                    ",{}]],"34":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"35":[["    passes correct context to statements",{"fg":2}],["                                                                                           ",{}]],"36":[["  #single_line_width_base                                                                                                          ",{}]],"37":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"38":[["                                                                                                                                   ",{}]],"39":[["Y2R::AST::Ruby::Def                                                                                                                ",{}]],"40":[["  #to_ruby_base                                                                                                                    ",{}]],"41":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"42":[["    for single-line method definitions                                                                                             ",{}]],"43":[["      passes correct context to args",{"fg":2}],["                                                                                               ",{}]],"44":[["      passes correct context to statements",{"fg":2}],["                                                                                         ",{}]],"45":[["    for nulti-line method definitions                                                                                              ",{}]],"46":[["      passes correct context to args",{"fg":2}],["                                                                                               ",{}]],"47":[["      passes correct context to statements",{"fg":2}],["                                                                                         ",{}]],"48":[["  #single_line_width_base                                                                                                          ",{}]],"49":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"51":[["Y2R::AST::Ruby::Statements                                                                                                         ",{}]],"52":[["  #to_ruby_base                                                                                                                    ",{}]]},"cursor":{"y":53}}],[0.015032,{"lines":{"0":[["      returns code with comment after",{"fg":2}],["                                                                                              ",{}]],"1":[["  #single_line_width                                                                                                               ",{}]],"2":[["    on nodes without any comments                                                                                                  ",{}]],"3":[["      returns width without any comments",{"fg":2}],["                                                                                           ",{}]],"4":[["    on nodes with comment before                                                                                                   ",{}]],"5":[["      returns width with comment before",{"fg":2}],["                                                                                            ",{}]],"6":[["    on nodes with comment after                                                                                                    ",{}]],"7":[["      returns width with comment after",{"fg":2}],["                                                                                             ",{}]],"8":[["                                                                                                                                   ",{}]],"9":[["Y2R::AST::Ruby::Program                                                                                                            ",{}]],"10":[["  #to_ruby                                                                                                                         ",{}]],"11":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"12":[["    passes correct context to statements",{"fg":2}],["                                                                                           ",{}]],"13":[["  #single_line_width_base                                                                                                          ",{}]],"14":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"15":[["                                                                                                                                   ",{}]],"16":[["Y2R::AST::Ruby::Class                                                                                                              ",{}]],"17":[["  #to_ruby_base                                                                                                                    ",{}]],"18":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"19":[["    passes correct context to superclass",{"fg":2}],["                                                                                           ",{}]],"24":[["Y2R::AST::Ruby::Module                                                                                                             ",{}]],"27":[["    passes correct context to statements",{"fg":2}],["                                                                                           ",{}]],"28":[["  #single_line_width_base                                                                                                          ",{}]],"29":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"30":[["                                                                                                                                   ",{}]],"31":[["Y2R::AST::Ruby::Def                                                                                                                ",{}]],"32":[["  #to_ruby_base                                                                                                                    ",{}]],"33":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"34":[["    for single-line method definitions                                                                                             ",{}]],"35":[["      passes correct context to args",{"fg":2}],["                                                                                               ",{}]],"36":[["      passes correct context to statements",{"fg":2}],["                                                                                         ",{}]],"37":[["    for nulti-line method definitions                                                                                              ",{}]],"38":[["      passes correct context to args",{"fg":2}],["                                                                                               ",{}]],"39":[["      passes correct context to statements",{"fg":2}],["                                                                                         ",{}]],"40":[["  #single_line_width_base                                                                                                          ",{}]],"41":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"42":[["                                                                                                                                   ",{}]],"43":[["Y2R::AST::Ruby::Statements                                                                                                         ",{}]],"44":[["  #to_ruby_base                                                                                                                    ",{}]],"45":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"46":[["    passes correct context to statements",{"fg":2}],["                                                                                           ",{}]],"47":[["  #single_line_width_base                                                                                                          ",{}]],"48":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"49":[["    passes correct context to statements",{"fg":2}],["                                                                                           ",{}]],"51":[["Y2R::AST::Ruby::Begin                                                                                                              ",{}]]}}],[0.010089,{"lines":{"0":[["      returns width with comment after",{"fg":2}],["                                                                                             ",{}]],"1":[["                                                                                                                                   ",{}]],"2":[["Y2R::AST::Ruby::Program                                                                                                            ",{}]],"3":[["  #to_ruby                                                                                                                         ",{}]],"4":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"5":[["    passes correct context to statements",{"fg":2}],["                                                                                           ",{}]],"6":[["  #single_line_width_base                                                                                                          ",{}]],"7":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"9":[["Y2R::AST::Ruby::Class                                                                                                              ",{}]],"10":[["  #to_ruby_base                                                                                                                    ",{}]],"12":[["    passes correct context to superclass",{"fg":2}],["                                                                                           ",{}]],"13":[["    passes correct context to statements",{"fg":2}],["                                                                                           ",{}]],"14":[["  #single_line_width_base                                                                                                          ",{}]],"15":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"16":[["                                                                                                                                   ",{}]],"17":[["Y2R::AST::Ruby::Module                                                                                                             ",{}]],"18":[["  #to_ruby_base                                                                                                                    ",{}]],"19":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"24":[["Y2R::AST::Ruby::Def                                                                                                                ",{}]],"27":[["    for single-line method definitions                                                                                             ",{}]],"28":[["      passes correct context to args",{"fg":2}],["                                                                                               ",{}]],"29":[["      passes correct context to statements",{"fg":2}],["                                                                                         ",{}]],"30":[["    for nulti-line method definitions                                                                                              ",{}]],"31":[["      passes correct context to args",{"fg":2}],["                                                                                               ",{}]],"32":[["      passes correct context to statements",{"fg":2}],["                                                                                         ",{}]],"33":[["  #single_line_width_base                                                                                                          ",{}]],"34":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"35":[["                                                                                                                                   ",{}]],"36":[["Y2R::AST::Ruby::Statements                                                                                                         ",{}]],"37":[["  #to_ruby_base                                                                                                                    ",{}]],"38":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"39":[["    passes correct context to statements",{"fg":2}],["                                                                                           ",{}]],"42":[["    passes correct context to statements",{"fg":2}],["                                                                                           ",{}]],"43":[["                                                                                                                                   ",{}]],"44":[["Y2R::AST::Ruby::Begin                                                                                                              ",{}]],"45":[["  #to_ruby_base                                                                                                                    ",{}]],"46":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"47":[["    passes correct context to statements",{"fg":2}],["                                                                                           ",{}]],"48":[["  #single_line_width_base                                                                                                          ",{}]],"49":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"51":[["Y2R::AST::Ruby::If                                                                                                                 ",{}]]}}],[0.010573,{"lines":{"0":[["Y2R::AST::Ruby::Program                                                                                                            ",{}]],"1":[["  #to_ruby                                                                                                                         ",{}]],"2":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"3":[["    passes correct context to statements",{"fg":2}],["                                                                                           ",{}]],"4":[["  #single_line_width_base                                                                                                          ",{}]],"5":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"6":[["                                                                                                                                   ",{}]],"7":[["Y2R::AST::Ruby::Class                                                                                                              ",{}]],"8":[["  #to_ruby_base                                                                                                                    ",{}]],"9":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"10":[["    passes correct context to superclass",{"fg":2}],["                                                                                           ",{}]],"11":[["    passes correct context to statements",{"fg":2}],["                                                                                           ",{}]],"12":[["  #single_line_width_base                                                                                                          ",{}]],"13":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"14":[["                                                                                                                                   ",{}]],"15":[["Y2R::AST::Ruby::Module                                                                                                             ",{}]],"16":[["  #to_ruby_base                                                                                                                    ",{}]],"17":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"18":[["    passes correct context to statements",{"fg":2}],["                                                                                           ",{}]],"19":[["  #single_line_width_base                                                                                                          ",{}]],"20":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"21":[["                                                                                                                                   ",{}]],"22":[["Y2R::AST::Ruby::Def                                                                                                                ",{}]],"23":[["  #to_ruby_base                                                                                                                    ",{}]],"24":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"25":[["    for single-line method definitions                                                                                             ",{}]],"26":[["      passes correct context to args",{"fg":2}],["                                                                                               ",{}]],"27":[["      passes correct context to statements",{"fg":2}],["                                                                                         ",{}]],"28":[["    for nulti-line method definitions                                                                                              ",{}]],"29":[["      passes correct context to args",{"fg":2}],["                                                                                               ",{}]],"30":[["      passes correct context to statements",{"fg":2}],["                                                                                         ",{}]],"31":[["  #single_line_width_base                                                                                                          ",{}]],"32":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"33":[["                                                                                                                                   ",{}]],"34":[["Y2R::AST::Ruby::Statements                                                                                                         ",{}]],"35":[["  #to_ruby_base                                                                                                                    ",{}]],"36":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"37":[["    passes correct context to statements",{"fg":2}],["                                                                                           ",{}]],"38":[["  #single_line_width_base                                                                                                          ",{}]],"39":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"40":[["    passes correct context to statements",{"fg":2}],["                                                                                           ",{}]],"41":[["                                                                                                                                   ",{}]],"42":[["Y2R::AST::Ruby::Begin                                                                                                              ",{}]],"43":[["  #to_ruby_base                                                                                                                    ",{}]],"44":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"45":[["    passes correct context to statements",{"fg":2}],["                                                                                           ",{}]],"46":[["  #single_line_width_base                                                                                                          ",{}]],"47":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"48":[["                                                                                                                                   ",{}]],"49":[["Y2R::AST::Ruby::If                                                                                                                 ",{}]],"50":[["  #to_ruby_base                                                                                                                    ",{}]],"51":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"52":[["    for single-line if statements                                                                                                  ",{}]]}}],[0.01348,{"lines":{"0":[["  #single_line_width_base                                                                                                          ",{}]],"1":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"2":[["                                                                                                                                   ",{}]],"3":[["Y2R::AST::Ruby::Class                                                                                                              ",{}]],"4":[["  #to_ruby_base                                                                                                                    ",{}]],"5":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"6":[["    passes correct context to superclass",{"fg":2}],["                                                                                           ",{}]],"7":[["    passes correct context to statements",{"fg":2}],["                                                                                           ",{}]],"8":[["  #single_line_width_base                                                                                                          ",{}]],"9":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"10":[["                                                                                                                                   ",{}]],"11":[["Y2R::AST::Ruby::Module                                                                                                             ",{}]],"12":[["  #to_ruby_base                                                                                                                    ",{}]],"13":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"14":[["    passes correct context to statements",{"fg":2}],["                                                                                           ",{}]],"15":[["  #single_line_width_base                                                                                                          ",{}]],"16":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"17":[["                                                                                                                                   ",{}]],"18":[["Y2R::AST::Ruby::Def                                                                                                                ",{}]],"19":[["  #to_ruby_base                                                                                                                    ",{}]],"20":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"21":[["    for single-line method definitions                                                                                             ",{}]],"22":[["      passes correct context to args",{"fg":2}],["                                                                                               ",{}]],"23":[["      passes correct context to statements",{"fg":2}],["                                                                                         ",{}]],"24":[["    for nulti-line method definitions                                                                                              ",{}]],"25":[["      passes correct context to args",{"fg":2}],["                                                                                               ",{}]],"26":[["      passes correct context to statements",{"fg":2}],["                                                                                         ",{}]],"27":[["  #single_line_width_base                                                                                                          ",{}]],"28":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"29":[["                                                                                                                                   ",{}]],"30":[["Y2R::AST::Ruby::Statements                                                                                                         ",{}]],"31":[["  #to_ruby_base                                                                                                                    ",{}]],"32":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"33":[["    passes correct context to statements",{"fg":2}],["                                                                                           ",{}]],"34":[["  #single_line_width_base                                                                                                          ",{}]],"35":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"36":[["    passes correct context to statements",{"fg":2}],["                                                                                           ",{}]],"37":[["                                                                                                                                   ",{}]],"38":[["Y2R::AST::Ruby::Begin                                                                                                              ",{}]],"39":[["  #to_ruby_base                                                                                                                    ",{}]],"40":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"41":[["    passes correct context to statements",{"fg":2}],["                                                                                           ",{}]],"42":[["  #single_line_width_base                                                                                                          ",{}]],"43":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"44":[["                                                                                                                                   ",{}]],"45":[["Y2R::AST::Ruby::If                                                                                                                 ",{}]],"46":[["  #to_ruby_base                                                                                                                    ",{}]],"47":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"48":[["    for single-line if statements                                                                                                  ",{}]],"49":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"50":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"51":[["    for multi-line if statements                                                                                                   ",{}]],"52":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]]}}],[0.014715,{"lines":{"0":[["  #to_ruby_base                                                                                                                    ",{}]],"1":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"2":[["    passes correct context to superclass",{"fg":2}],["                                                                                           ",{}]],"3":[["    passes correct context to statements",{"fg":2}],["                                                                                           ",{}]],"4":[["  #single_line_width_base                                                                                                          ",{}]],"5":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"6":[["                                                                                                                                   ",{}]],"7":[["Y2R::AST::Ruby::Module                                                                                                             ",{}]],"8":[["  #to_ruby_base                                                                                                                    ",{}]],"9":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"10":[["    passes correct context to statements",{"fg":2}],["                                                                                           ",{}]],"11":[["  #single_line_width_base                                                                                                          ",{}]],"12":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"13":[["                                                                                                                                   ",{}]],"14":[["Y2R::AST::Ruby::Def                                                                                                                ",{}]],"15":[["  #to_ruby_base                                                                                                                    ",{}]],"16":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"17":[["    for single-line method definitions                                                                                             ",{}]],"18":[["      passes correct context to args",{"fg":2}],["                                                                                               ",{}]],"19":[["      passes correct context to statements",{"fg":2}],["                                                                                         ",{}]],"20":[["    for nulti-line method definitions                                                                                              ",{}]],"21":[["      passes correct context to args",{"fg":2}],["                                                                                               ",{}]],"22":[["      passes correct context to statements",{"fg":2}],["                                                                                         ",{}]],"23":[["  #single_line_width_base                                                                                                          ",{}]],"24":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"25":[["                                                                                                                                   ",{}]],"26":[["Y2R::AST::Ruby::Statements                                                                                                         ",{}]],"27":[["  #to_ruby_base                                                                                                                    ",{}]],"28":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"29":[["    passes correct context to statements",{"fg":2}],["                                                                                           ",{}]],"30":[["  #single_line_width_base                                                                                                          ",{}]],"31":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"32":[["    passes correct context to statements",{"fg":2}],["                                                                                           ",{}]],"33":[["                                                                                                                                   ",{}]],"34":[["Y2R::AST::Ruby::Begin                                                                                                              ",{}]],"35":[["  #to_ruby_base                                                                                                                    ",{}]],"36":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"37":[["    passes correct context to statements",{"fg":2}],["                                                                                           ",{}]],"38":[["  #single_line_width_base                                                                                                          ",{}]],"39":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"40":[["                                                                                                                                   ",{}]],"41":[["Y2R::AST::Ruby::If                                                                                                                 ",{}]],"42":[["  #to_ruby_base                                                                                                                    ",{}]],"43":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"44":[["    for single-line if statements                                                                                                  ",{}]],"45":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"46":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"47":[["    for multi-line if statements                                                                                                   ",{}]],"48":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"49":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"50":[["      passes correct context to else",{"fg":2}],["                                                                                               ",{}]],"51":[["  #single_line_width_base                                                                                                          ",{}]],"52":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]]}}],[0.007572000000000001,{"lines":{"0":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"1":[["                                                                                                                                   ",{}]],"2":[["Y2R::AST::Ruby::Module                                                                                                             ",{}]],"3":[["  #to_ruby_base                                                                                                                    ",{}]],"4":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"5":[["    passes correct context to statements",{"fg":2}],["                                                                                           ",{}]],"6":[["  #single_line_width_base                                                                                                          ",{}]],"7":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"8":[["                                                                                                                                   ",{}]],"9":[["Y2R::AST::Ruby::Def                                                                                                                ",{}]],"10":[["  #to_ruby_base                                                                                                                    ",{}]],"11":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"12":[["    for single-line method definitions                                                                                             ",{}]],"13":[["      passes correct context to args",{"fg":2}],["                                                                                               ",{}]],"14":[["      passes correct context to statements",{"fg":2}],["                                                                                         ",{}]],"15":[["    for nulti-line method definitions                                                                                              ",{}]],"16":[["      passes correct context to args",{"fg":2}],["                                                                                               ",{}]],"17":[["      passes correct context to statements",{"fg":2}],["                                                                                         ",{}]],"18":[["  #single_line_width_base                                                                                                          ",{}]],"19":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"20":[["                                                                                                                                   ",{}]],"21":[["Y2R::AST::Ruby::Statements                                                                                                         ",{}]],"22":[["  #to_ruby_base                                                                                                                    ",{}]],"23":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"24":[["    passes correct context to statements",{"fg":2}],["                                                                                           ",{}]],"25":[["  #single_line_width_base                                                                                                          ",{}]],"26":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"27":[["    passes correct context to statements",{"fg":2}],["                                                                                           ",{}]],"28":[["                                                                                                                                   ",{}]],"29":[["Y2R::AST::Ruby::Begin                                                                                                              ",{}]],"30":[["  #to_ruby_base                                                                                                                    ",{}]],"31":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"33":[["  #single_line_width_base                                                                                                          ",{}]],"34":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"35":[["                                                                                                                                   ",{}]],"36":[["Y2R::AST::Ruby::If                                                                                                                 ",{}]],"37":[["  #to_ruby_base                                                                                                                    ",{}]],"38":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"39":[["    for single-line if statements                                                                                                  ",{}]],"40":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"41":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"42":[["    for multi-line if statements                                                                                                   ",{}]],"43":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"44":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"45":[["      passes correct context to else",{"fg":2}],["                                                                                               ",{}]],"46":[["  #single_line_width_base                                                                                                          ",{}]],"47":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"48":[["    passes correct context to condition",{"fg":2}],["                                                                                            ",{}]],"49":[["    passes correct context to then",{"fg":2}],["                                                                                                 ",{}]],"50":[["                                                                                                                                   ",{}]],"51":[["Y2R::AST::Ruby::Unless                                                                                                             ",{}]],"52":[["  #to_ruby_base                                                                                                                    ",{}]]}}],[0.013127,{"lines":{"0":[["  #to_ruby_base                                                                                                                    ",{}]],"1":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"2":[["    passes correct context to statements",{"fg":2}],["                                                                                           ",{}]],"3":[["  #single_line_width_base                                                                                                          ",{}]],"4":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"5":[["                                                                                                                                   ",{}]],"6":[["Y2R::AST::Ruby::Def                                                                                                                ",{}]],"7":[["  #to_ruby_base                                                                                                                    ",{}]],"8":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"9":[["    for single-line method definitions                                                                                             ",{}]],"10":[["      passes correct context to args",{"fg":2}],["                                                                                               ",{}]],"11":[["      passes correct context to statements",{"fg":2}],["                                                                                         ",{}]],"12":[["    for nulti-line method definitions                                                                                              ",{}]],"15":[["  #single_line_width_base                                                                                                          ",{}]],"16":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"17":[["                                                                                                                                   ",{}]],"18":[["Y2R::AST::Ruby::Statements                                                                                                         ",{}]],"19":[["  #to_ruby_base                                                                                                                    ",{}]],"20":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"21":[["    passes correct context to statements",{"fg":2}],["                                                                                           ",{}]],"22":[["  #single_line_width_base                                                                                                          ",{}]],"23":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"25":[["                                                                                                                                   ",{}]],"26":[["Y2R::AST::Ruby::Begin                                                                                                              ",{}]],"27":[["  #to_ruby_base                                                                                                                    ",{}]],"28":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"29":[["    passes correct context to statements",{"fg":2}],["                                                                                           ",{}]],"30":[["  #single_line_width_base                                                                                                          ",{}]],"31":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"32":[["                                                                                                                                   ",{}]],"33":[["Y2R::AST::Ruby::If                                                                                                                 ",{}]],"34":[["  #to_ruby_base                                                                                                                    ",{}]],"35":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"36":[["    for single-line if statements                                                                                                  ",{}]],"37":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"38":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"39":[["    for multi-line if statements                                                                                                   ",{}]],"42":[["      passes correct context to else",{"fg":2}],["                                                                                               ",{}]],"43":[["  #single_line_width_base                                                                                                          ",{}]],"44":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"45":[["    passes correct context to condition",{"fg":2}],["                                                                                            ",{}]],"46":[["    passes correct context to then",{"fg":2}],["                                                                                                 ",{}]],"47":[["                                                                                                                                   ",{}]],"48":[["Y2R::AST::Ruby::Unless                                                                                                             ",{}]],"49":[["  #to_ruby_base                                                                                                                    ",{}]],"50":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"51":[["    for single-line unless statements                                                                                              ",{}]],"52":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]]}}],[0.014462,{"lines":{"0":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"1":[["                                                                                                                                   ",{}]],"2":[["Y2R::AST::Ruby::Def                                                                                                                ",{}]],"3":[["  #to_ruby_base                                                                                                                    ",{}]],"4":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"5":[["    for single-line method definitions                                                                                             ",{}]],"6":[["      passes correct context to args",{"fg":2}],["                                                                                               ",{}]],"7":[["      passes correct context to statements",{"fg":2}],["                                                                                         ",{}]],"8":[["    for nulti-line method definitions                                                                                              ",{}]],"9":[["      passes correct context to args",{"fg":2}],["                                                                                               ",{}]],"10":[["      passes correct context to statements",{"fg":2}],["                                                                                         ",{}]],"11":[["  #single_line_width_base                                                                                                          ",{}]],"12":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"13":[["                                                                                                                                   ",{}]],"14":[["Y2R::AST::Ruby::Statements                                                                                                         ",{}]],"15":[["  #to_ruby_base                                                                                                                    ",{}]],"16":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"17":[["    passes correct context to statements",{"fg":2}],["                                                                                           ",{}]],"18":[["  #single_line_width_base                                                                                                          ",{}]],"19":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"20":[["    passes correct context to statements",{"fg":2}],["                                                                                           ",{}]],"21":[["                                                                                                                                   ",{}]],"22":[["Y2R::AST::Ruby::Begin                                                                                                              ",{}]],"23":[["  #to_ruby_base                                                                                                                    ",{}]],"24":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"25":[["    passes correct context to statements",{"fg":2}],["                                                                                           ",{}]],"26":[["  #single_line_width_base                                                                                                          ",{}]],"27":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"28":[["                                                                                                                                   ",{}]],"29":[["Y2R::AST::Ruby::If                                                                                                                 ",{}]],"30":[["  #to_ruby_base                                                                                                                    ",{}]],"31":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"32":[["    for single-line if statements                                                                                                  ",{}]],"33":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"34":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"35":[["    for multi-line if statements                                                                                                   ",{}]],"36":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"37":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"38":[["      passes correct context to else",{"fg":2}],["                                                                                               ",{}]],"39":[["  #single_line_width_base                                                                                                          ",{}]],"40":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"41":[["    passes correct context to condition",{"fg":2}],["                                                                                            ",{}]],"42":[["    passes correct context to then",{"fg":2}],["                                                                                                 ",{}]],"43":[["                                                                                                                                   ",{}]],"44":[["Y2R::AST::Ruby::Unless                                                                                                             ",{}]],"45":[["  #to_ruby_base                                                                                                                    ",{}]],"46":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"47":[["    for single-line unless statements                                                                                              ",{}]],"48":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"49":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"50":[["    for multi-line unless statements                                                                                               ",{}]],"51":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"52":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]]}}],[0.016515,{"lines":{"0":[["    for nulti-line method definitions                                                                                              ",{}]],"1":[["      passes correct context to args",{"fg":2}],["                                                                                               ",{}]],"2":[["      passes correct context to statements",{"fg":2}],["                                                                                         ",{}]],"3":[["  #single_line_width_base                                                                                                          ",{}]],"4":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"5":[["                                                                                                                                   ",{}]],"6":[["Y2R::AST::Ruby::Statements                                                                                                         ",{}]],"7":[["  #to_ruby_base                                                                                                                    ",{}]],"8":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"9":[["    passes correct context to statements",{"fg":2}],["                                                                                           ",{}]],"10":[["  #single_line_width_base                                                                                                          ",{}]],"11":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"12":[["    passes correct context to statements",{"fg":2}],["                                                                                           ",{}]],"14":[["Y2R::AST::Ruby::Begin                                                                                                              ",{}]],"20":[["                                                                                                                                   ",{}]],"21":[["Y2R::AST::Ruby::If                                                                                                                 ",{}]],"22":[["  #to_ruby_base                                                                                                                    ",{}]],"23":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"24":[["    for single-line if statements                                                                                                  ",{}]],"25":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"26":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"27":[["    for multi-line if statements                                                                                                   ",{}]],"28":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"29":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"30":[["      passes correct context to else",{"fg":2}],["                                                                                               ",{}]],"31":[["  #single_line_width_base                                                                                                          ",{}]],"32":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"33":[["    passes correct context to condition",{"fg":2}],["                                                                                            ",{}]],"34":[["    passes correct context to then",{"fg":2}],["                                                                                                 ",{}]],"35":[["                                                                                                                                   ",{}]],"36":[["Y2R::AST::Ruby::Unless                                                                                                             ",{}]],"37":[["  #to_ruby_base                                                                                                                    ",{}]],"38":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"39":[["    for single-line unless statements                                                                                              ",{}]],"40":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"41":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"42":[["    for multi-line unless statements                                                                                               ",{}]],"43":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"44":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"45":[["      passes correct context to else",{"fg":2}],["                                                                                               ",{}]],"46":[["  #single_line_width_base                                                                                                          ",{}]],"47":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"48":[["    passes correct context to condition",{"fg":2}],["                                                                                            ",{}]],"49":[["    passes correct context to then",{"fg":2}],["                                                                                                 ",{}]],"50":[["                                                                                                                                   ",{}]],"51":[["Y2R::AST::Ruby::Case                                                                                                               ",{}]],"52":[["  #to_ruby_base                                                                                                                    ",{}]]}}],[0.031226,{"lines":{"0":[["      passes correct context to args",{"fg":2}],["                                                                                               ",{}]],"1":[["      passes correct context to statements",{"fg":2}],["                                                                                         ",{}]],"2":[["  #single_line_width_base                                                                                                          ",{}]],"3":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"4":[["                                                                                                                                   ",{}]],"5":[["Y2R::AST::Ruby::Statements                                                                                                         ",{}]],"6":[["  #to_ruby_base                                                                                                                    ",{}]],"7":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"8":[["    passes correct context to statements",{"fg":2}],["                                                                                           ",{}]],"9":[["  #single_line_width_base                                                                                                          ",{}]],"10":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"11":[["    passes correct context to statements",{"fg":2}],["                                                                                           ",{}]],"12":[["                                                                                                                                   ",{}]],"13":[["Y2R::AST::Ruby::Begin                                                                                                              ",{}]],"14":[["  #to_ruby_base                                                                                                                    ",{}]],"15":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"16":[["    passes correct context to statements",{"fg":2}],["                                                                                           ",{}]],"17":[["  #single_line_width_base                                                                                                          ",{}]],"18":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"19":[["                                                                                                                                   ",{}]],"20":[["Y2R::AST::Ruby::If                                                                                                                 ",{}]],"21":[["  #to_ruby_base                                                                                                                    ",{}]],"22":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"23":[["    for single-line if statements                                                                                                  ",{}]],"24":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"25":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"26":[["    for multi-line if statements                                                                                                   ",{}]],"27":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"28":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"29":[["      passes correct context to else",{"fg":2}],["                                                                                               ",{}]],"30":[["  #single_line_width_base                                                                                                          ",{}]],"31":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"32":[["    passes correct context to condition",{"fg":2}],["                                                                                            ",{}]],"33":[["    passes correct context to then",{"fg":2}],["                                                                                                 ",{}]],"34":[["                                                                                                                                   ",{}]],"35":[["Y2R::AST::Ruby::Unless                                                                                                             ",{}]],"36":[["  #to_ruby_base                                                                                                                    ",{}]],"37":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"38":[["    for single-line unless statements                                                                                              ",{}]],"39":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"40":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"41":[["    for multi-line unless statements                                                                                               ",{}]],"42":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"43":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"44":[["      passes correct context to else",{"fg":2}],["                                                                                               ",{}]],"45":[["  #single_line_width_base                                                                                                          ",{}]],"46":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"47":[["    passes correct context to condition",{"fg":2}],["                                                                                            ",{}]],"48":[["    passes correct context to then",{"fg":2}],["                                                                                                 ",{}]],"49":[["                                                                                                                                   ",{}]],"50":[["Y2R::AST::Ruby::Case                                                                                                               ",{}]],"51":[["  #to_ruby_base                                                                                                                    ",{}]],"52":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]]}}],[0.012072,{"lines":{"0":[["  #single_line_width_base                                                                                                          ",{}]],"1":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"2":[["                                                                                                                                   ",{}]],"3":[["Y2R::AST::Ruby::Statements                                                                                                         ",{}]],"4":[["  #to_ruby_base                                                                                                                    ",{}]],"5":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"6":[["    passes correct context to statements",{"fg":2}],["                                                                                           ",{}]],"7":[["  #single_line_width_base                                                                                                          ",{}]],"8":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"9":[["    passes correct context to statements",{"fg":2}],["                                                                                           ",{}]],"10":[["                                                                                                                                   ",{}]],"11":[["Y2R::AST::Ruby::Begin                                                                                                              ",{}]],"12":[["  #to_ruby_base                                                                                                                    ",{}]],"13":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"14":[["    passes correct context to statements",{"fg":2}],["                                                                                           ",{}]],"15":[["  #single_line_width_base                                                                                                          ",{}]],"16":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"17":[["                                                                                                                                   ",{}]],"18":[["Y2R::AST::Ruby::If                                                                                                                 ",{}]],"19":[["  #to_ruby_base                                                                                                                    ",{}]],"20":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"21":[["    for single-line if statements                                                                                                  ",{}]],"22":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"23":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"24":[["    for multi-line if statements                                                                                                   ",{}]],"25":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"26":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"27":[["      passes correct context to else",{"fg":2}],["                                                                                               ",{}]],"28":[["  #single_line_width_base                                                                                                          ",{}]],"29":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"30":[["    passes correct context to condition",{"fg":2}],["                                                                                            ",{}]],"31":[["    passes correct context to then",{"fg":2}],["                                                                                                 ",{}]],"32":[["                                                                                                                                   ",{}]],"33":[["Y2R::AST::Ruby::Unless                                                                                                             ",{}]],"34":[["  #to_ruby_base                                                                                                                    ",{}]],"35":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"36":[["    for single-line unless statements                                                                                              ",{}]],"37":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"38":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"39":[["    for multi-line unless statements                                                                                               ",{}]],"40":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"41":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"42":[["      passes correct context to else",{"fg":2}],["                                                                                               ",{}]],"43":[["  #single_line_width_base                                                                                                          ",{}]],"44":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"45":[["    passes correct context to condition",{"fg":2}],["                                                                                            ",{}]],"46":[["    passes correct context to then",{"fg":2}],["                                                                                                 ",{}]],"47":[["                                                                                                                                   ",{}]],"48":[["Y2R::AST::Ruby::Case                                                                                                               ",{}]],"49":[["  #to_ruby_base                                                                                                                    ",{}]],"50":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"51":[["    passes correct context to expression",{"fg":2}],["                                                                                           ",{}]],"52":[["    passes correct context to whens",{"fg":2}],["                                                                                                ",{}]]}}],[0.005403,{"lines":{"0":[["                                                                                                                                   ",{}]],"1":[["Y2R::AST::Ruby::Statements                                                                                                         ",{}]],"2":[["  #to_ruby_base                                                                                                                    ",{}]],"3":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"4":[["    passes correct context to statements",{"fg":2}],["                                                                                           ",{}]],"5":[["  #single_line_width_base                                                                                                          ",{}]],"6":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"7":[["    passes correct context to statements",{"fg":2}],["                                                                                           ",{}]],"8":[["                                                                                                                                   ",{}]],"9":[["Y2R::AST::Ruby::Begin                                                                                                              ",{}]],"10":[["  #to_ruby_base                                                                                                                    ",{}]],"11":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"12":[["    passes correct context to statements",{"fg":2}],["                                                                                           ",{}]],"13":[["  #single_line_width_base                                                                                                          ",{}]],"14":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"15":[["                                                                                                                                   ",{}]],"16":[["Y2R::AST::Ruby::If                                                                                                                 ",{}]],"17":[["  #to_ruby_base                                                                                                                    ",{}]],"18":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"19":[["    for single-line if statements                                                                                                  ",{}]],"20":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"21":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"22":[["    for multi-line if statements                                                                                                   ",{}]],"23":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"24":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"25":[["      passes correct context to else",{"fg":2}],["                                                                                               ",{}]],"26":[["  #single_line_width_base                                                                                                          ",{}]],"27":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"28":[["    passes correct context to condition",{"fg":2}],["                                                                                            ",{}]],"29":[["    passes correct context to then",{"fg":2}],["                                                                                                 ",{}]],"30":[["                                                                                                                                   ",{}]],"31":[["Y2R::AST::Ruby::Unless                                                                                                             ",{}]],"32":[["  #to_ruby_base                                                                                                                    ",{}]],"33":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"34":[["    for single-line unless statements                                                                                              ",{}]],"35":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"36":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"37":[["    for multi-line unless statements                                                                                               ",{}]],"38":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"39":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"40":[["      passes correct context to else",{"fg":2}],["                                                                                               ",{}]],"41":[["  #single_line_width_base                                                                                                          ",{}]],"42":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"43":[["    passes correct context to condition",{"fg":2}],["                                                                                            ",{}]],"44":[["    passes correct context to then",{"fg":2}],["                                                                                                 ",{}]],"45":[["                                                                                                                                   ",{}]],"46":[["Y2R::AST::Ruby::Case                                                                                                               ",{}]],"47":[["  #to_ruby_base                                                                                                                    ",{}]],"48":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"49":[["    passes correct context to expression",{"fg":2}],["                                                                                           ",{}]],"50":[["    passes correct context to whens",{"fg":2}],["                                                                                                ",{}]],"51":[["    passes correct context to else",{"fg":2}],["                                                                                                 ",{}]],"52":[["  #single_line_width_base                                                                                                          ",{}]]}}],[0.04369,{"lines":{"0":[["Y2R::AST::Ruby::Statements                                                                                                         ",{}]],"1":[["  #to_ruby_base                                                                                                                    ",{}]],"2":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"3":[["    passes correct context to statements",{"fg":2}],["                                                                                           ",{}]],"4":[["  #single_line_width_base                                                                                                          ",{}]],"5":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"6":[["    passes correct context to statements",{"fg":2}],["                                                                                           ",{}]],"7":[["                                                                                                                                   ",{}]],"8":[["Y2R::AST::Ruby::Begin                                                                                                              ",{}]],"9":[["  #to_ruby_base                                                                                                                    ",{}]],"10":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"11":[["    passes correct context to statements",{"fg":2}],["                                                                                           ",{}]],"12":[["  #single_line_width_base                                                                                                          ",{}]],"13":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"14":[["                                                                                                                                   ",{}]],"15":[["Y2R::AST::Ruby::If                                                                                                                 ",{}]],"16":[["  #to_ruby_base                                                                                                                    ",{}]],"17":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"18":[["    for single-line if statements                                                                                                  ",{}]],"19":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"20":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"21":[["    for multi-line if statements                                                                                                   ",{}]],"22":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"23":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"24":[["      passes correct context to else",{"fg":2}],["                                                                                               ",{}]],"25":[["  #single_line_width_base                                                                                                          ",{}]],"26":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"27":[["    passes correct context to condition",{"fg":2}],["                                                                                            ",{}]],"28":[["    passes correct context to then",{"fg":2}],["                                                                                                 ",{}]],"29":[["                                                                                                                                   ",{}]],"30":[["Y2R::AST::Ruby::Unless                                                                                                             ",{}]],"31":[["  #to_ruby_base                                                                                                                    ",{}]],"32":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"33":[["    for single-line unless statements                                                                                              ",{}]],"34":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"35":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"36":[["    for multi-line unless statements                                                                                               ",{}]],"37":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"38":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"39":[["      passes correct context to else",{"fg":2}],["                                                                                               ",{}]],"40":[["  #single_line_width_base                                                                                                          ",{}]],"41":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"42":[["    passes correct context to condition",{"fg":2}],["                                                                                            ",{}]],"43":[["    passes correct context to then",{"fg":2}],["                                                                                                 ",{}]],"44":[["                                                                                                                                   ",{}]],"45":[["Y2R::AST::Ruby::Case                                                                                                               ",{}]],"46":[["  #to_ruby_base                                                                                                                    ",{}]],"47":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"48":[["    passes correct context to expression",{"fg":2}],["                                                                                           ",{}]],"49":[["    passes correct context to whens",{"fg":2}],["                                                                                                ",{}]],"50":[["    passes correct context to else",{"fg":2}],["                                                                                                 ",{}]],"51":[["  #single_line_width_base                                                                                                          ",{}]],"52":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]]}}],[0.008446,{"lines":{"0":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"1":[["    passes correct context to statements",{"fg":2}],["                                                                                           ",{}]],"2":[["                                                                                                                                   ",{}]],"3":[["Y2R::AST::Ruby::Begin                                                                                                              ",{}]],"4":[["  #to_ruby_base                                                                                                                    ",{}]],"5":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"7":[["  #single_line_width_base                                                                                                          ",{}]],"8":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"9":[["                                                                                                                                   ",{}]],"10":[["Y2R::AST::Ruby::If                                                                                                                 ",{}]],"11":[["  #to_ruby_base                                                                                                                    ",{}]],"12":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"13":[["    for single-line if statements                                                                                                  ",{}]],"14":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"15":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"16":[["    for multi-line if statements                                                                                                   ",{}]],"17":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"18":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"19":[["      passes correct context to else",{"fg":2}],["                                                                                               ",{}]],"20":[["  #single_line_width_base                                                                                                          ",{}]],"21":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"22":[["    passes correct context to condition",{"fg":2}],["                                                                                            ",{}]],"23":[["    passes correct context to then",{"fg":2}],["                                                                                                 ",{}]],"24":[["                                                                                                                                   ",{}]],"25":[["Y2R::AST::Ruby::Unless                                                                                                             ",{}]],"26":[["  #to_ruby_base                                                                                                                    ",{}]],"27":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"28":[["    for single-line unless statements                                                                                              ",{}]],"29":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"30":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"31":[["    for multi-line unless statements                                                                                               ",{}]],"32":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"33":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"34":[["      passes correct context to else",{"fg":2}],["                                                                                               ",{}]],"35":[["  #single_line_width_base                                                                                                          ",{}]],"36":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"37":[["    passes correct context to condition",{"fg":2}],["                                                                                            ",{}]],"38":[["    passes correct context to then",{"fg":2}],["                                                                                                 ",{}]],"39":[["                                                                                                                                   ",{}]],"40":[["Y2R::AST::Ruby::Case                                                                                                               ",{}]],"41":[["  #to_ruby_base                                                                                                                    ",{}]],"42":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"43":[["    passes correct context to expression",{"fg":2}],["                                                                                           ",{}]],"44":[["    passes correct context to whens",{"fg":2}],["                                                                                                ",{}]],"45":[["    passes correct context to else",{"fg":2}],["                                                                                                 ",{}]],"46":[["  #single_line_width_base                                                                                                          ",{}]],"47":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"48":[["                                                                                                                                   ",{}]],"49":[["Y2R::AST::Ruby::When                                                                                                               ",{}]],"50":[["  #to_ruby_base                                                                                                                    ",{}]],"51":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"52":[["    for single-line when clauses                                                                                                   ",{}]]}}],[0.014562,{"lines":{"0":[["Y2R::AST::Ruby::Begin                                                                                                              ",{}]],"1":[["  #to_ruby_base                                                                                                                    ",{}]],"2":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"3":[["    passes correct context to statements",{"fg":2}],["                                                                                           ",{}]],"4":[["  #single_line_width_base                                                                                                          ",{}]],"5":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"6":[["                                                                                                                                   ",{}]],"7":[["Y2R::AST::Ruby::If                                                                                                                 ",{}]],"8":[["  #to_ruby_base                                                                                                                    ",{}]],"9":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"10":[["    for single-line if statements                                                                                                  ",{}]],"11":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"12":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"13":[["    for multi-line if statements                                                                                                   ",{}]],"16":[["      passes correct context to else",{"fg":2}],["                                                                                               ",{}]],"17":[["  #single_line_width_base                                                                                                          ",{}]],"18":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"19":[["    passes correct context to condition",{"fg":2}],["                                                                                            ",{}]],"20":[["    passes correct context to then",{"fg":2}],["                                                                                                 ",{}]],"21":[["                                                                                                                                   ",{}]],"22":[["Y2R::AST::Ruby::Unless                                                                                                             ",{}]],"23":[["  #to_ruby_base                                                                                                                    ",{}]],"24":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"25":[["    for single-line unless statements                                                                                              ",{}]],"26":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"27":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"28":[["    for multi-line unless statements                                                                                               ",{}]],"31":[["      passes correct context to else",{"fg":2}],["                                                                                               ",{}]],"32":[["  #single_line_width_base                                                                                                          ",{}]],"33":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"34":[["    passes correct context to condition",{"fg":2}],["                                                                                            ",{}]],"35":[["    passes correct context to then",{"fg":2}],["                                                                                                 ",{}]],"36":[["                                                                                                                                   ",{}]],"37":[["Y2R::AST::Ruby::Case                                                                                                               ",{}]],"38":[["  #to_ruby_base                                                                                                                    ",{}]],"39":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"40":[["    passes correct context to expression",{"fg":2}],["                                                                                           ",{}]],"41":[["    passes correct context to whens",{"fg":2}],["                                                                                                ",{}]],"42":[["    passes correct context to else",{"fg":2}],["                                                                                                 ",{}]],"43":[["  #single_line_width_base                                                                                                          ",{}]],"44":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"45":[["                                                                                                                                   ",{}]],"46":[["Y2R::AST::Ruby::When                                                                                                               ",{}]],"47":[["  #to_ruby_base                                                                                                                    ",{}]],"48":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"49":[["    for single-line when clauses                                                                                                   ",{}]],"50":[["      passes correct context to values",{"fg":2}],["                                                                                             ",{}]],"51":[["      passes correct context to body",{"fg":2}],["                                                                                               ",{}]],"52":[["    for multi-line when clauses                                                                                                    ",{}]]}}],[0.01599399999999999,{"lines":{"0":[["  #to_ruby_base                                                                                                                    ",{}]],"1":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"2":[["    for single-line if statements                                                                                                  ",{}]],"3":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"4":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"5":[["    for multi-line if statements                                                                                                   ",{}]],"6":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"7":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"8":[["      passes correct context to else",{"fg":2}],["                                                                                               ",{}]],"9":[["  #single_line_width_base                                                                                                          ",{}]],"10":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"11":[["    passes correct context to condition",{"fg":2}],["                                                                                            ",{}]],"12":[["    passes correct context to then",{"fg":2}],["                                                                                                 ",{}]],"13":[["                                                                                                                                   ",{}]],"14":[["Y2R::AST::Ruby::Unless                                                                                                             ",{}]],"15":[["  #to_ruby_base                                                                                                                    ",{}]],"16":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"17":[["    for single-line unless statements                                                                                              ",{}]],"18":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"19":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"20":[["    for multi-line unless statements                                                                                               ",{}]],"21":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"22":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"23":[["      passes correct context to else",{"fg":2}],["                                                                                               ",{}]],"24":[["  #single_line_width_base                                                                                                          ",{}]],"25":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"26":[["    passes correct context to condition",{"fg":2}],["                                                                                            ",{}]],"27":[["    passes correct context to then",{"fg":2}],["                                                                                                 ",{}]],"28":[["                                                                                                                                   ",{}]],"29":[["Y2R::AST::Ruby::Case                                                                                                               ",{}]],"30":[["  #to_ruby_base                                                                                                                    ",{}]],"31":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"32":[["    passes correct context to expression",{"fg":2}],["                                                                                           ",{}]],"33":[["    passes correct context to whens",{"fg":2}],["                                                                                                ",{}]],"34":[["    passes correct context to else",{"fg":2}],["                                                                                                 ",{}]],"35":[["  #single_line_width_base                                                                                                          ",{}]],"36":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"37":[["                                                                                                                                   ",{}]],"38":[["Y2R::AST::Ruby::When                                                                                                               ",{}]],"39":[["  #to_ruby_base                                                                                                                    ",{}]],"40":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"41":[["    for single-line when clauses                                                                                                   ",{}]],"42":[["      passes correct context to values",{"fg":2}],["                                                                                             ",{}]],"43":[["      passes correct context to body",{"fg":2}],["                                                                                               ",{}]],"44":[["    for multi-line when clauses                                                                                                    ",{}]],"45":[["      passes correct context to values",{"fg":2}],["                                                                                             ",{}]],"46":[["      passes correct context to body",{"fg":2}],["                                                                                               ",{}]],"47":[["  #single_line_width_base                                                                                                          ",{}]],"48":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"49":[["                                                                                                                                   ",{}]],"50":[["Y2R::AST::Ruby::Else                                                                                                               ",{}]],"51":[["  #to_ruby_base                                                                                                                    ",{}]],"52":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]]}}],[0.016172,{"lines":{"0":[["      passes correct context to else",{"fg":2}],["                                                                                               ",{}]],"1":[["  #single_line_width_base                                                                                                          ",{}]],"2":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"3":[["    passes correct context to condition",{"fg":2}],["                                                                                            ",{}]],"4":[["    passes correct context to then",{"fg":2}],["                                                                                                 ",{}]],"5":[["                                                                                                                                   ",{}]],"6":[["Y2R::AST::Ruby::Unless                                                                                                             ",{}]],"7":[["  #to_ruby_base                                                                                                                    ",{}]],"8":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"9":[["    for single-line unless statements                                                                                              ",{}]],"10":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"11":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"12":[["    for multi-line unless statements                                                                                               ",{}]],"13":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"14":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"15":[["      passes correct context to else",{"fg":2}],["                                                                                               ",{}]],"16":[["  #single_line_width_base                                                                                                          ",{}]],"17":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"18":[["    passes correct context to condition",{"fg":2}],["                                                                                            ",{}]],"19":[["    passes correct context to then",{"fg":2}],["                                                                                                 ",{}]],"20":[["                                                                                                                                   ",{}]],"21":[["Y2R::AST::Ruby::Case                                                                                                               ",{}]],"22":[["  #to_ruby_base                                                                                                                    ",{}]],"23":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"24":[["    passes correct context to expression",{"fg":2}],["                                                                                           ",{}]],"25":[["    passes correct context to whens",{"fg":2}],["                                                                                                ",{}]],"26":[["    passes correct context to else",{"fg":2}],["                                                                                                 ",{}]],"27":[["  #single_line_width_base                                                                                                          ",{}]],"28":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"29":[["                                                                                                                                   ",{}]],"30":[["Y2R::AST::Ruby::When                                                                                                               ",{}]],"31":[["  #to_ruby_base                                                                                                                    ",{}]],"32":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"33":[["    for single-line when clauses                                                                                                   ",{}]],"34":[["      passes correct context to values",{"fg":2}],["                                                                                             ",{}]],"35":[["      passes correct context to body",{"fg":2}],["                                                                                               ",{}]],"36":[["    for multi-line when clauses                                                                                                    ",{}]],"37":[["      passes correct context to values",{"fg":2}],["                                                                                             ",{}]],"38":[["      passes correct context to body",{"fg":2}],["                                                                                               ",{}]],"39":[["  #single_line_width_base                                                                                                          ",{}]],"40":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"41":[["                                                                                                                                   ",{}]],"42":[["Y2R::AST::Ruby::Else                                                                                                               ",{}]],"43":[["  #to_ruby_base                                                                                                                    ",{}]],"44":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"45":[["    passes correct context to body",{"fg":2}],["                                                                                                 ",{}]],"46":[["  #single_line_width_base                                                                                                          ",{}]],"47":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"48":[["                                                                                                                                   ",{}]],"49":[["Y2R::AST::Ruby::While                                                                                                              ",{}]],"50":[["  #to_ruby_base                                                                                                                    ",{}]],"51":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"52":[["    passes correct context to condition",{"fg":2}],["                                                                                            ",{}]]}}],[0.015952,{"lines":{"0":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"1":[["    for single-line unless statements                                                                                              ",{}]],"2":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"3":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"4":[["    for multi-line unless statements                                                                                               ",{}]],"5":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"6":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"7":[["      passes correct context to else",{"fg":2}],["                                                                                               ",{}]],"8":[["  #single_line_width_base                                                                                                          ",{}]],"9":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"10":[["    passes correct context to condition",{"fg":2}],["                                                                                            ",{}]],"11":[["    passes correct context to then",{"fg":2}],["                                                                                                 ",{}]],"12":[["                                                                                                                                   ",{}]],"13":[["Y2R::AST::Ruby::Case                                                                                                               ",{}]],"14":[["  #to_ruby_base                                                                                                                    ",{}]],"15":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"16":[["    passes correct context to expression",{"fg":2}],["                                                                                           ",{}]],"17":[["    passes correct context to whens",{"fg":2}],["                                                                                                ",{}]],"18":[["    passes correct context to else",{"fg":2}],["                                                                                                 ",{}]],"19":[["  #single_line_width_base                                                                                                          ",{}]],"20":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"21":[["                                                                                                                                   ",{}]],"22":[["Y2R::AST::Ruby::When                                                                                                               ",{}]],"23":[["  #to_ruby_base                                                                                                                    ",{}]],"24":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"25":[["    for single-line when clauses                                                                                                   ",{}]],"26":[["      passes correct context to values",{"fg":2}],["                                                                                             ",{}]],"27":[["      passes correct context to body",{"fg":2}],["                                                                                               ",{}]],"28":[["    for multi-line when clauses                                                                                                    ",{}]],"29":[["      passes correct context to values",{"fg":2}],["                                                                                             ",{}]],"30":[["      passes correct context to body",{"fg":2}],["                                                                                               ",{}]],"31":[["  #single_line_width_base                                                                                                          ",{}]],"32":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"33":[["                                                                                                                                   ",{}]],"34":[["Y2R::AST::Ruby::Else                                                                                                               ",{}]],"35":[["  #to_ruby_base                                                                                                                    ",{}]],"36":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"37":[["    passes correct context to body",{"fg":2}],["                                                                                                 ",{}]],"38":[["  #single_line_width_base                                                                                                          ",{}]],"39":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"40":[["                                                                                                                                   ",{}]],"41":[["Y2R::AST::Ruby::While                                                                                                              ",{}]],"42":[["  #to_ruby_base                                                                                                                    ",{}]],"43":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"44":[["    passes correct context to condition",{"fg":2}],["                                                                                            ",{}]],"49":[["Y2R::AST::Ruby::Until                                                                                                              ",{}]]}}],[0.015721,{"lines":{"0":[["  #to_ruby_base                                                                                                                    ",{}]],"1":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"2":[["    passes correct context to expression",{"fg":2}],["                                                                                           ",{}]],"3":[["    passes correct context to whens",{"fg":2}],["                                                                                                ",{}]],"4":[["    passes correct context to else",{"fg":2}],["                                                                                                 ",{}]],"5":[["  #single_line_width_base                                                                                                          ",{}]],"6":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"7":[["                                                                                                                                   ",{}]],"8":[["Y2R::AST::Ruby::When                                                                                                               ",{}]],"9":[["  #to_ruby_base                                                                                                                    ",{}]],"10":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"11":[["    for single-line when clauses                                                                                                   ",{}]],"12":[["      passes correct context to values",{"fg":2}],["                                                                                             ",{}]],"13":[["      passes correct context to body",{"fg":2}],["                                                                                               ",{}]],"14":[["    for multi-line when clauses                                                                                                    ",{}]],"15":[["      passes correct context to values",{"fg":2}],["                                                                                             ",{}]],"16":[["      passes correct context to body",{"fg":2}],["                                                                                               ",{}]],"17":[["  #single_line_width_base                                                                                                          ",{}]],"18":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"19":[["                                                                                                                                   ",{}]],"20":[["Y2R::AST::Ruby::Else                                                                                                               ",{}]],"21":[["  #to_ruby_base                                                                                                                    ",{}]],"22":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"23":[["    passes correct context to body",{"fg":2}],["                                                                                                 ",{}]],"24":[["  #single_line_width_base                                                                                                          ",{}]],"25":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"26":[["                                                                                                                                   ",{}]],"27":[["Y2R::AST::Ruby::While                                                                                                              ",{}]],"28":[["  #to_ruby_base                                                                                                                    ",{}]],"29":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"30":[["    passes correct context to condition",{"fg":2}],["                                                                                            ",{}]],"31":[["    passes correct context to body",{"fg":2}],["                                                                                                 ",{}]],"32":[["  #single_line_width_base                                                                                                          ",{}]],"33":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"34":[["                                                                                                                                   ",{}]],"35":[["Y2R::AST::Ruby::Until                                                                                                              ",{}]],"36":[["  #to_ruby_base                                                                                                                    ",{}]],"37":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"38":[["    passes correct context to condition",{"fg":2}],["                                                                                            ",{}]],"39":[["    passes correct context to body",{"fg":2}],["                                                                                                 ",{}]],"40":[["  #single_line_width_base                                                                                                          ",{}]],"41":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"42":[["                                                                                                                                   ",{}]],"43":[["Y2R::AST::Ruby::Break                                                                                                              ",{}]],"44":[["  #to_ruby_base                                                                                                                    ",{}]],"45":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"49":[["Y2R::AST::Ruby::Next                                                                                                               ",{}]],"52":[["    for single-line next statements                                                                                                ",{}]]}}],[0.015249,{"lines":{"0":[["    for single-line when clauses                                                                                                   ",{}]],"1":[["      passes correct context to values",{"fg":2}],["                                                                                             ",{}]],"2":[["      passes correct context to body",{"fg":2}],["                                                                                               ",{}]],"3":[["    for multi-line when clauses                                                                                                    ",{}]],"4":[["      passes correct context to values",{"fg":2}],["                                                                                             ",{}]],"5":[["      passes correct context to body",{"fg":2}],["                                                                                               ",{}]],"6":[["  #single_line_width_base                                                                                                          ",{}]],"7":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"8":[["                                                                                                                                   ",{}]],"9":[["Y2R::AST::Ruby::Else                                                                                                               ",{}]],"10":[["  #to_ruby_base                                                                                                                    ",{}]],"11":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"12":[["    passes correct context to body",{"fg":2}],["                                                                                                 ",{}]],"13":[["  #single_line_width_base                                                                                                          ",{}]],"14":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"15":[["                                                                                                                                   ",{}]],"16":[["Y2R::AST::Ruby::While                                                                                                              ",{}]],"17":[["  #to_ruby_base                                                                                                                    ",{}]],"18":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"19":[["    passes correct context to condition",{"fg":2}],["                                                                                            ",{}]],"20":[["    passes correct context to body",{"fg":2}],["                                                                                                 ",{}]],"21":[["  #single_line_width_base                                                                                                          ",{}]],"22":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"23":[["                                                                                                                                   ",{}]],"24":[["Y2R::AST::Ruby::Until                                                                                                              ",{}]],"25":[["  #to_ruby_base                                                                                                                    ",{}]],"26":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"27":[["    passes correct context to condition",{"fg":2}],["                                                                                            ",{}]],"28":[["    passes correct context to body",{"fg":2}],["                                                                                                 ",{}]],"29":[["  #single_line_width_base                                                                                                          ",{}]],"30":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"31":[["                                                                                                                                   ",{}]],"32":[["Y2R::AST::Ruby::Break                                                                                                              ",{}]],"33":[["  #to_ruby_base                                                                                                                    ",{}]],"34":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"35":[["  #single_line_width_base                                                                                                          ",{}]],"36":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"37":[["                                                                                                                                   ",{}]],"38":[["Y2R::AST::Ruby::Next                                                                                                               ",{}]],"39":[["  #to_ruby_base                                                                                                                    ",{}]],"40":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"41":[["    for single-line next statements                                                                                                ",{}]],"42":[["      passes correct context to value",{"fg":2}],["                                                                                              ",{}]],"43":[["    for multi-line next statements                                                                                                 ",{}]],"44":[["      passes correct context to value",{"fg":2}],["                                                                                              ",{}]],"45":[["  #single_line_width_base                                                                                                          ",{}]],"46":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"47":[["    passes correct context to value",{"fg":2}],["                                                                                                ",{}]],"49":[["Y2R::AST::Ruby::Return                                                                                                             ",{}]]}}],[0.012534,{"lines":{"0":[["  #to_ruby_base                                                                                                                    ",{}]],"1":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"2":[["    passes correct context to body",{"fg":2}],["                                                                                                 ",{}]],"3":[["  #single_line_width_base                                                                                                          ",{}]],"4":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"5":[["                                                                                                                                   ",{}]],"6":[["Y2R::AST::Ruby::While                                                                                                              ",{}]],"7":[["  #to_ruby_base                                                                                                                    ",{}]],"8":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"9":[["    passes correct context to condition",{"fg":2}],["                                                                                            ",{}]],"10":[["    passes correct context to body",{"fg":2}],["                                                                                                 ",{}]],"11":[["  #single_line_width_base                                                                                                          ",{}]],"12":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"13":[["                                                                                                                                   ",{}]],"14":[["Y2R::AST::Ruby::Until                                                                                                              ",{}]],"15":[["  #to_ruby_base                                                                                                                    ",{}]],"16":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"17":[["    passes correct context to condition",{"fg":2}],["                                                                                            ",{}]],"18":[["    passes correct context to body",{"fg":2}],["                                                                                                 ",{}]],"19":[["  #single_line_width_base                                                                                                          ",{}]],"20":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"21":[["                                                                                                                                   ",{}]],"22":[["Y2R::AST::Ruby::Break                                                                                                              ",{}]],"23":[["  #to_ruby_base                                                                                                                    ",{}]],"24":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"25":[["  #single_line_width_base                                                                                                          ",{}]],"26":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"27":[["                                                                                                                                   ",{}]],"28":[["Y2R::AST::Ruby::Next                                                                                                               ",{}]],"29":[["  #to_ruby_base                                                                                                                    ",{}]],"30":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"31":[["    for single-line next statements                                                                                                ",{}]],"32":[["      passes correct context to value",{"fg":2}],["                                                                                              ",{}]],"33":[["    for multi-line next statements                                                                                                 ",{}]],"34":[["      passes correct context to value",{"fg":2}],["                                                                                              ",{}]],"37":[["    passes correct context to value",{"fg":2}],["                                                                                                ",{}]],"38":[["                                                                                                                                   ",{}]],"39":[["Y2R::AST::Ruby::Return                                                                                                             ",{}]],"40":[["  #to_ruby_base                                                                                                                    ",{}]],"41":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"42":[["    for single-line next statements                                                                                                ",{}]],"43":[["      passes correct context to value",{"fg":2}],["                                                                                              ",{}]],"44":[["    for multi-line next statements                                                                                                 ",{}]],"45":[["      passes correct context to value",{"fg":2}],["                                                                                              ",{}]],"46":[["  #single_line_width_base                                                                                                          ",{}]],"47":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"48":[["    passes correct context to value",{"fg":2}],["                                                                                                ",{}]],"49":[["                                                                                                                                   ",{}]],"50":[["Y2R::AST::Ruby::Expressions                                                                                                        ",{}]],"51":[["  #to_ruby_base                                                                                                                    ",{}]],"52":[["    with lot of space available                                                                                                    ",{}]]}}],[0.011099,{"lines":{"0":[["  #single_line_width_base                                                                                                          ",{}]],"1":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"2":[["                                                                                                                                   ",{}]],"3":[["Y2R::AST::Ruby::While                                                                                                              ",{}]],"4":[["  #to_ruby_base                                                                                                                    ",{}]],"5":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"6":[["    passes correct context to condition",{"fg":2}],["                                                                                            ",{}]],"7":[["    passes correct context to body",{"fg":2}],["                                                                                                 ",{}]],"8":[["  #single_line_width_base                                                                                                          ",{}]],"9":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"10":[["                                                                                                                                   ",{}]],"11":[["Y2R::AST::Ruby::Until                                                                                                              ",{}]],"12":[["  #to_ruby_base                                                                                                                    ",{}]],"13":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"14":[["    passes correct context to condition",{"fg":2}],["                                                                                            ",{}]],"15":[["    passes correct context to body",{"fg":2}],["                                                                                                 ",{}]],"16":[["  #single_line_width_base                                                                                                          ",{}]],"17":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"18":[["                                                                                                                                   ",{}]],"19":[["Y2R::AST::Ruby::Break                                                                                                              ",{}]],"20":[["  #to_ruby_base                                                                                                                    ",{}]],"21":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"22":[["  #single_line_width_base                                                                                                          ",{}]],"23":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"24":[["                                                                                                                                   ",{}]],"25":[["Y2R::AST::Ruby::Next                                                                                                               ",{}]],"26":[["  #to_ruby_base                                                                                                                    ",{}]],"27":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"28":[["    for single-line next statements                                                                                                ",{}]],"29":[["      passes correct context to value",{"fg":2}],["                                                                                              ",{}]],"30":[["    for multi-line next statements                                                                                                 ",{}]],"31":[["      passes correct context to value",{"fg":2}],["                                                                                              ",{}]],"32":[["  #single_line_width_base                                                                                                          ",{}]],"33":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"34":[["    passes correct context to value",{"fg":2}],["                                                                                                ",{}]],"35":[["                                                                                                                                   ",{}]],"36":[["Y2R::AST::Ruby::Return                                                                                                             ",{}]],"37":[["  #to_ruby_base                                                                                                                    ",{}]],"38":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"39":[["    for single-line next statements                                                                                                ",{}]],"40":[["      passes correct context to value",{"fg":2}],["                                                                                              ",{}]],"41":[["    for multi-line next statements                                                                                                 ",{}]],"42":[["      passes correct context to value",{"fg":2}],["                                                                                              ",{}]],"43":[["  #single_line_width_base                                                                                                          ",{}]],"44":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"45":[["    passes correct context to value",{"fg":2}],["                                                                                                ",{}]],"46":[["                                                                                                                                   ",{}]],"47":[["Y2R::AST::Ruby::Expressions                                                                                                        ",{}]],"48":[["  #to_ruby_base                                                                                                                    ",{}]],"49":[["    with lot of space available                                                                                                    ",{}]],"50":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"51":[["      passes correct context to expressions",{"fg":2}],["                                                                                        ",{}]],"52":[["    with no space available                                                                                                        ",{}]]}}],[0.014814,{"lines":{"0":[["  #to_ruby_base                                                                                                                    ",{}]],"1":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"2":[["    passes correct context to condition",{"fg":2}],["                                                                                            ",{}]],"3":[["    passes correct context to body",{"fg":2}],["                                                                                                 ",{}]],"4":[["  #single_line_width_base                                                                                                          ",{}]],"5":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"6":[["                                                                                                                                   ",{}]],"7":[["Y2R::AST::Ruby::Until                                                                                                              ",{}]],"8":[["  #to_ruby_base                                                                                                                    ",{}]],"9":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"10":[["    passes correct context to condition",{"fg":2}],["                                                                                            ",{}]],"11":[["    passes correct context to body",{"fg":2}],["                                                                                                 ",{}]],"12":[["  #single_line_width_base                                                                                                          ",{}]],"13":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"14":[["                                                                                                                                   ",{}]],"15":[["Y2R::AST::Ruby::Break                                                                                                              ",{}]],"16":[["  #to_ruby_base                                                                                                                    ",{}]],"17":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"18":[["  #single_line_width_base                                                                                                          ",{}]],"19":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"20":[["                                                                                                                                   ",{}]],"21":[["Y2R::AST::Ruby::Next                                                                                                               ",{}]],"22":[["  #to_ruby_base                                                                                                                    ",{}]],"23":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"24":[["    for single-line next statements                                                                                                ",{}]],"25":[["      passes correct context to value",{"fg":2}],["                                                                                              ",{}]],"26":[["    for multi-line next statements                                                                                                 ",{}]],"27":[["      passes correct context to value",{"fg":2}],["                                                                                              ",{}]],"28":[["  #single_line_width_base                                                                                                          ",{}]],"29":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"30":[["    passes correct context to value",{"fg":2}],["                                                                                                ",{}]],"31":[["                                                                                                                                   ",{}]],"32":[["Y2R::AST::Ruby::Return                                                                                                             ",{}]],"33":[["  #to_ruby_base                                                                                                                    ",{}]],"34":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"35":[["    for single-line next statements                                                                                                ",{}]],"36":[["      passes correct context to value",{"fg":2}],["                                                                                              ",{}]],"37":[["    for multi-line next statements                                                                                                 ",{}]],"38":[["      passes correct context to value",{"fg":2}],["                                                                                              ",{}]],"39":[["  #single_line_width_base                                                                                                          ",{}]],"40":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"41":[["    passes correct context to value",{"fg":2}],["                                                                                                ",{}]],"42":[["                                                                                                                                   ",{}]],"43":[["Y2R::AST::Ruby::Expressions                                                                                                        ",{}]],"44":[["  #to_ruby_base                                                                                                                    ",{}]],"45":[["    with lot of space available                                                                                                    ",{}]],"46":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"47":[["      passes correct context to expressions",{"fg":2}],["                                                                                        ",{}]],"48":[["    with no space available                                                                                                        ",{}]],"49":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"50":[["      passes correct context to expressions",{"fg":2}],["                                                                                        ",{}]],"51":[["  #single_line_width_base                                                                                                          ",{}]],"52":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]]}}],[0.008126,{"lines":{"0":[["                                                                                                                                   ",{}]],"1":[["Y2R::AST::Ruby::Until                                                                                                              ",{}]],"2":[["  #to_ruby_base                                                                                                                    ",{}]],"3":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"4":[["    passes correct context to condition",{"fg":2}],["                                                                                            ",{}]],"5":[["    passes correct context to body",{"fg":2}],["                                                                                                 ",{}]],"6":[["  #single_line_width_base                                                                                                          ",{}]],"7":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"8":[["                                                                                                                                   ",{}]],"9":[["Y2R::AST::Ruby::Break                                                                                                              ",{}]],"10":[["  #to_ruby_base                                                                                                                    ",{}]],"11":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"15":[["Y2R::AST::Ruby::Next                                                                                                               ",{}]],"18":[["    for single-line next statements                                                                                                ",{}]],"19":[["      passes correct context to value",{"fg":2}],["                                                                                              ",{}]],"20":[["    for multi-line next statements                                                                                                 ",{}]],"21":[["      passes correct context to value",{"fg":2}],["                                                                                              ",{}]],"22":[["  #single_line_width_base                                                                                                          ",{}]],"23":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"24":[["    passes correct context to value",{"fg":2}],["                                                                                                ",{}]],"25":[["                                                                                                                                   ",{}]],"26":[["Y2R::AST::Ruby::Return                                                                                                             ",{}]],"27":[["  #to_ruby_base                                                                                                                    ",{}]],"28":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"29":[["    for single-line next statements                                                                                                ",{}]],"30":[["      passes correct context to value",{"fg":2}],["                                                                                              ",{}]],"31":[["    for multi-line next statements                                                                                                 ",{}]],"32":[["      passes correct context to value",{"fg":2}],["                                                                                              ",{}]],"33":[["  #single_line_width_base                                                                                                          ",{}]],"34":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"35":[["    passes correct context to value",{"fg":2}],["                                                                                                ",{}]],"36":[["                                                                                                                                   ",{}]],"37":[["Y2R::AST::Ruby::Expressions                                                                                                        ",{}]],"38":[["  #to_ruby_base                                                                                                                    ",{}]],"39":[["    with lot of space available                                                                                                    ",{}]],"40":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"41":[["      passes correct context to expressions",{"fg":2}],["                                                                                        ",{}]],"42":[["    with no space available                                                                                                        ",{}]],"43":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"44":[["      passes correct context to expressions",{"fg":2}],["                                                                                        ",{}]],"45":[["  #single_line_width_base                                                                                                          ",{}]],"46":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"47":[["    passes correct context to expressions",{"fg":2}],["                                                                                          ",{}]],"48":[["                                                                                                                                   ",{}]],"49":[["Y2R::AST::Ruby::Assignment                                                                                                         ",{}]],"50":[["  #to_ruby_base                                                                                                                    ",{}]],"51":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"52":[["    for single-line assignments                                                                                                    ",{}]]}}],[0.018343,{"lines":{"0":[["Y2R::AST::Ruby::Until                                                                                                              ",{}]],"1":[["  #to_ruby_base                                                                                                                    ",{}]],"2":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"3":[["    passes correct context to condition",{"fg":2}],["                                                                                            ",{}]],"4":[["    passes correct context to body",{"fg":2}],["                                                                                                 ",{}]],"5":[["  #single_line_width_base                                                                                                          ",{}]],"6":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"7":[["                                                                                                                                   ",{}]],"8":[["Y2R::AST::Ruby::Break                                                                                                              ",{}]],"9":[["  #to_ruby_base                                                                                                                    ",{}]],"10":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"11":[["  #single_line_width_base                                                                                                          ",{}]],"12":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"13":[["                                                                                                                                   ",{}]],"14":[["Y2R::AST::Ruby::Next                                                                                                               ",{}]],"15":[["  #to_ruby_base                                                                                                                    ",{}]],"16":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"17":[["    for single-line next statements                                                                                                ",{}]],"18":[["      passes correct context to value",{"fg":2}],["                                                                                              ",{}]],"19":[["    for multi-line next statements                                                                                                 ",{}]],"20":[["      passes correct context to value",{"fg":2}],["                                                                                              ",{}]],"21":[["  #single_line_width_base                                                                                                          ",{}]],"22":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"23":[["    passes correct context to value",{"fg":2}],["                                                                                                ",{}]],"24":[["                                                                                                                                   ",{}]],"25":[["Y2R::AST::Ruby::Return                                                                                                             ",{}]],"26":[["  #to_ruby_base                                                                                                                    ",{}]],"27":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"28":[["    for single-line next statements                                                                                                ",{}]],"29":[["      passes correct context to value",{"fg":2}],["                                                                                              ",{}]],"30":[["    for multi-line next statements                                                                                                 ",{}]],"31":[["      passes correct context to value",{"fg":2}],["                                                                                              ",{}]],"32":[["  #single_line_width_base                                                                                                          ",{}]],"33":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"34":[["    passes correct context to value",{"fg":2}],["                                                                                                ",{}]],"35":[["                                                                                                                                   ",{}]],"36":[["Y2R::AST::Ruby::Expressions                                                                                                        ",{}]],"37":[["  #to_ruby_base                                                                                                                    ",{}]],"38":[["    with lot of space available                                                                                                    ",{}]],"39":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"40":[["      passes correct context to expressions",{"fg":2}],["                                                                                        ",{}]],"41":[["    with no space available                                                                                                        ",{}]],"42":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"43":[["      passes correct context to expressions",{"fg":2}],["                                                                                        ",{}]],"44":[["  #single_line_width_base                                                                                                          ",{}]],"45":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"46":[["    passes correct context to expressions",{"fg":2}],["                                                                                          ",{}]],"47":[["                                                                                                                                   ",{}]],"48":[["Y2R::AST::Ruby::Assignment                                                                                                         ",{}]],"49":[["  #to_ruby_base                                                                                                                    ",{}]],"50":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"51":[["    for single-line assignments                                                                                                    ",{}]],"52":[["      passes correct context to lhs",{"fg":2}],["                                                                                                ",{}]]}}],[0.015212,{"lines":{"0":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"1":[["                                                                                                                                   ",{}]],"2":[["Y2R::AST::Ruby::Break                                                                                                              ",{}]],"3":[["  #to_ruby_base                                                                                                                    ",{}]],"4":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"8":[["Y2R::AST::Ruby::Next                                                                                                               ",{}]],"11":[["    for single-line next statements                                                                                                ",{}]],"12":[["      passes correct context to value",{"fg":2}],["                                                                                              ",{}]],"13":[["    for multi-line next statements                                                                                                 ",{}]],"14":[["      passes correct context to value",{"fg":2}],["                                                                                              ",{}]],"15":[["  #single_line_width_base                                                                                                          ",{}]],"16":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"17":[["    passes correct context to value",{"fg":2}],["                                                                                                ",{}]],"18":[["                                                                                                                                   ",{}]],"19":[["Y2R::AST::Ruby::Return                                                                                                             ",{}]],"20":[["  #to_ruby_base                                                                                                                    ",{}]],"21":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"22":[["    for single-line next statements                                                                                                ",{}]],"23":[["      passes correct context to value",{"fg":2}],["                                                                                              ",{}]],"24":[["    for multi-line next statements                                                                                                 ",{}]],"25":[["      passes correct context to value",{"fg":2}],["                                                                                              ",{}]],"26":[["  #single_line_width_base                                                                                                          ",{}]],"27":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"28":[["    passes correct context to value",{"fg":2}],["                                                                                                ",{}]],"29":[["                                                                                                                                   ",{}]],"30":[["Y2R::AST::Ruby::Expressions                                                                                                        ",{}]],"31":[["  #to_ruby_base                                                                                                                    ",{}]],"32":[["    with lot of space available                                                                                                    ",{}]],"33":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"34":[["      passes correct context to expressions",{"fg":2}],["                                                                                        ",{}]],"35":[["    with no space available                                                                                                        ",{}]],"36":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"37":[["      passes correct context to expressions",{"fg":2}],["                                                                                        ",{}]],"38":[["  #single_line_width_base                                                                                                          ",{}]],"39":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"40":[["    passes correct context to expressions",{"fg":2}],["                                                                                          ",{}]],"41":[["                                                                                                                                   ",{}]],"42":[["Y2R::AST::Ruby::Assignment                                                                                                         ",{}]],"43":[["  #to_ruby_base                                                                                                                    ",{}]],"44":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"45":[["    for single-line assignments                                                                                                    ",{}]],"46":[["      passes correct context to lhs",{"fg":2}],["                                                                                                ",{}]],"47":[["      passes correct context to rhs",{"fg":2}],["                                                                                                ",{}]],"48":[["    for multi-line assignments                                                                                                     ",{}]],"49":[["      passes correct context to lhs",{"fg":2}],["                                                                                                ",{}]],"50":[["      passes correct context to rhs",{"fg":2}],["                                                                                                ",{}]],"51":[["  #single_line_width                                                                                                               ",{}]],"52":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]]}}],[0.050754,{"lines":{"0":[["                                                                                                                                   ",{}]],"1":[["Y2R::AST::Ruby::Break                                                                                                              ",{}]],"2":[["  #to_ruby_base                                                                                                                    ",{}]],"3":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"4":[["  #single_line_width_base                                                                                                          ",{}]],"5":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"6":[["                                                                                                                                   ",{}]],"7":[["Y2R::AST::Ruby::Next                                                                                                               ",{}]],"8":[["  #to_ruby_base                                                                                                                    ",{}]],"9":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"10":[["    for single-line next statements                                                                                                ",{}]],"11":[["      passes correct context to value",{"fg":2}],["                                                                                              ",{}]],"12":[["    for multi-line next statements                                                                                                 ",{}]],"13":[["      passes correct context to value",{"fg":2}],["                                                                                              ",{}]],"14":[["  #single_line_width_base                                                                                                          ",{}]],"15":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"16":[["    passes correct context to value",{"fg":2}],["                                                                                                ",{}]],"17":[["                                                                                                                                   ",{}]],"18":[["Y2R::AST::Ruby::Return                                                                                                             ",{}]],"19":[["  #to_ruby_base                                                                                                                    ",{}]],"20":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"21":[["    for single-line next statements                                                                                                ",{}]],"22":[["      passes correct context to value",{"fg":2}],["                                                                                              ",{}]],"23":[["    for multi-line next statements                                                                                                 ",{}]],"24":[["      passes correct context to value",{"fg":2}],["                                                                                              ",{}]],"25":[["  #single_line_width_base                                                                                                          ",{}]],"26":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"27":[["    passes correct context to value",{"fg":2}],["                                                                                                ",{}]],"28":[["                                                                                                                                   ",{}]],"29":[["Y2R::AST::Ruby::Expressions                                                                                                        ",{}]],"30":[["  #to_ruby_base                                                                                                                    ",{}]],"31":[["    with lot of space available                                                                                                    ",{}]],"32":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"33":[["      passes correct context to expressions",{"fg":2}],["                                                                                        ",{}]],"34":[["    with no space available                                                                                                        ",{}]],"35":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"36":[["      passes correct context to expressions",{"fg":2}],["                                                                                        ",{}]],"37":[["  #single_line_width_base                                                                                                          ",{}]],"38":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"39":[["    passes correct context to expressions",{"fg":2}],["                                                                                          ",{}]],"40":[["                                                                                                                                   ",{}]],"41":[["Y2R::AST::Ruby::Assignment                                                                                                         ",{}]],"42":[["  #to_ruby_base                                                                                                                    ",{}]],"43":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"44":[["    for single-line assignments                                                                                                    ",{}]],"45":[["      passes correct context to lhs",{"fg":2}],["                                                                                                ",{}]],"46":[["      passes correct context to rhs",{"fg":2}],["                                                                                                ",{}]],"47":[["    for multi-line assignments                                                                                                     ",{}]],"48":[["      passes correct context to lhs",{"fg":2}],["                                                                                                ",{}]],"49":[["      passes correct context to rhs",{"fg":2}],["                                                                                                ",{}]],"50":[["  #single_line_width                                                                                                               ",{}]],"51":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"52":[["    passes correct context to lhs",{"fg":2}],["                                                                                                  ",{}]]}}],[0.016637,{"lines":{"0":[["    for multi-line next statements                                                                                                 ",{}]],"1":[["      passes correct context to value",{"fg":2}],["                                                                                              ",{}]],"2":[["  #single_line_width_base                                                                                                          ",{}]],"3":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"4":[["    passes correct context to value",{"fg":2}],["                                                                                                ",{}]],"5":[["                                                                                                                                   ",{}]],"6":[["Y2R::AST::Ruby::Return                                                                                                             ",{}]],"7":[["  #to_ruby_base                                                                                                                    ",{}]],"8":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"9":[["    for single-line next statements                                                                                                ",{}]],"10":[["      passes correct context to value",{"fg":2}],["                                                                                              ",{}]],"11":[["    for multi-line next statements                                                                                                 ",{}]],"12":[["      passes correct context to value",{"fg":2}],["                                                                                              ",{}]],"13":[["  #single_line_width_base                                                                                                          ",{}]],"14":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"15":[["    passes correct context to value",{"fg":2}],["                                                                                                ",{}]],"16":[["                                                                                                                                   ",{}]],"17":[["Y2R::AST::Ruby::Expressions                                                                                                        ",{}]],"18":[["  #to_ruby_base                                                                                                                    ",{}]],"19":[["    with lot of space available                                                                                                    ",{}]],"20":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"21":[["      passes correct context to expressions",{"fg":2}],["                                                                                        ",{}]],"22":[["    with no space available                                                                                                        ",{}]],"23":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"24":[["      passes correct context to expressions",{"fg":2}],["                                                                                        ",{}]],"27":[["    passes correct context to expressions",{"fg":2}],["                                                                                          ",{}]],"29":[["Y2R::AST::Ruby::Assignment                                                                                                         ",{}]],"31":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"32":[["    for single-line assignments                                                                                                    ",{}]],"33":[["      passes correct context to lhs",{"fg":2}],["                                                                                                ",{}]],"34":[["      passes correct context to rhs",{"fg":2}],["                                                                                                ",{}]],"35":[["    for multi-line assignments                                                                                                     ",{}]],"36":[["      passes correct context to lhs",{"fg":2}],["                                                                                                ",{}]],"37":[["      passes correct context to rhs",{"fg":2}],["                                                                                                ",{}]],"38":[["  #single_line_width                                                                                                               ",{}]],"39":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"40":[["    passes correct context to lhs",{"fg":2}],["                                                                                                  ",{}]],"41":[["    passes correct context to rhs",{"fg":2}],["                                                                                                  ",{}]],"42":[["                                                                                                                                   ",{}]],"43":[["Y2R::AST::Ruby::UnaryOperator                                                                                                      ",{}]],"44":[["  #to_ruby_base                                                                                                                    ",{}]],"45":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"46":[["    passes correct context to expression",{"fg":2}],["                                                                                           ",{}]],"47":[["  #single_line_width_base                                                                                                          ",{}]],"48":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"49":[["    passes correct context to expression",{"fg":2}],["                                                                                           ",{}]],"50":[["                                                                                                                                   ",{}]],"51":[["Y2R::AST::Ruby::BinaryOperator                                                                                                     ",{}]],"52":[["  #to_ruby_base                                                                                                                    ",{}]]}}],[0.014463,{"lines":{"0":[["                                                                                                                                   ",{}]],"1":[["Y2R::AST::Ruby::Return                                                                                                             ",{}]],"2":[["  #to_ruby_base                                                                                                                    ",{}]],"3":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"4":[["    for single-line next statements                                                                                                ",{}]],"5":[["      passes correct context to value",{"fg":2}],["                                                                                              ",{}]],"6":[["    for multi-line next statements                                                                                                 ",{}]],"7":[["      passes correct context to value",{"fg":2}],["                                                                                              ",{}]],"8":[["  #single_line_width_base                                                                                                          ",{}]],"9":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"10":[["    passes correct context to value",{"fg":2}],["                                                                                                ",{}]],"11":[["                                                                                                                                   ",{}]],"12":[["Y2R::AST::Ruby::Expressions                                                                                                        ",{}]],"13":[["  #to_ruby_base                                                                                                                    ",{}]],"14":[["    with lot of space available                                                                                                    ",{}]],"15":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"16":[["      passes correct context to expressions",{"fg":2}],["                                                                                        ",{}]],"17":[["    with no space available                                                                                                        ",{}]],"18":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"19":[["      passes correct context to expressions",{"fg":2}],["                                                                                        ",{}]],"20":[["  #single_line_width_base                                                                                                          ",{}]],"21":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"22":[["    passes correct context to expressions",{"fg":2}],["                                                                                          ",{}]],"23":[["                                                                                                                                   ",{}]],"24":[["Y2R::AST::Ruby::Assignment                                                                                                         ",{}]],"25":[["  #to_ruby_base                                                                                                                    ",{}]],"26":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"27":[["    for single-line assignments                                                                                                    ",{}]],"28":[["      passes correct context to lhs",{"fg":2}],["                                                                                                ",{}]],"29":[["      passes correct context to rhs",{"fg":2}],["                                                                                                ",{}]],"30":[["    for multi-line assignments                                                                                                     ",{}]],"31":[["      passes correct context to lhs",{"fg":2}],["                                                                                                ",{}]],"32":[["      passes correct context to rhs",{"fg":2}],["                                                                                                ",{}]],"33":[["  #single_line_width                                                                                                               ",{}]],"34":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"35":[["    passes correct context to lhs",{"fg":2}],["                                                                                                  ",{}]],"36":[["    passes correct context to rhs",{"fg":2}],["                                                                                                  ",{}]],"37":[["                                                                                                                                   ",{}]],"38":[["Y2R::AST::Ruby::UnaryOperator                                                                                                      ",{}]],"39":[["  #to_ruby_base                                                                                                                    ",{}]],"40":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"41":[["    passes correct context to expression",{"fg":2}],["                                                                                           ",{}]],"42":[["  #single_line_width_base                                                                                                          ",{}]],"43":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"44":[["    passes correct context to expression",{"fg":2}],["                                                                                           ",{}]],"45":[["                                                                                                                                   ",{}]],"46":[["Y2R::AST::Ruby::BinaryOperator                                                                                                     ",{}]],"47":[["  #to_ruby_base                                                                                                                    ",{}]],"48":[["    with lot of space available                                                                                                    ",{}]],"49":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"50":[["      passes correct context to lhs",{"fg":2}],["                                                                                                ",{}]],"51":[["      passes correct context to rhs",{"fg":2}],["                                                                                                ",{}]],"52":[["    with no space available                                                                                                        ",{}]]}}],[0.014106,{"lines":{"0":[["    for single-line next statements                                                                                                ",{}]],"1":[["      passes correct context to value",{"fg":2}],["                                                                                              ",{}]],"2":[["    for multi-line next statements                                                                                                 ",{}]],"3":[["      passes correct context to value",{"fg":2}],["                                                                                              ",{}]],"4":[["  #single_line_width_base                                                                                                          ",{}]],"5":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"6":[["    passes correct context to value",{"fg":2}],["                                                                                                ",{}]],"7":[["                                                                                                                                   ",{}]],"8":[["Y2R::AST::Ruby::Expressions                                                                                                        ",{}]],"9":[["  #to_ruby_base                                                                                                                    ",{}]],"10":[["    with lot of space available                                                                                                    ",{}]],"11":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"12":[["      passes correct context to expressions",{"fg":2}],["                                                                                        ",{}]],"13":[["    with no space available                                                                                                        ",{}]],"14":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"15":[["      passes correct context to expressions",{"fg":2}],["                                                                                        ",{}]],"16":[["  #single_line_width_base                                                                                                          ",{}]],"17":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"18":[["    passes correct context to expressions",{"fg":2}],["                                                                                          ",{}]],"19":[["                                                                                                                                   ",{}]],"20":[["Y2R::AST::Ruby::Assignment                                                                                                         ",{}]],"21":[["  #to_ruby_base                                                                                                                    ",{}]],"22":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"23":[["    for single-line assignments                                                                                                    ",{}]],"24":[["      passes correct context to lhs",{"fg":2}],["                                                                                                ",{}]],"25":[["      passes correct context to rhs",{"fg":2}],["                                                                                                ",{}]],"26":[["    for multi-line assignments                                                                                                     ",{}]],"27":[["      passes correct context to lhs",{"fg":2}],["                                                                                                ",{}]],"28":[["      passes correct context to rhs",{"fg":2}],["                                                                                                ",{}]],"29":[["  #single_line_width                                                                                                               ",{}]],"30":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"31":[["    passes correct context to lhs",{"fg":2}],["                                                                                                  ",{}]],"32":[["    passes correct context to rhs",{"fg":2}],["                                                                                                  ",{}]],"33":[["                                                                                                                                   ",{}]],"34":[["Y2R::AST::Ruby::UnaryOperator                                                                                                      ",{}]],"35":[["  #to_ruby_base                                                                                                                    ",{}]],"36":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"37":[["    passes correct context to expression",{"fg":2}],["                                                                                           ",{}]],"38":[["  #single_line_width_base                                                                                                          ",{}]],"39":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"40":[["    passes correct context to expression",{"fg":2}],["                                                                                           ",{}]],"41":[["                                                                                                                                   ",{}]],"42":[["Y2R::AST::Ruby::BinaryOperator                                                                                                     ",{}]],"43":[["  #to_ruby_base                                                                                                                    ",{}]],"44":[["    with lot of space available                                                                                                    ",{}]],"45":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"46":[["      passes correct context to lhs",{"fg":2}],["                                                                                                ",{}]],"47":[["      passes correct context to rhs",{"fg":2}],["                                                                                                ",{}]],"48":[["    with no space available                                                                                                        ",{}]],"52":[["  #single_line_width_base                                                                                                          ",{}]]}}],[0.01004,{"lines":{"0":[["                                                                                                                                   ",{}]],"1":[["Y2R::AST::Ruby::Expressions                                                                                                        ",{}]],"2":[["  #to_ruby_base                                                                                                                    ",{}]],"3":[["    with lot of space available                                                                                                    ",{}]],"4":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"5":[["      passes correct context to expressions",{"fg":2}],["                                                                                        ",{}]],"6":[["    with no space available                                                                                                        ",{}]],"7":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"8":[["      passes correct context to expressions",{"fg":2}],["                                                                                        ",{}]],"9":[["  #single_line_width_base                                                                                                          ",{}]],"10":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"11":[["    passes correct context to expressions",{"fg":2}],["                                                                                          ",{}]],"12":[["                                                                                                                                   ",{}]],"13":[["Y2R::AST::Ruby::Assignment                                                                                                         ",{}]],"14":[["  #to_ruby_base                                                                                                                    ",{}]],"15":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"16":[["    for single-line assignments                                                                                                    ",{}]],"17":[["      passes correct context to lhs",{"fg":2}],["                                                                                                ",{}]],"18":[["      passes correct context to rhs",{"fg":2}],["                                                                                                ",{}]],"19":[["    for multi-line assignments                                                                                                     ",{}]],"20":[["      passes correct context to lhs",{"fg":2}],["                                                                                                ",{}]],"21":[["      passes correct context to rhs",{"fg":2}],["                                                                                                ",{}]],"22":[["  #single_line_width                                                                                                               ",{}]],"23":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"24":[["    passes correct context to lhs",{"fg":2}],["                                                                                                  ",{}]],"25":[["    passes correct context to rhs",{"fg":2}],["                                                                                                  ",{}]],"26":[["                                                                                                                                   ",{}]],"27":[["Y2R::AST::Ruby::UnaryOperator                                                                                                      ",{}]],"28":[["  #to_ruby_base                                                                                                                    ",{}]],"29":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"30":[["    passes correct context to expression",{"fg":2}],["                                                                                           ",{}]],"31":[["  #single_line_width_base                                                                                                          ",{}]],"32":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"33":[["    passes correct context to expression",{"fg":2}],["                                                                                           ",{}]],"34":[["                                                                                                                                   ",{}]],"35":[["Y2R::AST::Ruby::BinaryOperator                                                                                                     ",{}]],"36":[["  #to_ruby_base                                                                                                                    ",{}]],"37":[["    with lot of space available                                                                                                    ",{}]],"38":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"39":[["      passes correct context to lhs",{"fg":2}],["                                                                                                ",{}]],"40":[["      passes correct context to rhs",{"fg":2}],["                                                                                                ",{}]],"41":[["    with no space available                                                                                                        ",{}]],"42":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"43":[["      passes correct context to lhs",{"fg":2}],["                                                                                                ",{}]],"44":[["      passes correct context to rhs",{"fg":2}],["                                                                                                ",{}]],"45":[["  #single_line_width_base                                                                                                          ",{}]],"46":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"47":[["    passes correct context to lhs",{"fg":2}],["                                                                                                  ",{}]],"48":[["    passes correct context to rhs",{"fg":2}],["                                                                                                  ",{}]],"49":[["                                                                                                                                   ",{}]],"50":[["Y2R::AST::Ruby::TernaryOperator                                                                                                    ",{}]],"51":[["  #to_ruby_base                                                                                                                    ",{}]],"52":[["    with lot of space available                                                                                                    ",{}]]}}],[0.012768,{"lines":{"0":[["  #to_ruby_base                                                                                                                    ",{}]],"1":[["    with lot of space available                                                                                                    ",{}]],"2":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"3":[["      passes correct context to expressions",{"fg":2}],["                                                                                        ",{}]],"4":[["    with no space available                                                                                                        ",{}]],"5":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"6":[["      passes correct context to expressions",{"fg":2}],["                                                                                        ",{}]],"7":[["  #single_line_width_base                                                                                                          ",{}]],"8":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"9":[["    passes correct context to expressions",{"fg":2}],["                                                                                          ",{}]],"10":[["                                                                                                                                   ",{}]],"11":[["Y2R::AST::Ruby::Assignment                                                                                                         ",{}]],"12":[["  #to_ruby_base                                                                                                                    ",{}]],"13":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"14":[["    for single-line assignments                                                                                                    ",{}]],"15":[["      passes correct context to lhs",{"fg":2}],["                                                                                                ",{}]],"16":[["      passes correct context to rhs",{"fg":2}],["                                                                                                ",{}]],"17":[["    for multi-line assignments                                                                                                     ",{}]],"18":[["      passes correct context to lhs",{"fg":2}],["                                                                                                ",{}]],"19":[["      passes correct context to rhs",{"fg":2}],["                                                                                                ",{}]],"20":[["  #single_line_width                                                                                                               ",{}]],"21":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"22":[["    passes correct context to lhs",{"fg":2}],["                                                                                                  ",{}]],"23":[["    passes correct context to rhs",{"fg":2}],["                                                                                                  ",{}]],"24":[["                                                                                                                                   ",{}]],"25":[["Y2R::AST::Ruby::UnaryOperator                                                                                                      ",{}]],"26":[["  #to_ruby_base                                                                                                                    ",{}]],"27":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"28":[["    passes correct context to expression",{"fg":2}],["                                                                                           ",{}]],"29":[["  #single_line_width_base                                                                                                          ",{}]],"30":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"31":[["    passes correct context to expression",{"fg":2}],["                                                                                           ",{}]],"32":[["                                                                                                                                   ",{}]],"33":[["Y2R::AST::Ruby::BinaryOperator                                                                                                     ",{}]],"34":[["  #to_ruby_base                                                                                                                    ",{}]],"35":[["    with lot of space available                                                                                                    ",{}]],"36":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"37":[["      passes correct context to lhs",{"fg":2}],["                                                                                                ",{}]],"38":[["      passes correct context to rhs",{"fg":2}],["                                                                                                ",{}]],"39":[["    with no space available                                                                                                        ",{}]],"40":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"41":[["      passes correct context to lhs",{"fg":2}],["                                                                                                ",{}]],"42":[["      passes correct context to rhs",{"fg":2}],["                                                                                                ",{}]],"43":[["  #single_line_width_base                                                                                                          ",{}]],"44":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"45":[["    passes correct context to lhs",{"fg":2}],["                                                                                                  ",{}]],"46":[["    passes correct context to rhs",{"fg":2}],["                                                                                                  ",{}]],"47":[["                                                                                                                                   ",{}]],"48":[["Y2R::AST::Ruby::TernaryOperator                                                                                                    ",{}]],"49":[["  #to_ruby_base                                                                                                                    ",{}]],"50":[["    with lot of space available                                                                                                    ",{}]],"51":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"52":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]]}}],[0.016638,{"lines":{"0":[["    with no space available                                                                                                        ",{}]],"1":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"2":[["      passes correct context to expressions",{"fg":2}],["                                                                                        ",{}]],"3":[["  #single_line_width_base                                                                                                          ",{}]],"4":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"5":[["    passes correct context to expressions",{"fg":2}],["                                                                                          ",{}]],"6":[["                                                                                                                                   ",{}]],"7":[["Y2R::AST::Ruby::Assignment                                                                                                         ",{}]],"8":[["  #to_ruby_base                                                                                                                    ",{}]],"9":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"10":[["    for single-line assignments                                                                                                    ",{}]],"11":[["      passes correct context to lhs",{"fg":2}],["                                                                                                ",{}]],"12":[["      passes correct context to rhs",{"fg":2}],["                                                                                                ",{}]],"13":[["    for multi-line assignments                                                                                                     ",{}]],"14":[["      passes correct context to lhs",{"fg":2}],["                                                                                                ",{}]],"15":[["      passes correct context to rhs",{"fg":2}],["                                                                                                ",{}]],"16":[["  #single_line_width                                                                                                               ",{}]],"17":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"18":[["    passes correct context to lhs",{"fg":2}],["                                                                                                  ",{}]],"19":[["    passes correct context to rhs",{"fg":2}],["                                                                                                  ",{}]],"20":[["                                                                                                                                   ",{}]],"21":[["Y2R::AST::Ruby::UnaryOperator                                                                                                      ",{}]],"22":[["  #to_ruby_base                                                                                                                    ",{}]],"23":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"24":[["    passes correct context to expression",{"fg":2}],["                                                                                           ",{}]],"25":[["  #single_line_width_base                                                                                                          ",{}]],"26":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"27":[["    passes correct context to expression",{"fg":2}],["                                                                                           ",{}]],"28":[["                                                                                                                                   ",{}]],"29":[["Y2R::AST::Ruby::BinaryOperator                                                                                                     ",{}]],"30":[["  #to_ruby_base                                                                                                                    ",{}]],"31":[["    with lot of space available                                                                                                    ",{}]],"32":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"33":[["      passes correct context to lhs",{"fg":2}],["                                                                                                ",{}]],"34":[["      passes correct context to rhs",{"fg":2}],["                                                                                                ",{}]],"35":[["    with no space available                                                                                                        ",{}]],"39":[["  #single_line_width_base                                                                                                          ",{}]],"40":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"41":[["    passes correct context to lhs",{"fg":2}],["                                                                                                  ",{}]],"42":[["    passes correct context to rhs",{"fg":2}],["                                                                                                  ",{}]],"43":[["                                                                                                                                   ",{}]],"44":[["Y2R::AST::Ruby::TernaryOperator                                                                                                    ",{}]],"45":[["  #to_ruby_base                                                                                                                    ",{}]],"46":[["    with lot of space available                                                                                                    ",{}]],"47":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"48":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"49":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"50":[["      passes correct context to else",{"fg":2}],["                                                                                               ",{}]],"51":[["    with no space available                                                                                                        ",{}]],"52":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]]}}],[0.013914,{"lines":{"0":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"1":[["    passes correct context to expressions",{"fg":2}],["                                                                                          ",{}]],"2":[["                                                                                                                                   ",{}]],"3":[["Y2R::AST::Ruby::Assignment                                                                                                         ",{}]],"4":[["  #to_ruby_base                                                                                                                    ",{}]],"5":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"6":[["    for single-line assignments                                                                                                    ",{}]],"7":[["      passes correct context to lhs",{"fg":2}],["                                                                                                ",{}]],"8":[["      passes correct context to rhs",{"fg":2}],["                                                                                                ",{}]],"9":[["    for multi-line assignments                                                                                                     ",{}]],"10":[["      passes correct context to lhs",{"fg":2}],["                                                                                                ",{}]],"11":[["      passes correct context to rhs",{"fg":2}],["                                                                                                ",{}]],"12":[["  #single_line_width                                                                                                               ",{}]],"13":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"14":[["    passes correct context to lhs",{"fg":2}],["                                                                                                  ",{}]],"15":[["    passes correct context to rhs",{"fg":2}],["                                                                                                  ",{}]],"16":[["                                                                                                                                   ",{}]],"17":[["Y2R::AST::Ruby::UnaryOperator                                                                                                      ",{}]],"18":[["  #to_ruby_base                                                                                                                    ",{}]],"19":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"20":[["    passes correct context to expression",{"fg":2}],["                                                                                           ",{}]],"21":[["  #single_line_width_base                                                                                                          ",{}]],"22":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"23":[["    passes correct context to expression",{"fg":2}],["                                                                                           ",{}]],"24":[["                                                                                                                                   ",{}]],"25":[["Y2R::AST::Ruby::BinaryOperator                                                                                                     ",{}]],"26":[["  #to_ruby_base                                                                                                                    ",{}]],"27":[["    with lot of space available                                                                                                    ",{}]],"28":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"29":[["      passes correct context to lhs",{"fg":2}],["                                                                                                ",{}]],"30":[["      passes correct context to rhs",{"fg":2}],["                                                                                                ",{}]],"31":[["    with no space available                                                                                                        ",{}]],"35":[["  #single_line_width_base                                                                                                          ",{}]],"36":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"37":[["    passes correct context to lhs",{"fg":2}],["                                                                                                  ",{}]],"38":[["    passes correct context to rhs",{"fg":2}],["                                                                                                  ",{}]],"39":[["                                                                                                                                   ",{}]],"40":[["Y2R::AST::Ruby::TernaryOperator                                                                                                    ",{}]],"41":[["  #to_ruby_base                                                                                                                    ",{}]],"42":[["    with lot of space available                                                                                                    ",{}]],"43":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"44":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"45":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"46":[["      passes correct context to else",{"fg":2}],["                                                                                               ",{}]],"47":[["    with no space available                                                                                                        ",{}]],"48":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"49":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"50":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"51":[["      passes correct context to else",{"fg":2}],["                                                                                               ",{}]],"52":[["  #single_line_width_base                                                                                                          ",{}]]}}],[0.013477,{"lines":{"0":[["      passes correct context to lhs",{"fg":2}],["                                                                                                ",{}]],"1":[["      passes correct context to rhs",{"fg":2}],["                                                                                                ",{}]],"2":[["    for multi-line assignments                                                                                                     ",{}]],"3":[["      passes correct context to lhs",{"fg":2}],["                                                                                                ",{}]],"4":[["      passes correct context to rhs",{"fg":2}],["                                                                                                ",{}]],"5":[["  #single_line_width                                                                                                               ",{}]],"6":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"7":[["    passes correct context to lhs",{"fg":2}],["                                                                                                  ",{}]],"8":[["    passes correct context to rhs",{"fg":2}],["                                                                                                  ",{}]],"9":[["                                                                                                                                   ",{}]],"10":[["Y2R::AST::Ruby::UnaryOperator                                                                                                      ",{}]],"11":[["  #to_ruby_base                                                                                                                    ",{}]],"12":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"13":[["    passes correct context to expression",{"fg":2}],["                                                                                           ",{}]],"14":[["  #single_line_width_base                                                                                                          ",{}]],"15":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"16":[["    passes correct context to expression",{"fg":2}],["                                                                                           ",{}]],"17":[["                                                                                                                                   ",{}]],"18":[["Y2R::AST::Ruby::BinaryOperator                                                                                                     ",{}]],"19":[["  #to_ruby_base                                                                                                                    ",{}]],"20":[["    with lot of space available                                                                                                    ",{}]],"21":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"22":[["      passes correct context to lhs",{"fg":2}],["                                                                                                ",{}]],"23":[["      passes correct context to rhs",{"fg":2}],["                                                                                                ",{}]],"24":[["    with no space available                                                                                                        ",{}]],"25":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"26":[["      passes correct context to lhs",{"fg":2}],["                                                                                                ",{}]],"27":[["      passes correct context to rhs",{"fg":2}],["                                                                                                ",{}]],"28":[["  #single_line_width_base                                                                                                          ",{}]],"29":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"30":[["    passes correct context to lhs",{"fg":2}],["                                                                                                  ",{}]],"31":[["    passes correct context to rhs",{"fg":2}],["                                                                                                  ",{}]],"32":[["                                                                                                                                   ",{}]],"33":[["Y2R::AST::Ruby::TernaryOperator                                                                                                    ",{}]],"34":[["  #to_ruby_base                                                                                                                    ",{}]],"35":[["    with lot of space available                                                                                                    ",{}]],"36":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"37":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"38":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"39":[["      passes correct context to else",{"fg":2}],["                                                                                               ",{}]],"40":[["    with no space available                                                                                                        ",{}]],"41":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"42":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"43":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"44":[["      passes correct context to else",{"fg":2}],["                                                                                               ",{}]],"45":[["  #single_line_width_base                                                                                                          ",{}]],"46":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"47":[["    passes correct context to condition",{"fg":2}],["                                                                                            ",{}]],"48":[["    passes correct context to then",{"fg":2}],["                                                                                                 ",{}]],"49":[["    passes correct context to else",{"fg":2}],["                                                                                                 ",{}]],"50":[["                                                                                                                                   ",{}]],"51":[["Y2R::AST::Ruby::MethodCall                                                                                                         ",{}]],"52":[["  #to_ruby_base                                                                                                                    ",{}]]}}],[0.004797,{"lines":{"0":[["    for multi-line assignments                                                                                                     ",{}]],"1":[["      passes correct context to lhs",{"fg":2}],["                                                                                                ",{}]],"2":[["      passes correct context to rhs",{"fg":2}],["                                                                                                ",{}]],"3":[["  #single_line_width                                                                                                               ",{}]],"4":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"5":[["    passes correct context to lhs",{"fg":2}],["                                                                                                  ",{}]],"6":[["    passes correct context to rhs",{"fg":2}],["                                                                                                  ",{}]],"7":[["                                                                                                                                   ",{}]],"8":[["Y2R::AST::Ruby::UnaryOperator                                                                                                      ",{}]],"9":[["  #to_ruby_base                                                                                                                    ",{}]],"10":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"11":[["    passes correct context to expression",{"fg":2}],["                                                                                           ",{}]],"12":[["  #single_line_width_base                                                                                                          ",{}]],"13":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"14":[["    passes correct context to expression",{"fg":2}],["                                                                                           ",{}]],"15":[["                                                                                                                                   ",{}]],"16":[["Y2R::AST::Ruby::BinaryOperator                                                                                                     ",{}]],"17":[["  #to_ruby_base                                                                                                                    ",{}]],"18":[["    with lot of space available                                                                                                    ",{}]],"19":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"20":[["      passes correct context to lhs",{"fg":2}],["                                                                                                ",{}]],"21":[["      passes correct context to rhs",{"fg":2}],["                                                                                                ",{}]],"22":[["    with no space available                                                                                                        ",{}]],"23":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"24":[["      passes correct context to lhs",{"fg":2}],["                                                                                                ",{}]],"25":[["      passes correct context to rhs",{"fg":2}],["                                                                                                ",{}]],"26":[["  #single_line_width_base                                                                                                          ",{}]],"27":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"28":[["    passes correct context to lhs",{"fg":2}],["                                                                                                  ",{}]],"29":[["    passes correct context to rhs",{"fg":2}],["                                                                                                  ",{}]],"30":[["                                                                                                                                   ",{}]],"31":[["Y2R::AST::Ruby::TernaryOperator                                                                                                    ",{}]],"32":[["  #to_ruby_base                                                                                                                    ",{}]],"33":[["    with lot of space available                                                                                                    ",{}]],"34":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"35":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"36":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"37":[["      passes correct context to else",{"fg":2}],["                                                                                               ",{}]],"38":[["    with no space available                                                                                                        ",{}]],"39":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"40":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"41":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"42":[["      passes correct context to else",{"fg":2}],["                                                                                               ",{}]],"43":[["  #single_line_width_base                                                                                                          ",{}]],"44":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"45":[["    passes correct context to condition",{"fg":2}],["                                                                                            ",{}]],"46":[["    passes correct context to then",{"fg":2}],["                                                                                                 ",{}]],"47":[["    passes correct context to else",{"fg":2}],["                                                                                                 ",{}]],"48":[["                                                                                                                                   ",{}]],"49":[["Y2R::AST::Ruby::MethodCall                                                                                                         ",{}]],"50":[["  #to_ruby_base                                                                                                                    ",{}]],"51":[["    passes correct context to receiver",{"fg":2}],["                                                                                             ",{}]],"52":[["    with lot of space available                                                                                                    ",{}]]}}],[0.015157,{"lines":{"0":[["      passes correct context to rhs",{"fg":2}],["                                                                                                ",{}]],"1":[["  #single_line_width                                                                                                               ",{}]],"2":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"3":[["    passes correct context to lhs",{"fg":2}],["                                                                                                  ",{}]],"4":[["    passes correct context to rhs",{"fg":2}],["                                                                                                  ",{}]],"5":[["                                                                                                                                   ",{}]],"6":[["Y2R::AST::Ruby::UnaryOperator                                                                                                      ",{}]],"7":[["  #to_ruby_base                                                                                                                    ",{}]],"8":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"9":[["    passes correct context to expression",{"fg":2}],["                                                                                           ",{}]],"10":[["  #single_line_width_base                                                                                                          ",{}]],"11":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"12":[["    passes correct context to expression",{"fg":2}],["                                                                                           ",{}]],"13":[["                                                                                                                                   ",{}]],"14":[["Y2R::AST::Ruby::BinaryOperator                                                                                                     ",{}]],"15":[["  #to_ruby_base                                                                                                                    ",{}]],"16":[["    with lot of space available                                                                                                    ",{}]],"17":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"18":[["      passes correct context to lhs",{"fg":2}],["                                                                                                ",{}]],"19":[["      passes correct context to rhs",{"fg":2}],["                                                                                                ",{}]],"20":[["    with no space available                                                                                                        ",{}]],"21":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"22":[["      passes correct context to lhs",{"fg":2}],["                                                                                                ",{}]],"23":[["      passes correct context to rhs",{"fg":2}],["                                                                                                ",{}]],"24":[["  #single_line_width_base                                                                                                          ",{}]],"25":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"26":[["    passes correct context to lhs",{"fg":2}],["                                                                                                  ",{}]],"27":[["    passes correct context to rhs",{"fg":2}],["                                                                                                  ",{}]],"28":[["                                                                                                                                   ",{}]],"29":[["Y2R::AST::Ruby::TernaryOperator                                                                                                    ",{}]],"30":[["  #to_ruby_base                                                                                                                    ",{}]],"31":[["    with lot of space available                                                                                                    ",{}]],"32":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"33":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"34":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"35":[["      passes correct context to else",{"fg":2}],["                                                                                               ",{}]],"36":[["    with no space available                                                                                                        ",{}]],"37":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"38":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"39":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"40":[["      passes correct context to else",{"fg":2}],["                                                                                               ",{}]],"41":[["  #single_line_width_base                                                                                                          ",{}]],"42":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"43":[["    passes correct context to condition",{"fg":2}],["                                                                                            ",{}]],"44":[["    passes correct context to then",{"fg":2}],["                                                                                                 ",{}]],"45":[["    passes correct context to else",{"fg":2}],["                                                                                                 ",{}]],"46":[["                                                                                                                                   ",{}]],"47":[["Y2R::AST::Ruby::MethodCall                                                                                                         ",{}]],"48":[["  #to_ruby_base                                                                                                                    ",{}]],"49":[["    passes correct context to receiver",{"fg":2}],["                                                                                             ",{}]],"50":[["    with lot of space available                                                                                                    ",{}]],"51":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"52":[["    with no space available                                                                                                        ",{}]]}}],[0.03126,{"lines":{"0":[["  #single_line_width                                                                                                               ",{}]],"1":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"2":[["    passes correct context to lhs",{"fg":2}],["                                                                                                  ",{}]],"3":[["    passes correct context to rhs",{"fg":2}],["                                                                                                  ",{}]],"4":[["                                                                                                                                   ",{}]],"5":[["Y2R::AST::Ruby::UnaryOperator                                                                                                      ",{}]],"6":[["  #to_ruby_base                                                                                                                    ",{}]],"7":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"8":[["    passes correct context to expression",{"fg":2}],["                                                                                           ",{}]],"9":[["  #single_line_width_base                                                                                                          ",{}]],"10":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"11":[["    passes correct context to expression",{"fg":2}],["                                                                                           ",{}]],"12":[["                                                                                                                                   ",{}]],"13":[["Y2R::AST::Ruby::BinaryOperator                                                                                                     ",{}]],"14":[["  #to_ruby_base                                                                                                                    ",{}]],"15":[["    with lot of space available                                                                                                    ",{}]],"16":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"17":[["      passes correct context to lhs",{"fg":2}],["                                                                                                ",{}]],"18":[["      passes correct context to rhs",{"fg":2}],["                                                                                                ",{}]],"19":[["    with no space available                                                                                                        ",{}]],"20":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"21":[["      passes correct context to lhs",{"fg":2}],["                                                                                                ",{}]],"22":[["      passes correct context to rhs",{"fg":2}],["                                                                                                ",{}]],"23":[["  #single_line_width_base                                                                                                          ",{}]],"24":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"25":[["    passes correct context to lhs",{"fg":2}],["                                                                                                  ",{}]],"26":[["    passes correct context to rhs",{"fg":2}],["                                                                                                  ",{}]],"27":[["                                                                                                                                   ",{}]],"28":[["Y2R::AST::Ruby::TernaryOperator                                                                                                    ",{}]],"29":[["  #to_ruby_base                                                                                                                    ",{}]],"30":[["    with lot of space available                                                                                                    ",{}]],"31":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"32":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"33":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"34":[["      passes correct context to else",{"fg":2}],["                                                                                               ",{}]],"35":[["    with no space available                                                                                                        ",{}]],"36":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"37":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"38":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"39":[["      passes correct context to else",{"fg":2}],["                                                                                               ",{}]],"40":[["  #single_line_width_base                                                                                                          ",{}]],"41":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"42":[["    passes correct context to condition",{"fg":2}],["                                                                                            ",{}]],"43":[["    passes correct context to then",{"fg":2}],["                                                                                                 ",{}]],"44":[["    passes correct context to else",{"fg":2}],["                                                                                                 ",{}]],"45":[["                                                                                                                                   ",{}]],"46":[["Y2R::AST::Ruby::MethodCall                                                                                                         ",{}]],"47":[["  #to_ruby_base                                                                                                                    ",{}]],"48":[["    passes correct context to receiver",{"fg":2}],["                                                                                             ",{}]],"49":[["    with lot of space available                                                                                                    ",{}]],"50":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"51":[["    with no space available                                                                                                        ",{}]],"52":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]]}}],[0.013523,{"lines":{"0":[["Y2R::AST::Ruby::UnaryOperator                                                                                                      ",{}]],"1":[["  #to_ruby_base                                                                                                                    ",{}]],"2":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"3":[["    passes correct context to expression",{"fg":2}],["                                                                                           ",{}]],"4":[["  #single_line_width_base                                                                                                          ",{}]],"5":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"6":[["    passes correct context to expression",{"fg":2}],["                                                                                           ",{}]],"7":[["                                                                                                                                   ",{}]],"8":[["Y2R::AST::Ruby::BinaryOperator                                                                                                     ",{}]],"9":[["  #to_ruby_base                                                                                                                    ",{}]],"10":[["    with lot of space available                                                                                                    ",{}]],"11":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"12":[["      passes correct context to lhs",{"fg":2}],["                                                                                                ",{}]],"13":[["      passes correct context to rhs",{"fg":2}],["                                                                                                ",{}]],"14":[["    with no space available                                                                                                        ",{}]],"15":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"16":[["      passes correct context to lhs",{"fg":2}],["                                                                                                ",{}]],"17":[["      passes correct context to rhs",{"fg":2}],["                                                                                                ",{}]],"18":[["  #single_line_width_base                                                                                                          ",{}]],"19":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"20":[["    passes correct context to lhs",{"fg":2}],["                                                                                                  ",{}]],"21":[["    passes correct context to rhs",{"fg":2}],["                                                                                                  ",{}]],"22":[["                                                                                                                                   ",{}]],"23":[["Y2R::AST::Ruby::TernaryOperator                                                                                                    ",{}]],"24":[["  #to_ruby_base                                                                                                                    ",{}]],"25":[["    with lot of space available                                                                                                    ",{}]],"26":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"27":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"28":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"29":[["      passes correct context to else",{"fg":2}],["                                                                                               ",{}]],"30":[["    with no space available                                                                                                        ",{}]],"35":[["  #single_line_width_base                                                                                                          ",{}]],"36":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"37":[["    passes correct context to condition",{"fg":2}],["                                                                                            ",{}]],"38":[["    passes correct context to then",{"fg":2}],["                                                                                                 ",{}]],"39":[["    passes correct context to else",{"fg":2}],["                                                                                                 ",{}]],"40":[["                                                                                                                                   ",{}]],"41":[["Y2R::AST::Ruby::MethodCall                                                                                                         ",{}]],"42":[["  #to_ruby_base                                                                                                                    ",{}]],"43":[["    passes correct context to receiver",{"fg":2}],["                                                                                             ",{}]],"44":[["    with lot of space available                                                                                                    ",{}]],"45":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"46":[["    with no space available                                                                                                        ",{}]],"47":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"48":[["    on method calls with :parens => true                                                                                           ",{}]],"49":[["      for single-line method calls                                                                                                 ",{}]],"50":[["        passes correct context to args",{"fg":2}],["                                                                                             ",{}]],"51":[["        passes correct context to block",{"fg":2}],["                                                                                            ",{}]],"52":[["      for multi-line method calls                                                                                                  ",{}]]}}],[0.009072999999999999,{"lines":{"0":[["  #to_ruby_base                                                                                                                    ",{}]],"1":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"2":[["    passes correct context to expression",{"fg":2}],["                                                                                           ",{}]],"3":[["  #single_line_width_base                                                                                                          ",{}]],"4":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"5":[["    passes correct context to expression",{"fg":2}],["                                                                                           ",{}]],"6":[["                                                                                                                                   ",{}]],"7":[["Y2R::AST::Ruby::BinaryOperator                                                                                                     ",{}]],"8":[["  #to_ruby_base                                                                                                                    ",{}]],"9":[["    with lot of space available                                                                                                    ",{}]],"10":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"11":[["      passes correct context to lhs",{"fg":2}],["                                                                                                ",{}]],"12":[["      passes correct context to rhs",{"fg":2}],["                                                                                                ",{}]],"13":[["    with no space available                                                                                                        ",{}]],"14":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"15":[["      passes correct context to lhs",{"fg":2}],["                                                                                                ",{}]],"16":[["      passes correct context to rhs",{"fg":2}],["                                                                                                ",{}]],"17":[["  #single_line_width_base                                                                                                          ",{}]],"18":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"19":[["    passes correct context to lhs",{"fg":2}],["                                                                                                  ",{}]],"20":[["    passes correct context to rhs",{"fg":2}],["                                                                                                  ",{}]],"21":[["                                                                                                                                   ",{}]],"22":[["Y2R::AST::Ruby::TernaryOperator                                                                                                    ",{}]],"23":[["  #to_ruby_base                                                                                                                    ",{}]],"24":[["    with lot of space available                                                                                                    ",{}]],"25":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"26":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"27":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"28":[["      passes correct context to else",{"fg":2}],["                                                                                               ",{}]],"29":[["    with no space available                                                                                                        ",{}]],"30":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"31":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"32":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"33":[["      passes correct context to else",{"fg":2}],["                                                                                               ",{}]],"34":[["  #single_line_width_base                                                                                                          ",{}]],"35":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"36":[["    passes correct context to condition",{"fg":2}],["                                                                                            ",{}]],"37":[["    passes correct context to then",{"fg":2}],["                                                                                                 ",{}]],"38":[["    passes correct context to else",{"fg":2}],["                                                                                                 ",{}]],"39":[["                                                                                                                                   ",{}]],"40":[["Y2R::AST::Ruby::MethodCall                                                                                                         ",{}]],"41":[["  #to_ruby_base                                                                                                                    ",{}]],"42":[["    passes correct context to receiver",{"fg":2}],["                                                                                             ",{}]],"43":[["    with lot of space available                                                                                                    ",{}]],"44":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"45":[["    with no space available                                                                                                        ",{}]],"46":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"47":[["    on method calls with :parens => true                                                                                           ",{}]],"48":[["      for single-line method calls                                                                                                 ",{}]],"49":[["        passes correct context to args",{"fg":2}],["                                                                                             ",{}]],"50":[["        passes correct context to block",{"fg":2}],["                                                                                            ",{}]],"51":[["      for multi-line method calls                                                                                                  ",{}]],"52":[["        passes correct context to args",{"fg":2}],["                                                                                             ",{}]]}}],[0.052072,{"lines":{"0":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"1":[["    passes correct context to expression",{"fg":2}],["                                                                                           ",{}]],"2":[["  #single_line_width_base                                                                                                          ",{}]],"3":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"4":[["    passes correct context to expression",{"fg":2}],["                                                                                           ",{}]],"5":[["                                                                                                                                   ",{}]],"6":[["Y2R::AST::Ruby::BinaryOperator                                                                                                     ",{}]],"7":[["  #to_ruby_base                                                                                                                    ",{}]],"8":[["    with lot of space available                                                                                                    ",{}]],"9":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"10":[["      passes correct context to lhs",{"fg":2}],["                                                                                                ",{}]],"11":[["      passes correct context to rhs",{"fg":2}],["                                                                                                ",{}]],"12":[["    with no space available                                                                                                        ",{}]],"13":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"14":[["      passes correct context to lhs",{"fg":2}],["                                                                                                ",{}]],"15":[["      passes correct context to rhs",{"fg":2}],["                                                                                                ",{}]],"16":[["  #single_line_width_base                                                                                                          ",{}]],"17":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"18":[["    passes correct context to lhs",{"fg":2}],["                                                                                                  ",{}]],"19":[["    passes correct context to rhs",{"fg":2}],["                                                                                                  ",{}]],"20":[["                                                                                                                                   ",{}]],"21":[["Y2R::AST::Ruby::TernaryOperator                                                                                                    ",{}]],"22":[["  #to_ruby_base                                                                                                                    ",{}]],"23":[["    with lot of space available                                                                                                    ",{}]],"24":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"25":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"26":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"27":[["      passes correct context to else",{"fg":2}],["                                                                                               ",{}]],"28":[["    with no space available                                                                                                        ",{}]],"29":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"30":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"31":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"32":[["      passes correct context to else",{"fg":2}],["                                                                                               ",{}]],"33":[["  #single_line_width_base                                                                                                          ",{}]],"34":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"35":[["    passes correct context to condition",{"fg":2}],["                                                                                            ",{}]],"36":[["    passes correct context to then",{"fg":2}],["                                                                                                 ",{}]],"37":[["    passes correct context to else",{"fg":2}],["                                                                                                 ",{}]],"38":[["                                                                                                                                   ",{}]],"39":[["Y2R::AST::Ruby::MethodCall                                                                                                         ",{}]],"40":[["  #to_ruby_base                                                                                                                    ",{}]],"41":[["    passes correct context to receiver",{"fg":2}],["                                                                                             ",{}]],"42":[["    with lot of space available                                                                                                    ",{}]],"43":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"44":[["    with no space available                                                                                                        ",{}]],"45":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"46":[["    on method calls with :parens => true                                                                                           ",{}]],"47":[["      for single-line method calls                                                                                                 ",{}]],"48":[["        passes correct context to args",{"fg":2}],["                                                                                             ",{}]],"49":[["        passes correct context to block",{"fg":2}],["                                                                                            ",{}]],"50":[["      for multi-line method calls                                                                                                  ",{}]],"51":[["        passes correct context to args",{"fg":2}],["                                                                                             ",{}]],"52":[["        passes correct context to block",{"fg":2}],["                                                                                            ",{}]]}}],[0.01292,{"lines":{"0":[["    passes correct context to expression",{"fg":2}],["                                                                                           ",{}]],"1":[["                                                                                                                                   ",{}]],"2":[["Y2R::AST::Ruby::BinaryOperator                                                                                                     ",{}]],"3":[["  #to_ruby_base                                                                                                                    ",{}]],"4":[["    with lot of space available                                                                                                    ",{}]],"5":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"6":[["      passes correct context to lhs",{"fg":2}],["                                                                                                ",{}]],"7":[["      passes correct context to rhs",{"fg":2}],["                                                                                                ",{}]],"8":[["    with no space available                                                                                                        ",{}]],"12":[["  #single_line_width_base                                                                                                          ",{}]],"13":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"14":[["    passes correct context to lhs",{"fg":2}],["                                                                                                  ",{}]],"15":[["    passes correct context to rhs",{"fg":2}],["                                                                                                  ",{}]],"16":[["                                                                                                                                   ",{}]],"17":[["Y2R::AST::Ruby::TernaryOperator                                                                                                    ",{}]],"18":[["  #to_ruby_base                                                                                                                    ",{}]],"19":[["    with lot of space available                                                                                                    ",{}]],"20":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"21":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"22":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"23":[["      passes correct context to else",{"fg":2}],["                                                                                               ",{}]],"24":[["    with no space available                                                                                                        ",{}]],"25":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"26":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"27":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"28":[["      passes correct context to else",{"fg":2}],["                                                                                               ",{}]],"29":[["  #single_line_width_base                                                                                                          ",{}]],"30":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"31":[["    passes correct context to condition",{"fg":2}],["                                                                                            ",{}]],"32":[["    passes correct context to then",{"fg":2}],["                                                                                                 ",{}]],"33":[["    passes correct context to else",{"fg":2}],["                                                                                                 ",{}]],"34":[["                                                                                                                                   ",{}]],"35":[["Y2R::AST::Ruby::MethodCall                                                                                                         ",{}]],"36":[["  #to_ruby_base                                                                                                                    ",{}]],"37":[["    passes correct context to receiver",{"fg":2}],["                                                                                             ",{}]],"38":[["    with lot of space available                                                                                                    ",{}]],"39":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"40":[["    with no space available                                                                                                        ",{}]],"41":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"42":[["    on method calls with :parens => true                                                                                           ",{}]],"43":[["      for single-line method calls                                                                                                 ",{}]],"44":[["        passes correct context to args",{"fg":2}],["                                                                                             ",{}]],"45":[["        passes correct context to block",{"fg":2}],["                                                                                            ",{}]],"46":[["      for multi-line method calls                                                                                                  ",{}]],"47":[["        passes correct context to args",{"fg":2}],["                                                                                             ",{}]],"48":[["        passes correct context to block",{"fg":2}],["                                                                                            ",{}]],"49":[["    on method calls with :parens => false                                                                                          ",{}]],"50":[["      passes correct context to args",{"fg":2}],["                                                                                               ",{}]],"51":[["      passes correct context to block",{"fg":2}],["                                                                                              ",{}]],"52":[["  #single_line_width_base                                                                                                          ",{}]]}}],[0.016653,{"lines":{"0":[["    with lot of space available                                                                                                    ",{}]],"1":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"2":[["      passes correct context to lhs",{"fg":2}],["                                                                                                ",{}]],"3":[["      passes correct context to rhs",{"fg":2}],["                                                                                                ",{}]],"4":[["    with no space available                                                                                                        ",{}]],"8":[["  #single_line_width_base                                                                                                          ",{}]],"9":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"10":[["    passes correct context to lhs",{"fg":2}],["                                                                                                  ",{}]],"11":[["    passes correct context to rhs",{"fg":2}],["                                                                                                  ",{}]],"12":[["                                                                                                                                   ",{}]],"13":[["Y2R::AST::Ruby::TernaryOperator                                                                                                    ",{}]],"14":[["  #to_ruby_base                                                                                                                    ",{}]],"15":[["    with lot of space available                                                                                                    ",{}]],"16":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"17":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"18":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"19":[["      passes correct context to else",{"fg":2}],["                                                                                               ",{}]],"20":[["    with no space available                                                                                                        ",{}]],"21":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"22":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"23":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"24":[["      passes correct context to else",{"fg":2}],["                                                                                               ",{}]],"25":[["  #single_line_width_base                                                                                                          ",{}]],"26":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"27":[["    passes correct context to condition",{"fg":2}],["                                                                                            ",{}]],"28":[["    passes correct context to then",{"fg":2}],["                                                                                                 ",{}]],"29":[["    passes correct context to else",{"fg":2}],["                                                                                                 ",{}]],"30":[["                                                                                                                                   ",{}]],"31":[["Y2R::AST::Ruby::MethodCall                                                                                                         ",{}]],"32":[["  #to_ruby_base                                                                                                                    ",{}]],"33":[["    passes correct context to receiver",{"fg":2}],["                                                                                             ",{}]],"34":[["    with lot of space available                                                                                                    ",{}]],"35":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"36":[["    with no space available                                                                                                        ",{}]],"37":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"38":[["    on method calls with :parens => true                                                                                           ",{}]],"39":[["      for single-line method calls                                                                                                 ",{}]],"40":[["        passes correct context to args",{"fg":2}],["                                                                                             ",{}]],"41":[["        passes correct context to block",{"fg":2}],["                                                                                            ",{}]],"42":[["      for multi-line method calls                                                                                                  ",{}]],"43":[["        passes correct context to args",{"fg":2}],["                                                                                             ",{}]],"44":[["        passes correct context to block",{"fg":2}],["                                                                                            ",{}]],"45":[["    on method calls with :parens => false                                                                                          ",{}]],"46":[["      passes correct context to args",{"fg":2}],["                                                                                               ",{}]],"47":[["      passes correct context to block",{"fg":2}],["                                                                                              ",{}]],"48":[["  #single_line_width_base                                                                                                          ",{}]],"49":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"50":[["    passes correct context to receiver",{"fg":2}],["                                                                                             ",{}]],"51":[["    passes correct context to args",{"fg":2}],["                                                                                                 ",{}]],"52":[["                                                                                                                                   ",{}]]}}],[0.014822,{"lines":{"0":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"1":[["      passes correct context to lhs",{"fg":2}],["                                                                                                ",{}]],"2":[["      passes correct context to rhs",{"fg":2}],["                                                                                                ",{}]],"3":[["  #single_line_width_base                                                                                                          ",{}]],"4":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"5":[["    passes correct context to lhs",{"fg":2}],["                                                                                                  ",{}]],"6":[["    passes correct context to rhs",{"fg":2}],["                                                                                                  ",{}]],"7":[["                                                                                                                                   ",{}]],"8":[["Y2R::AST::Ruby::TernaryOperator                                                                                                    ",{}]],"9":[["  #to_ruby_base                                                                                                                    ",{}]],"10":[["    with lot of space available                                                                                                    ",{}]],"11":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"12":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"13":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"14":[["      passes correct context to else",{"fg":2}],["                                                                                               ",{}]],"15":[["    with no space available                                                                                                        ",{}]],"20":[["  #single_line_width_base                                                                                                          ",{}]],"21":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"22":[["    passes correct context to condition",{"fg":2}],["                                                                                            ",{}]],"23":[["    passes correct context to then",{"fg":2}],["                                                                                                 ",{}]],"24":[["    passes correct context to else",{"fg":2}],["                                                                                                 ",{}]],"25":[["                                                                                                                                   ",{}]],"26":[["Y2R::AST::Ruby::MethodCall                                                                                                         ",{}]],"27":[["  #to_ruby_base                                                                                                                    ",{}]],"28":[["    passes correct context to receiver",{"fg":2}],["                                                                                             ",{}]],"29":[["    with lot of space available                                                                                                    ",{}]],"30":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"31":[["    with no space available                                                                                                        ",{}]],"32":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"33":[["    on method calls with :parens => true                                                                                           ",{}]],"34":[["      for single-line method calls                                                                                                 ",{}]],"35":[["        passes correct context to args",{"fg":2}],["                                                                                             ",{}]],"36":[["        passes correct context to block",{"fg":2}],["                                                                                            ",{}]],"37":[["      for multi-line method calls                                                                                                  ",{}]],"38":[["        passes correct context to args",{"fg":2}],["                                                                                             ",{}]],"39":[["        passes correct context to block",{"fg":2}],["                                                                                            ",{}]],"40":[["    on method calls with :parens => false                                                                                          ",{}]],"41":[["      passes correct context to args",{"fg":2}],["                                                                                               ",{}]],"42":[["      passes correct context to block",{"fg":2}],["                                                                                              ",{}]],"43":[["  #single_line_width_base                                                                                                          ",{}]],"44":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"45":[["    passes correct context to receiver",{"fg":2}],["                                                                                             ",{}]],"46":[["    passes correct context to args",{"fg":2}],["                                                                                                 ",{}]],"47":[["                                                                                                                                   ",{}]],"48":[["Y2R::AST::Ruby::Block                                                                                                              ",{}]],"49":[["  #to_ruby_base                                                                                                                    ",{}]],"50":[["    with lot of space available                                                                                                    ",{}]],"51":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"52":[["      for blocks with uncommented args                                                                                             ",{}]]}}],[0.013473,{"lines":{"0":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"1":[["    passes correct context to lhs",{"fg":2}],["                                                                                                  ",{}]],"2":[["    passes correct context to rhs",{"fg":2}],["                                                                                                  ",{}]],"3":[["                                                                                                                                   ",{}]],"4":[["Y2R::AST::Ruby::TernaryOperator                                                                                                    ",{}]],"5":[["  #to_ruby_base                                                                                                                    ",{}]],"6":[["    with lot of space available                                                                                                    ",{}]],"7":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"8":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"9":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"10":[["      passes correct context to else",{"fg":2}],["                                                                                               ",{}]],"11":[["    with no space available                                                                                                        ",{}]],"12":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"13":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"14":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"15":[["      passes correct context to else",{"fg":2}],["                                                                                               ",{}]],"16":[["  #single_line_width_base                                                                                                          ",{}]],"17":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"18":[["    passes correct context to condition",{"fg":2}],["                                                                                            ",{}]],"19":[["    passes correct context to then",{"fg":2}],["                                                                                                 ",{}]],"20":[["    passes correct context to else",{"fg":2}],["                                                                                                 ",{}]],"21":[["                                                                                                                                   ",{}]],"22":[["Y2R::AST::Ruby::MethodCall                                                                                                         ",{}]],"23":[["  #to_ruby_base                                                                                                                    ",{}]],"24":[["    passes correct context to receiver",{"fg":2}],["                                                                                             ",{}]],"25":[["    with lot of space available                                                                                                    ",{}]],"26":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"27":[["    with no space available                                                                                                        ",{}]],"28":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"29":[["    on method calls with :parens => true                                                                                           ",{}]],"30":[["      for single-line method calls                                                                                                 ",{}]],"31":[["        passes correct context to args",{"fg":2}],["                                                                                             ",{}]],"32":[["        passes correct context to block",{"fg":2}],["                                                                                            ",{}]],"33":[["      for multi-line method calls                                                                                                  ",{}]],"34":[["        passes correct context to args",{"fg":2}],["                                                                                             ",{}]],"35":[["        passes correct context to block",{"fg":2}],["                                                                                            ",{}]],"36":[["    on method calls with :parens => false                                                                                          ",{}]],"37":[["      passes correct context to args",{"fg":2}],["                                                                                               ",{}]],"38":[["      passes correct context to block",{"fg":2}],["                                                                                              ",{}]],"39":[["  #single_line_width_base                                                                                                          ",{}]],"40":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"41":[["    passes correct context to receiver",{"fg":2}],["                                                                                             ",{}]],"42":[["    passes correct context to args",{"fg":2}],["                                                                                                 ",{}]],"43":[["                                                                                                                                   ",{}]],"44":[["Y2R::AST::Ruby::Block                                                                                                              ",{}]],"45":[["  #to_ruby_base                                                                                                                    ",{}]],"46":[["    with lot of space available                                                                                                    ",{}]],"47":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"48":[["      for blocks with uncommented args                                                                                             ",{}]],"49":[["        passes correct context to args",{"fg":2}],["                                                                                             ",{}]],"50":[["        passes correct context to statements",{"fg":2}],["                                                                                       ",{}]],"51":[["      for blocks with commented args                                                                                               ",{}]],"52":[["        passes correct context to args",{"fg":2}],["                                                                                             ",{}]]}}],[0.004068,{"lines":{"0":[["    passes correct context to rhs",{"fg":2}],["                                                                                                  ",{}]],"1":[["                                                                                                                                   ",{}]],"2":[["Y2R::AST::Ruby::TernaryOperator                                                                                                    ",{}]],"3":[["  #to_ruby_base                                                                                                                    ",{}]],"4":[["    with lot of space available                                                                                                    ",{}]],"5":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"6":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"7":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"8":[["      passes correct context to else",{"fg":2}],["                                                                                               ",{}]],"9":[["    with no space available                                                                                                        ",{}]],"10":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"11":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"12":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"13":[["      passes correct context to else",{"fg":2}],["                                                                                               ",{}]],"14":[["  #single_line_width_base                                                                                                          ",{}]],"15":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"16":[["    passes correct context to condition",{"fg":2}],["                                                                                            ",{}]],"17":[["    passes correct context to then",{"fg":2}],["                                                                                                 ",{}]],"18":[["    passes correct context to else",{"fg":2}],["                                                                                                 ",{}]],"19":[["                                                                                                                                   ",{}]],"20":[["Y2R::AST::Ruby::MethodCall                                                                                                         ",{}]],"21":[["  #to_ruby_base                                                                                                                    ",{}]],"22":[["    passes correct context to receiver",{"fg":2}],["                                                                                             ",{}]],"23":[["    with lot of space available                                                                                                    ",{}]],"24":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"25":[["    with no space available                                                                                                        ",{}]],"27":[["    on method calls with :parens => true                                                                                           ",{}]],"28":[["      for single-line method calls                                                                                                 ",{}]],"29":[["        passes correct context to args",{"fg":2}],["                                                                                             ",{}]],"30":[["        passes correct context to block",{"fg":2}],["                                                                                            ",{}]],"31":[["      for multi-line method calls                                                                                                  ",{}]],"32":[["        passes correct context to args",{"fg":2}],["                                                                                             ",{}]],"33":[["        passes correct context to block",{"fg":2}],["                                                                                            ",{}]],"34":[["    on method calls with :parens => false                                                                                          ",{}]],"35":[["      passes correct context to args",{"fg":2}],["                                                                                               ",{}]],"36":[["      passes correct context to block",{"fg":2}],["                                                                                              ",{}]],"37":[["  #single_line_width_base                                                                                                          ",{}]],"38":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"39":[["    passes correct context to receiver",{"fg":2}],["                                                                                             ",{}]],"40":[["    passes correct context to args",{"fg":2}],["                                                                                                 ",{}]],"41":[["                                                                                                                                   ",{}]],"42":[["Y2R::AST::Ruby::Block                                                                                                              ",{}]],"43":[["  #to_ruby_base                                                                                                                    ",{}]],"44":[["    with lot of space available                                                                                                    ",{}]],"45":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"46":[["      for blocks with uncommented args                                                                                             ",{}]],"47":[["        passes correct context to args",{"fg":2}],["                                                                                             ",{}]],"48":[["        passes correct context to statements",{"fg":2}],["                                                                                       ",{}]],"49":[["      for blocks with commented args                                                                                               ",{}]],"50":[["        passes correct context to args",{"fg":2}],["                                                                                             ",{}]],"51":[["        passes correct context to statements",{"fg":2}],["                                                                                       ",{}]],"52":[["    with no space available                                                                                                        ",{}]]}}],[0.013582,{"lines":{"0":[["Y2R::AST::Ruby::TernaryOperator                                                                                                    ",{}]],"1":[["  #to_ruby_base                                                                                                                    ",{}]],"2":[["    with lot of space available                                                                                                    ",{}]],"3":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"4":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"5":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"6":[["      passes correct context to else",{"fg":2}],["                                                                                               ",{}]],"7":[["    with no space available                                                                                                        ",{}]],"8":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"9":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"10":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"11":[["      passes correct context to else",{"fg":2}],["                                                                                               ",{}]],"12":[["  #single_line_width_base                                                                                                          ",{}]],"13":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"14":[["    passes correct context to condition",{"fg":2}],["                                                                                            ",{}]],"15":[["    passes correct context to then",{"fg":2}],["                                                                                                 ",{}]],"16":[["    passes correct context to else",{"fg":2}],["                                                                                                 ",{}]],"17":[["                                                                                                                                   ",{}]],"18":[["Y2R::AST::Ruby::MethodCall                                                                                                         ",{}]],"19":[["  #to_ruby_base                                                                                                                    ",{}]],"20":[["    passes correct context to receiver",{"fg":2}],["                                                                                             ",{}]],"21":[["    with lot of space available                                                                                                    ",{}]],"22":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"23":[["    with no space available                                                                                                        ",{}]],"25":[["    on method calls with :parens => true                                                                                           ",{}]],"26":[["      for single-line method calls                                                                                                 ",{}]],"27":[["        passes correct context to args",{"fg":2}],["                                                                                             ",{}]],"28":[["        passes correct context to block",{"fg":2}],["                                                                                            ",{}]],"29":[["      for multi-line method calls                                                                                                  ",{}]],"30":[["        passes correct context to args",{"fg":2}],["                                                                                             ",{}]],"31":[["        passes correct context to block",{"fg":2}],["                                                                                            ",{}]],"32":[["    on method calls with :parens => false                                                                                          ",{}]],"33":[["      passes correct context to args",{"fg":2}],["                                                                                               ",{}]],"34":[["      passes correct context to block",{"fg":2}],["                                                                                              ",{}]],"35":[["  #single_line_width_base                                                                                                          ",{}]],"36":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"37":[["    passes correct context to receiver",{"fg":2}],["                                                                                             ",{}]],"38":[["    passes correct context to args",{"fg":2}],["                                                                                                 ",{}]],"39":[["                                                                                                                                   ",{}]],"40":[["Y2R::AST::Ruby::Block                                                                                                              ",{}]],"41":[["  #to_ruby_base                                                                                                                    ",{}]],"42":[["    with lot of space available                                                                                                    ",{}]],"43":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"44":[["      for blocks with uncommented args                                                                                             ",{}]],"45":[["        passes correct context to args",{"fg":2}],["                                                                                             ",{}]],"46":[["        passes correct context to statements",{"fg":2}],["                                                                                       ",{}]],"47":[["      for blocks with commented args                                                                                               ",{}]],"48":[["        passes correct context to args",{"fg":2}],["                                                                                             ",{}]],"49":[["        passes correct context to statements",{"fg":2}],["                                                                                       ",{}]],"50":[["    with no space available                                                                                                        ",{}]],"51":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"52":[["      for blocks with uncommented args                                                                                             ",{}]]}}],[0.013262,{"lines":{"0":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"1":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"2":[["      passes correct context to else",{"fg":2}],["                                                                                               ",{}]],"3":[["    with no space available                                                                                                        ",{}]],"4":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"5":[["      passes correct context to condition",{"fg":2}],["                                                                                          ",{}]],"6":[["      passes correct context to then",{"fg":2}],["                                                                                               ",{}]],"7":[["      passes correct context to else",{"fg":2}],["                                                                                               ",{}]],"8":[["  #single_line_width_base                                                                                                          ",{}]],"9":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"10":[["    passes correct context to condition",{"fg":2}],["                                                                                            ",{}]],"11":[["    passes correct context to then",{"fg":2}],["                                                                                                 ",{}]],"12":[["    passes correct context to else",{"fg":2}],["                                                                                                 ",{}]],"13":[["                                                                                                                                   ",{}]],"14":[["Y2R::AST::Ruby::MethodCall                                                                                                         ",{}]],"15":[["  #to_ruby_base                                                                                                                    ",{}]],"16":[["    passes correct context to receiver",{"fg":2}],["                                                                                             ",{}]],"17":[["    with lot of space available                                                                                                    ",{}]],"18":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"19":[["    with no space available                                                                                                        ",{}]],"20":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"21":[["    on method calls with :parens => true                                                                                           ",{}]],"22":[["      for single-line method calls                                                                                                 ",{}]],"23":[["        passes correct context to args",{"fg":2}],["                                                                                             ",{}]],"24":[["        passes correct context to block",{"fg":2}],["                                                                                            ",{}]],"25":[["      for multi-line method calls                                                                                                  ",{}]],"26":[["        passes correct context to args",{"fg":2}],["                                                                                             ",{}]],"27":[["        passes correct context to block",{"fg":2}],["                                                                                            ",{}]],"28":[["    on method calls with :parens => false                                                                                          ",{}]],"29":[["      passes correct context to args",{"fg":2}],["                                                                                               ",{}]],"30":[["      passes correct context to block",{"fg":2}],["                                                                                              ",{}]],"31":[["  #single_line_width_base                                                                                                          ",{}]],"32":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"33":[["    passes correct context to receiver",{"fg":2}],["                                                                                             ",{}]],"34":[["    passes correct context to args",{"fg":2}],["                                                                                                 ",{}]],"35":[["                                                                                                                                   ",{}]],"36":[["Y2R::AST::Ruby::Block                                                                                                              ",{}]],"37":[["  #to_ruby_base                                                                                                                    ",{}]],"38":[["    with lot of space available                                                                                                    ",{}]],"39":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"40":[["      for blocks with uncommented args                                                                                             ",{}]],"41":[["        passes correct context to args",{"fg":2}],["                                                                                             ",{}]],"42":[["        passes correct context to statements",{"fg":2}],["                                                                                       ",{}]],"43":[["      for blocks with commented args                                                                                               ",{}]],"44":[["        passes correct context to args",{"fg":2}],["                                                                                             ",{}]],"45":[["        passes correct context to statements",{"fg":2}],["                                                                                       ",{}]],"46":[["    with no space available                                                                                                        ",{}]],"47":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"48":[["      for blocks with uncommented args                                                                                             ",{}]],"49":[["        passes correct context to args",{"fg":2}],["                                                                                             ",{}]],"50":[["        passes correct context to statements",{"fg":2}],["                                                                                       ",{}]],"51":[["      for blocks with commented args                                                                                               ",{}]],"52":[["        passes correct context to args",{"fg":2}],["                                                                                             ",{}]]}}],[0.015445,{"lines":{"0":[["  #single_line_width_base                                                                                                          ",{}]],"1":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"2":[["    passes correct context to condition",{"fg":2}],["                                                                                            ",{}]],"3":[["    passes correct context to then",{"fg":2}],["                                                                                                 ",{}]],"4":[["    passes correct context to else",{"fg":2}],["                                                                                                 ",{}]],"5":[["                                                                                                                                   ",{}]],"6":[["Y2R::AST::Ruby::MethodCall                                                                                                         ",{}]],"7":[["  #to_ruby_base                                                                                                                    ",{}]],"8":[["    passes correct context to receiver",{"fg":2}],["                                                                                             ",{}]],"9":[["    with lot of space available                                                                                                    ",{}]],"10":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"11":[["    with no space available                                                                                                        ",{}]],"12":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"13":[["    on method calls with :parens => true                                                                                           ",{}]],"14":[["      for single-line method calls                                                                                                 ",{}]],"15":[["        passes correct context to args",{"fg":2}],["                                                                                             ",{}]],"16":[["        passes correct context to block",{"fg":2}],["                                                                                            ",{}]],"17":[["      for multi-line method calls                                                                                                  ",{}]],"18":[["        passes correct context to args",{"fg":2}],["                                                                                             ",{}]],"19":[["        passes correct context to block",{"fg":2}],["                                                                                            ",{}]],"20":[["    on method calls with :parens => false                                                                                          ",{}]],"21":[["      passes correct context to args",{"fg":2}],["                                                                                               ",{}]],"22":[["      passes correct context to block",{"fg":2}],["                                                                                              ",{}]],"23":[["  #single_line_width_base                                                                                                          ",{}]],"24":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"25":[["    passes correct context to receiver",{"fg":2}],["                                                                                             ",{}]],"26":[["    passes correct context to args",{"fg":2}],["                                                                                                 ",{}]],"27":[["                                                                                                                                   ",{}]],"28":[["Y2R::AST::Ruby::Block                                                                                                              ",{}]],"29":[["  #to_ruby_base                                                                                                                    ",{}]],"30":[["    with lot of space available                                                                                                    ",{}]],"31":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"32":[["      for blocks with uncommented args                                                                                             ",{}]],"33":[["        passes correct context to args",{"fg":2}],["                                                                                             ",{}]],"34":[["        passes correct context to statements",{"fg":2}],["                                                                                       ",{}]],"35":[["      for blocks with commented args                                                                                               ",{}]],"36":[["        passes correct context to args",{"fg":2}],["                                                                                             ",{}]],"37":[["        passes correct context to statements",{"fg":2}],["                                                                                       ",{}]],"38":[["    with no space available                                                                                                        ",{}]],"46":[["  #single_line_width_base                                                                                                          ",{}]],"47":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"48":[["    passes correct context to args",{"fg":2}],["                                                                                                 ",{}]],"49":[["    passes correct context to statements",{"fg":2}],["                                                                                           ",{}]],"50":[["                                                                                                                                   ",{}]],"51":[["Y2R::AST::Ruby::ConstAccess                                                                                                        ",{}]],"52":[["  #to_ruby_base                                                                                                                    ",{}]]}}],[0.015196,{"lines":{"0":[["    with no space available                                                                                                        ",{}]],"1":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"2":[["    on method calls with :parens => true                                                                                           ",{}]],"3":[["      for single-line method calls                                                                                                 ",{}]],"4":[["        passes correct context to args",{"fg":2}],["                                                                                             ",{}]],"5":[["        passes correct context to block",{"fg":2}],["                                                                                            ",{}]],"6":[["      for multi-line method calls                                                                                                  ",{}]],"7":[["        passes correct context to args",{"fg":2}],["                                                                                             ",{}]],"8":[["        passes correct context to block",{"fg":2}],["                                                                                            ",{}]],"9":[["    on method calls with :parens => false                                                                                          ",{}]],"10":[["      passes correct context to args",{"fg":2}],["                                                                                               ",{}]],"11":[["      passes correct context to block",{"fg":2}],["                                                                                              ",{}]],"12":[["  #single_line_width_base                                                                                                          ",{}]],"13":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"14":[["    passes correct context to receiver",{"fg":2}],["                                                                                             ",{}]],"15":[["    passes correct context to args",{"fg":2}],["                                                                                                 ",{}]],"16":[["                                                                                                                                   ",{}]],"17":[["Y2R::AST::Ruby::Block                                                                                                              ",{}]],"18":[["  #to_ruby_base                                                                                                                    ",{}]],"19":[["    with lot of space available                                                                                                    ",{}]],"20":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"21":[["      for blocks with uncommented args                                                                                             ",{}]],"22":[["        passes correct context to args",{"fg":2}],["                                                                                             ",{}]],"23":[["        passes correct context to statements",{"fg":2}],["                                                                                       ",{}]],"24":[["      for blocks with commented args                                                                                               ",{}]],"25":[["        passes correct context to args",{"fg":2}],["                                                                                             ",{}]],"26":[["        passes correct context to statements",{"fg":2}],["                                                                                       ",{}]],"27":[["    with no space available                                                                                                        ",{}]],"28":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"29":[["      for blocks with uncommented args                                                                                             ",{}]],"30":[["        passes correct context to args",{"fg":2}],["                                                                                             ",{}]],"31":[["        passes correct context to statements",{"fg":2}],["                                                                                       ",{}]],"32":[["      for blocks with commented args                                                                                               ",{}]],"35":[["  #single_line_width_base                                                                                                          ",{}]],"36":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"37":[["    passes correct context to args",{"fg":2}],["                                                                                                 ",{}]],"38":[["    passes correct context to statements",{"fg":2}],["                                                                                           ",{}]],"39":[["                                                                                                                                   ",{}]],"40":[["Y2R::AST::Ruby::ConstAccess                                                                                                        ",{}]],"41":[["  #to_ruby_base                                                                                                                    ",{}]],"42":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"43":[["    for single-line const accesses                                                                                                 ",{}]],"44":[["      passes correct context to receiver",{"fg":2}],["                                                                                           ",{}]],"45":[["    for multi-line const accesses                                                                                                  ",{}]],"46":[["      passes correct context to receiver",{"fg":2}],["                                                                                           ",{}]],"47":[["  #single_line_width_base                                                                                                          ",{}]],"48":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"49":[["    passes correct context to receiver",{"fg":2}],["                                                                                             ",{}]],"51":[["Y2R::AST::Ruby::Variable                                                                                                           ",{}]]}}],[0.016542,{"lines":{"0":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"1":[["      for blocks with uncommented args                                                                                             ",{}]],"2":[["        passes correct context to args",{"fg":2}],["                                                                                             ",{}]],"3":[["        passes correct context to statements",{"fg":2}],["                                                                                       ",{}]],"4":[["      for blocks with commented args                                                                                               ",{}]],"5":[["        passes correct context to args",{"fg":2}],["                                                                                             ",{}]],"6":[["        passes correct context to statements",{"fg":2}],["                                                                                       ",{}]],"7":[["    with no space available                                                                                                        ",{}]],"8":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"9":[["      for blocks with uncommented args                                                                                             ",{}]],"10":[["        passes correct context to args",{"fg":2}],["                                                                                             ",{}]],"11":[["        passes correct context to statements",{"fg":2}],["                                                                                       ",{}]],"12":[["      for blocks with commented args                                                                                               ",{}]],"13":[["        passes correct context to args",{"fg":2}],["                                                                                             ",{}]],"14":[["        passes correct context to statements",{"fg":2}],["                                                                                       ",{}]],"15":[["  #single_line_width_base                                                                                                          ",{}]],"16":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"17":[["    passes correct context to args",{"fg":2}],["                                                                                                 ",{}]],"18":[["    passes correct context to statements",{"fg":2}],["                                                                                           ",{}]],"19":[["                                                                                                                                   ",{}]],"20":[["Y2R::AST::Ruby::ConstAccess                                                                                                        ",{}]],"21":[["  #to_ruby_base                                                                                                                    ",{}]],"22":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"23":[["    for single-line const accesses                                                                                                 ",{}]],"24":[["      passes correct context to receiver",{"fg":2}],["                                                                                           ",{}]],"25":[["    for multi-line const accesses                                                                                                  ",{}]],"26":[["      passes correct context to receiver",{"fg":2}],["                                                                                           ",{}]],"27":[["  #single_line_width_base                                                                                                          ",{}]],"28":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"29":[["    passes correct context to receiver",{"fg":2}],["                                                                                             ",{}]],"30":[["                                                                                                                                   ",{}]],"31":[["Y2R::AST::Ruby::Variable                                                                                                           ",{}]],"32":[["  #to_ruby_base                                                                                                                    ",{}]],"33":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"34":[["  #single_line_width_base                                                                                                          ",{}]],"35":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"36":[["                                                                                                                                   ",{}]],"37":[["Y2R::AST::Ruby::Self                                                                                                               ",{}]],"38":[["  #to_ruby_base                                                                                                                    ",{}]],"39":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"40":[["  #single_line_width_base                                                                                                          ",{}]],"41":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"42":[["                                                                                                                                   ",{}]],"43":[["Y2R::AST::Ruby::Literal                                                                                                            ",{}]],"44":[["  #to_ruby_base                                                                                                                    ",{}]],"45":[["    basics                                                                                                                         ",{}]],"46":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"49":[["                                                                                                                                   ",{}]],"50":[["Y2R::AST::Ruby::Array                                                                                                              ",{}]],"51":[["  #to_ruby_base                                                                                                                    ",{}]],"52":[["    with lot of space available                                                                                                    ",{}]]}}],[0.022762,{"lines":{"0":[["      for blocks with uncommented args                                                                                             ",{}]],"1":[["        passes correct context to args",{"fg":2}],["                                                                                             ",{}]],"2":[["        passes correct context to statements",{"fg":2}],["                                                                                       ",{}]],"3":[["      for blocks with commented args                                                                                               ",{}]],"4":[["        passes correct context to args",{"fg":2}],["                                                                                             ",{}]],"5":[["        passes correct context to statements",{"fg":2}],["                                                                                       ",{}]],"6":[["    with no space available                                                                                                        ",{}]],"7":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"8":[["      for blocks with uncommented args                                                                                             ",{}]],"9":[["        passes correct context to args",{"fg":2}],["                                                                                             ",{}]],"10":[["        passes correct context to statements",{"fg":2}],["                                                                                       ",{}]],"11":[["      for blocks with commented args                                                                                               ",{}]],"12":[["        passes correct context to args",{"fg":2}],["                                                                                             ",{}]],"13":[["        passes correct context to statements",{"fg":2}],["                                                                                       ",{}]],"14":[["  #single_line_width_base                                                                                                          ",{}]],"15":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"16":[["    passes correct context to args",{"fg":2}],["                                                                                                 ",{}]],"17":[["    passes correct context to statements",{"fg":2}],["                                                                                           ",{}]],"18":[["                                                                                                                                   ",{}]],"19":[["Y2R::AST::Ruby::ConstAccess                                                                                                        ",{}]],"20":[["  #to_ruby_base                                                                                                                    ",{}]],"21":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"22":[["    for single-line const accesses                                                                                                 ",{}]],"23":[["      passes correct context to receiver",{"fg":2}],["                                                                                           ",{}]],"24":[["    for multi-line const accesses                                                                                                  ",{}]],"25":[["      passes correct context to receiver",{"fg":2}],["                                                                                           ",{}]],"26":[["  #single_line_width_base                                                                                                          ",{}]],"27":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"28":[["    passes correct context to receiver",{"fg":2}],["                                                                                             ",{}]],"29":[["                                                                                                                                   ",{}]],"30":[["Y2R::AST::Ruby::Variable                                                                                                           ",{}]],"31":[["  #to_ruby_base                                                                                                                    ",{}]],"32":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"33":[["  #single_line_width_base                                                                                                          ",{}]],"34":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"35":[["                                                                                                                                   ",{}]],"36":[["Y2R::AST::Ruby::Self                                                                                                               ",{}]],"37":[["  #to_ruby_base                                                                                                                    ",{}]],"38":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"39":[["  #single_line_width_base                                                                                                          ",{}]],"40":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"41":[["                                                                                                                                   ",{}]],"42":[["Y2R::AST::Ruby::Literal                                                                                                            ",{}]],"43":[["  #to_ruby_base                                                                                                                    ",{}]],"44":[["    basics                                                                                                                         ",{}]],"45":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"46":[["  #single_line_width_base                                                                                                          ",{}]],"47":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"48":[["                                                                                                                                   ",{}]],"49":[["Y2R::AST::Ruby::Array                                                                                                              ",{}]],"50":[["  #to_ruby_base                                                                                                                    ",{}]],"51":[["    with lot of space available                                                                                                    ",{}]],"52":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]]}}],[0.013669,{"lines":{"0":[["      for blocks with commented args                                                                                               ",{}]],"3":[["    with no space available                                                                                                        ",{}]],"4":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"5":[["      for blocks with uncommented args                                                                                             ",{}]],"6":[["        passes correct context to args",{"fg":2}],["                                                                                             ",{}]],"7":[["        passes correct context to statements",{"fg":2}],["                                                                                       ",{}]],"8":[["      for blocks with commented args                                                                                               ",{}]],"11":[["  #single_line_width_base                                                                                                          ",{}]],"12":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"13":[["    passes correct context to args",{"fg":2}],["                                                                                                 ",{}]],"14":[["    passes correct context to statements",{"fg":2}],["                                                                                           ",{}]],"15":[["                                                                                                                                   ",{}]],"16":[["Y2R::AST::Ruby::ConstAccess                                                                                                        ",{}]],"17":[["  #to_ruby_base                                                                                                                    ",{}]],"18":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"19":[["    for single-line const accesses                                                                                                 ",{}]],"20":[["      passes correct context to receiver",{"fg":2}],["                                                                                           ",{}]],"21":[["    for multi-line const accesses                                                                                                  ",{}]],"22":[["      passes correct context to receiver",{"fg":2}],["                                                                                           ",{}]],"23":[["  #single_line_width_base                                                                                                          ",{}]],"24":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"25":[["    passes correct context to receiver",{"fg":2}],["                                                                                             ",{}]],"26":[["                                                                                                                                   ",{}]],"27":[["Y2R::AST::Ruby::Variable                                                                                                           ",{}]],"28":[["  #to_ruby_base                                                                                                                    ",{}]],"29":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"30":[["  #single_line_width_base                                                                                                          ",{}]],"31":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"32":[["                                                                                                                                   ",{}]],"33":[["Y2R::AST::Ruby::Self                                                                                                               ",{}]],"34":[["  #to_ruby_base                                                                                                                    ",{}]],"35":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"36":[["  #single_line_width_base                                                                                                          ",{}]],"37":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"38":[["                                                                                                                                   ",{}]],"39":[["Y2R::AST::Ruby::Literal                                                                                                            ",{}]],"40":[["  #to_ruby_base                                                                                                                    ",{}]],"41":[["    basics                                                                                                                         ",{}]],"42":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"43":[["  #single_line_width_base                                                                                                          ",{}]],"44":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"45":[["                                                                                                                                   ",{}]],"46":[["Y2R::AST::Ruby::Array                                                                                                              ",{}]],"47":[["  #to_ruby_base                                                                                                                    ",{}]],"48":[["    with lot of space available                                                                                                    ",{}]],"49":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"50":[["      passes correct context to elements",{"fg":2}],["                                                                                           ",{}]],"51":[["    with no space available                                                                                                        ",{}]]}}],[0.005238,{"lines":{"0":[["        passes correct context to statements",{"fg":2}],["                                                                                       ",{}]],"1":[["    with no space available                                                                                                        ",{}]],"2":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"3":[["      for blocks with uncommented args                                                                                             ",{}]],"4":[["        passes correct context to args",{"fg":2}],["                                                                                             ",{}]],"5":[["        passes correct context to statements",{"fg":2}],["                                                                                       ",{}]],"6":[["      for blocks with commented args                                                                                               ",{}]],"7":[["        passes correct context to args",{"fg":2}],["                                                                                             ",{}]],"8":[["        passes correct context to statements",{"fg":2}],["                                                                                       ",{}]],"9":[["  #single_line_width_base                                                                                                          ",{}]],"10":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"11":[["    passes correct context to args",{"fg":2}],["                                                                                                 ",{}]],"12":[["    passes correct context to statements",{"fg":2}],["                                                                                           ",{}]],"13":[["                                                                                                                                   ",{}]],"14":[["Y2R::AST::Ruby::ConstAccess                                                                                                        ",{}]],"15":[["  #to_ruby_base                                                                                                                    ",{}]],"16":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"17":[["    for single-line const accesses                                                                                                 ",{}]],"18":[["      passes correct context to receiver",{"fg":2}],["                                                                                           ",{}]],"19":[["    for multi-line const accesses                                                                                                  ",{}]],"21":[["  #single_line_width_base                                                                                                          ",{}]],"22":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"23":[["    passes correct context to receiver",{"fg":2}],["                                                                                             ",{}]],"24":[["                                                                                                                                   ",{}]],"25":[["Y2R::AST::Ruby::Variable                                                                                                           ",{}]],"26":[["  #to_ruby_base                                                                                                                    ",{}]],"27":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"28":[["  #single_line_width_base                                                                                                          ",{}]],"29":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"30":[["                                                                                                                                   ",{}]],"31":[["Y2R::AST::Ruby::Self                                                                                                               ",{}]],"32":[["  #to_ruby_base                                                                                                                    ",{}]],"33":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"34":[["  #single_line_width_base                                                                                                          ",{}]],"35":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"36":[["                                                                                                                                   ",{}]],"37":[["Y2R::AST::Ruby::Literal                                                                                                            ",{}]],"38":[["  #to_ruby_base                                                                                                                    ",{}]],"39":[["    basics                                                                                                                         ",{}]],"40":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"41":[["  #single_line_width_base                                                                                                          ",{}]],"42":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"43":[["                                                                                                                                   ",{}]],"44":[["Y2R::AST::Ruby::Array                                                                                                              ",{}]],"45":[["  #to_ruby_base                                                                                                                    ",{}]],"46":[["    with lot of space available                                                                                                    ",{}]],"47":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"48":[["      passes correct context to elements",{"fg":2}],["                                                                                           ",{}]],"49":[["    with no space available                                                                                                        ",{}]],"50":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"51":[["      passes correct context to elements",{"fg":2}],["                                                                                           ",{}]],"52":[["  #single_line_width_base                                                                                                          ",{}]]}}],[0.039627,{"lines":{"0":[["    with no space available                                                                                                        ",{}]],"1":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"2":[["      for blocks with uncommented args                                                                                             ",{}]],"3":[["        passes correct context to args",{"fg":2}],["                                                                                             ",{}]],"4":[["        passes correct context to statements",{"fg":2}],["                                                                                       ",{}]],"5":[["      for blocks with commented args                                                                                               ",{}]],"6":[["        passes correct context to args",{"fg":2}],["                                                                                             ",{}]],"7":[["        passes correct context to statements",{"fg":2}],["                                                                                       ",{}]],"8":[["  #single_line_width_base                                                                                                          ",{}]],"9":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"10":[["    passes correct context to args",{"fg":2}],["                                                                                                 ",{}]],"11":[["    passes correct context to statements",{"fg":2}],["                                                                                           ",{}]],"12":[["                                                                                                                                   ",{}]],"13":[["Y2R::AST::Ruby::ConstAccess                                                                                                        ",{}]],"14":[["  #to_ruby_base                                                                                                                    ",{}]],"15":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"16":[["    for single-line const accesses                                                                                                 ",{}]],"17":[["      passes correct context to receiver",{"fg":2}],["                                                                                           ",{}]],"18":[["    for multi-line const accesses                                                                                                  ",{}]],"19":[["      passes correct context to receiver",{"fg":2}],["                                                                                           ",{}]],"20":[["  #single_line_width_base                                                                                                          ",{}]],"21":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"22":[["    passes correct context to receiver",{"fg":2}],["                                                                                             ",{}]],"23":[["                                                                                                                                   ",{}]],"24":[["Y2R::AST::Ruby::Variable                                                                                                           ",{}]],"25":[["  #to_ruby_base                                                                                                                    ",{}]],"26":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"27":[["  #single_line_width_base                                                                                                          ",{}]],"28":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"29":[["                                                                                                                                   ",{}]],"30":[["Y2R::AST::Ruby::Self                                                                                                               ",{}]],"31":[["  #to_ruby_base                                                                                                                    ",{}]],"32":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"33":[["  #single_line_width_base                                                                                                          ",{}]],"34":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"35":[["                                                                                                                                   ",{}]],"36":[["Y2R::AST::Ruby::Literal                                                                                                            ",{}]],"37":[["  #to_ruby_base                                                                                                                    ",{}]],"38":[["    basics                                                                                                                         ",{}]],"39":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"40":[["  #single_line_width_base                                                                                                          ",{}]],"41":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"42":[["                                                                                                                                   ",{}]],"43":[["Y2R::AST::Ruby::Array                                                                                                              ",{}]],"44":[["  #to_ruby_base                                                                                                                    ",{}]],"45":[["    with lot of space available                                                                                                    ",{}]],"46":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"47":[["      passes correct context to elements",{"fg":2}],["                                                                                           ",{}]],"48":[["    with no space available                                                                                                        ",{}]],"49":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"50":[["      passes correct context to elements",{"fg":2}],["                                                                                           ",{}]],"51":[["  #single_line_width_base                                                                                                          ",{}]],"52":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]]}}],[0.014796,{"lines":{"0":[["      for blocks with commented args                                                                                               ",{}]],"1":[["        passes correct context to args",{"fg":2}],["                                                                                             ",{}]],"2":[["        passes correct context to statements",{"fg":2}],["                                                                                       ",{}]],"3":[["  #single_line_width_base                                                                                                          ",{}]],"4":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"5":[["    passes correct context to args",{"fg":2}],["                                                                                                 ",{}]],"6":[["    passes correct context to statements",{"fg":2}],["                                                                                           ",{}]],"7":[["                                                                                                                                   ",{}]],"8":[["Y2R::AST::Ruby::ConstAccess                                                                                                        ",{}]],"9":[["  #to_ruby_base                                                                                                                    ",{}]],"10":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"11":[["    for single-line const accesses                                                                                                 ",{}]],"12":[["      passes correct context to receiver",{"fg":2}],["                                                                                           ",{}]],"13":[["    for multi-line const accesses                                                                                                  ",{}]],"14":[["      passes correct context to receiver",{"fg":2}],["                                                                                           ",{}]],"15":[["  #single_line_width_base                                                                                                          ",{}]],"16":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"17":[["    passes correct context to receiver",{"fg":2}],["                                                                                             ",{}]],"18":[["                                                                                                                                   ",{}]],"19":[["Y2R::AST::Ruby::Variable                                                                                                           ",{}]],"20":[["  #to_ruby_base                                                                                                                    ",{}]],"21":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"22":[["  #single_line_width_base                                                                                                          ",{}]],"23":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"24":[["                                                                                                                                   ",{}]],"25":[["Y2R::AST::Ruby::Self                                                                                                               ",{}]],"26":[["  #to_ruby_base                                                                                                                    ",{}]],"27":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"28":[["  #single_line_width_base                                                                                                          ",{}]],"29":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"30":[["                                                                                                                                   ",{}]],"31":[["Y2R::AST::Ruby::Literal                                                                                                            ",{}]],"32":[["  #to_ruby_base                                                                                                                    ",{}]],"33":[["    basics                                                                                                                         ",{}]],"34":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"35":[["  #single_line_width_base                                                                                                          ",{}]],"36":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"37":[["                                                                                                                                   ",{}]],"38":[["Y2R::AST::Ruby::Array                                                                                                              ",{}]],"39":[["  #to_ruby_base                                                                                                                    ",{}]],"40":[["    with lot of space available                                                                                                    ",{}]],"41":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"42":[["      passes correct context to elements",{"fg":2}],["                                                                                           ",{}]],"43":[["    with no space available                                                                                                        ",{}]],"44":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"45":[["      passes correct context to elements",{"fg":2}],["                                                                                           ",{}]],"46":[["  #single_line_width_base                                                                                                          ",{}]],"47":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"48":[["    passes correct context to elements",{"fg":2}],["                                                                                             ",{}]],"49":[["                                                                                                                                   ",{}]],"50":[["Y2R::AST::Ruby::Hash                                                                                                               ",{}]],"51":[["  #to_ruby_base                                                                                                                    ",{}]],"52":[["    with lot of space available                                                                                                    ",{}]]}}],[0.013643,{"lines":{"0":[["        passes correct context to args",{"fg":2}],["                                                                                             ",{}]],"1":[["        passes correct context to statements",{"fg":2}],["                                                                                       ",{}]],"2":[["  #single_line_width_base                                                                                                          ",{}]],"3":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"4":[["    passes correct context to args",{"fg":2}],["                                                                                                 ",{}]],"5":[["    passes correct context to statements",{"fg":2}],["                                                                                           ",{}]],"6":[["                                                                                                                                   ",{}]],"7":[["Y2R::AST::Ruby::ConstAccess                                                                                                        ",{}]],"8":[["  #to_ruby_base                                                                                                                    ",{}]],"9":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"10":[["    for single-line const accesses                                                                                                 ",{}]],"11":[["      passes correct context to receiver",{"fg":2}],["                                                                                           ",{}]],"12":[["    for multi-line const accesses                                                                                                  ",{}]],"13":[["      passes correct context to receiver",{"fg":2}],["                                                                                           ",{}]],"14":[["  #single_line_width_base                                                                                                          ",{}]],"15":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"16":[["    passes correct context to receiver",{"fg":2}],["                                                                                             ",{}]],"17":[["                                                                                                                                   ",{}]],"18":[["Y2R::AST::Ruby::Variable                                                                                                           ",{}]],"19":[["  #to_ruby_base                                                                                                                    ",{}]],"20":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"21":[["  #single_line_width_base                                                                                                          ",{}]],"22":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"23":[["                                                                                                                                   ",{}]],"24":[["Y2R::AST::Ruby::Self                                                                                                               ",{}]],"25":[["  #to_ruby_base                                                                                                                    ",{}]],"26":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"27":[["  #single_line_width_base                                                                                                          ",{}]],"28":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"29":[["                                                                                                                                   ",{}]],"30":[["Y2R::AST::Ruby::Literal                                                                                                            ",{}]],"31":[["  #to_ruby_base                                                                                                                    ",{}]],"32":[["    basics                                                                                                                         ",{}]],"33":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"34":[["  #single_line_width_base                                                                                                          ",{}]],"35":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"36":[["                                                                                                                                   ",{}]],"37":[["Y2R::AST::Ruby::Array                                                                                                              ",{}]],"38":[["  #to_ruby_base                                                                                                                    ",{}]],"39":[["    with lot of space available                                                                                                    ",{}]],"40":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"41":[["      passes correct context to elements",{"fg":2}],["                                                                                           ",{}]],"42":[["    with no space available                                                                                                        ",{}]],"43":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"44":[["      passes correct context to elements",{"fg":2}],["                                                                                           ",{}]],"45":[["  #single_line_width_base                                                                                                          ",{}]],"46":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"47":[["    passes correct context to elements",{"fg":2}],["                                                                                             ",{}]],"48":[["                                                                                                                                   ",{}]],"49":[["Y2R::AST::Ruby::Hash                                                                                                               ",{}]],"50":[["  #to_ruby_base                                                                                                                    ",{}]],"51":[["    with lot of space available                                                                                                    ",{}]],"52":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]]}}],[0.005168000000000001,{"lines":{"0":[["  #single_line_width_base                                                                                                          ",{}]],"1":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"2":[["    passes correct context to args",{"fg":2}],["                                                                                                 ",{}]],"3":[["    passes correct context to statements",{"fg":2}],["                                                                                           ",{}]],"4":[["                                                                                                                                   ",{}]],"5":[["Y2R::AST::Ruby::ConstAccess                                                                                                        ",{}]],"6":[["  #to_ruby_base                                                                                                                    ",{}]],"7":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"8":[["    for single-line const accesses                                                                                                 ",{}]],"9":[["      passes correct context to receiver",{"fg":2}],["                                                                                           ",{}]],"10":[["    for multi-line const accesses                                                                                                  ",{}]],"12":[["  #single_line_width_base                                                                                                          ",{}]],"13":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"14":[["    passes correct context to receiver",{"fg":2}],["                                                                                             ",{}]],"15":[["                                                                                                                                   ",{}]],"16":[["Y2R::AST::Ruby::Variable                                                                                                           ",{}]],"17":[["  #to_ruby_base                                                                                                                    ",{}]],"18":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"19":[["  #single_line_width_base                                                                                                          ",{}]],"20":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"21":[["                                                                                                                                   ",{}]],"22":[["Y2R::AST::Ruby::Self                                                                                                               ",{}]],"23":[["  #to_ruby_base                                                                                                                    ",{}]],"24":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"25":[["  #single_line_width_base                                                                                                          ",{}]],"26":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"27":[["                                                                                                                                   ",{}]],"28":[["Y2R::AST::Ruby::Literal                                                                                                            ",{}]],"29":[["  #to_ruby_base                                                                                                                    ",{}]],"30":[["    basics                                                                                                                         ",{}]],"31":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"32":[["  #single_line_width_base                                                                                                          ",{}]],"33":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"34":[["                                                                                                                                   ",{}]],"35":[["Y2R::AST::Ruby::Array                                                                                                              ",{}]],"36":[["  #to_ruby_base                                                                                                                    ",{}]],"37":[["    with lot of space available                                                                                                    ",{}]],"38":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"39":[["      passes correct context to elements",{"fg":2}],["                                                                                           ",{}]],"40":[["    with no space available                                                                                                        ",{}]],"41":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"42":[["      passes correct context to elements",{"fg":2}],["                                                                                           ",{}]],"43":[["  #single_line_width_base                                                                                                          ",{}]],"44":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"45":[["    passes correct context to elements",{"fg":2}],["                                                                                             ",{}]],"46":[["                                                                                                                                   ",{}]],"47":[["Y2R::AST::Ruby::Hash                                                                                                               ",{}]],"48":[["  #to_ruby_base                                                                                                                    ",{}]],"49":[["    with lot of space available                                                                                                    ",{}]],"50":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"51":[["      passes correct context to entries",{"fg":2}],["                                                                                            ",{}]],"52":[["    with no space available                                                                                                        ",{}]]}}],[0.013957,{"lines":{"0":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"1":[["    passes correct context to args",{"fg":2}],["                                                                                                 ",{}]],"2":[["    passes correct context to statements",{"fg":2}],["                                                                                           ",{}]],"3":[["                                                                                                                                   ",{}]],"4":[["Y2R::AST::Ruby::ConstAccess                                                                                                        ",{}]],"5":[["  #to_ruby_base                                                                                                                    ",{}]],"6":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"7":[["    for single-line const accesses                                                                                                 ",{}]],"8":[["      passes correct context to receiver",{"fg":2}],["                                                                                           ",{}]],"9":[["    for multi-line const accesses                                                                                                  ",{}]],"10":[["      passes correct context to receiver",{"fg":2}],["                                                                                           ",{}]],"11":[["  #single_line_width_base                                                                                                          ",{}]],"12":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"13":[["    passes correct context to receiver",{"fg":2}],["                                                                                             ",{}]],"14":[["                                                                                                                                   ",{}]],"15":[["Y2R::AST::Ruby::Variable                                                                                                           ",{}]],"16":[["  #to_ruby_base                                                                                                                    ",{}]],"17":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"18":[["  #single_line_width_base                                                                                                          ",{}]],"19":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"20":[["                                                                                                                                   ",{}]],"21":[["Y2R::AST::Ruby::Self                                                                                                               ",{}]],"22":[["  #to_ruby_base                                                                                                                    ",{}]],"23":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"24":[["  #single_line_width_base                                                                                                          ",{}]],"25":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"26":[["                                                                                                                                   ",{}]],"27":[["Y2R::AST::Ruby::Literal                                                                                                            ",{}]],"28":[["  #to_ruby_base                                                                                                                    ",{}]],"29":[["    basics                                                                                                                         ",{}]],"30":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"31":[["  #single_line_width_base                                                                                                          ",{}]],"32":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"33":[["                                                                                                                                   ",{}]],"34":[["Y2R::AST::Ruby::Array                                                                                                              ",{}]],"35":[["  #to_ruby_base                                                                                                                    ",{}]],"36":[["    with lot of space available                                                                                                    ",{}]],"37":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"38":[["      passes correct context to elements",{"fg":2}],["                                                                                           ",{}]],"39":[["    with no space available                                                                                                        ",{}]],"40":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"41":[["      passes correct context to elements",{"fg":2}],["                                                                                           ",{}]],"42":[["  #single_line_width_base                                                                                                          ",{}]],"43":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"44":[["    passes correct context to elements",{"fg":2}],["                                                                                             ",{}]],"45":[["                                                                                                                                   ",{}]],"46":[["Y2R::AST::Ruby::Hash                                                                                                               ",{}]],"47":[["  #to_ruby_base                                                                                                                    ",{}]],"48":[["    with lot of space available                                                                                                    ",{}]],"49":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"50":[["      passes correct context to entries",{"fg":2}],["                                                                                            ",{}]],"51":[["    with no space available                                                                                                        ",{}]],"52":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]]}}],[0.013323,{"lines":{"0":[["    for single-line const accesses                                                                                                 ",{}]],"1":[["      passes correct context to receiver",{"fg":2}],["                                                                                           ",{}]],"2":[["    for multi-line const accesses                                                                                                  ",{}]],"3":[["      passes correct context to receiver",{"fg":2}],["                                                                                           ",{}]],"4":[["  #single_line_width_base                                                                                                          ",{}]],"5":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"6":[["    passes correct context to receiver",{"fg":2}],["                                                                                             ",{}]],"7":[["                                                                                                                                   ",{}]],"8":[["Y2R::AST::Ruby::Variable                                                                                                           ",{}]],"9":[["  #to_ruby_base                                                                                                                    ",{}]],"10":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"13":[["                                                                                                                                   ",{}]],"14":[["Y2R::AST::Ruby::Self                                                                                                               ",{}]],"15":[["  #to_ruby_base                                                                                                                    ",{}]],"16":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"17":[["  #single_line_width_base                                                                                                          ",{}]],"18":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"19":[["                                                                                                                                   ",{}]],"20":[["Y2R::AST::Ruby::Literal                                                                                                            ",{}]],"21":[["  #to_ruby_base                                                                                                                    ",{}]],"22":[["    basics                                                                                                                         ",{}]],"23":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"27":[["Y2R::AST::Ruby::Array                                                                                                              ",{}]],"29":[["    with lot of space available                                                                                                    ",{}]],"31":[["      passes correct context to elements",{"fg":2}],["                                                                                           ",{}]],"32":[["    with no space available                                                                                                        ",{}]],"33":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"34":[["      passes correct context to elements",{"fg":2}],["                                                                                           ",{}]],"35":[["  #single_line_width_base                                                                                                          ",{}]],"36":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"37":[["    passes correct context to elements",{"fg":2}],["                                                                                             ",{}]],"38":[["                                                                                                                                   ",{}]],"39":[["Y2R::AST::Ruby::Hash                                                                                                               ",{}]],"40":[["  #to_ruby_base                                                                                                                    ",{}]],"41":[["    with lot of space available                                                                                                    ",{}]],"42":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"43":[["      passes correct context to entries",{"fg":2}],["                                                                                            ",{}]],"44":[["    with no space available                                                                                                        ",{}]],"45":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"46":[["      passes correct context to entries",{"fg":2}],["                                                                                            ",{}]],"47":[["  #single_line_width_base                                                                                                          ",{}]],"48":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"49":[["    passes correct context to entries",{"fg":2}],["                                                                                              ",{}]],"50":[["                                                                                                                                   ",{}]],"51":[["Y2R::AST::Ruby::HashEntry                                                                                                          ",{}]],"52":[["  #to_ruby_base                                                                                                                    ",{}]]}}],[0.015341,{"lines":{"0":[["    passes correct context to receiver",{"fg":2}],["                                                                                             ",{}]],"1":[["                                                                                                                                   ",{}]],"2":[["Y2R::AST::Ruby::Variable                                                                                                           ",{}]],"3":[["  #to_ruby_base                                                                                                                    ",{}]],"4":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"5":[["  #single_line_width_base                                                                                                          ",{}]],"6":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"8":[["Y2R::AST::Ruby::Self                                                                                                               ",{}]],"14":[["Y2R::AST::Ruby::Literal                                                                                                            ",{}]],"16":[["    basics                                                                                                                         ",{}]],"17":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"18":[["  #single_line_width_base                                                                                                          ",{}]],"19":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"20":[["                                                                                                                                   ",{}]],"21":[["Y2R::AST::Ruby::Array                                                                                                              ",{}]],"22":[["  #to_ruby_base                                                                                                                    ",{}]],"23":[["    with lot of space available                                                                                                    ",{}]],"24":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"25":[["      passes correct context to elements",{"fg":2}],["                                                                                           ",{}]],"26":[["    with no space available                                                                                                        ",{}]],"27":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"28":[["      passes correct context to elements",{"fg":2}],["                                                                                           ",{}]],"29":[["  #single_line_width_base                                                                                                          ",{}]],"30":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"31":[["    passes correct context to elements",{"fg":2}],["                                                                                             ",{}]],"32":[["                                                                                                                                   ",{}]],"33":[["Y2R::AST::Ruby::Hash                                                                                                               ",{}]],"34":[["  #to_ruby_base                                                                                                                    ",{}]],"35":[["    with lot of space available                                                                                                    ",{}]],"36":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"37":[["      passes correct context to entries",{"fg":2}],["                                                                                            ",{}]],"38":[["    with no space available                                                                                                        ",{}]],"39":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"40":[["      passes correct context to entries",{"fg":2}],["                                                                                            ",{}]],"41":[["  #single_line_width_base                                                                                                          ",{}]],"42":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"43":[["    passes correct context to entries",{"fg":2}],["                                                                                              ",{}]],"44":[["                                                                                                                                   ",{}]],"45":[["Y2R::AST::Ruby::HashEntry                                                                                                          ",{}]],"46":[["  #to_ruby_base                                                                                                                    ",{}]],"47":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"48":[["    for single-line hash entries                                                                                                   ",{}]],"49":[["      passes correct context to key",{"fg":2}],["                                                                                                ",{}]],"50":[["      passes correct context to value",{"fg":2}],["                                                                                              ",{}]],"51":[["    for multi-line hash entries                                                                                                    ",{}]],"52":[["      passes correct context to key",{"fg":2}],["                                                                                                ",{}]]}}],[0.012916,{"lines":{"0":[["  #to_ruby_base                                                                                                                    ",{}]],"1":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"2":[["  #single_line_width_base                                                                                                          ",{}]],"3":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"4":[["                                                                                                                                   ",{}]],"5":[["Y2R::AST::Ruby::Literal                                                                                                            ",{}]],"6":[["  #to_ruby_base                                                                                                                    ",{}]],"7":[["    basics                                                                                                                         ",{}]],"8":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"9":[["  #single_line_width_base                                                                                                          ",{}]],"10":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"11":[["                                                                                                                                   ",{}]],"12":[["Y2R::AST::Ruby::Array                                                                                                              ",{}]],"13":[["  #to_ruby_base                                                                                                                    ",{}]],"14":[["    with lot of space available                                                                                                    ",{}]],"15":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"16":[["      passes correct context to elements",{"fg":2}],["                                                                                           ",{}]],"17":[["    with no space available                                                                                                        ",{}]],"18":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"19":[["      passes correct context to elements",{"fg":2}],["                                                                                           ",{}]],"20":[["  #single_line_width_base                                                                                                          ",{}]],"21":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"22":[["    passes correct context to elements",{"fg":2}],["                                                                                             ",{}]],"23":[["                                                                                                                                   ",{}]],"24":[["Y2R::AST::Ruby::Hash                                                                                                               ",{}]],"25":[["  #to_ruby_base                                                                                                                    ",{}]],"26":[["    with lot of space available                                                                                                    ",{}]],"28":[["      passes correct context to entries",{"fg":2}],["                                                                                            ",{}]],"29":[["    with no space available                                                                                                        ",{}]],"30":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"31":[["      passes correct context to entries",{"fg":2}],["                                                                                            ",{}]],"32":[["  #single_line_width_base                                                                                                          ",{}]],"33":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"34":[["    passes correct context to entries",{"fg":2}],["                                                                                              ",{}]],"35":[["                                                                                                                                   ",{}]],"36":[["Y2R::AST::Ruby::HashEntry                                                                                                          ",{}]],"37":[["  #to_ruby_base                                                                                                                    ",{}]],"38":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"39":[["    for single-line hash entries                                                                                                   ",{}]],"40":[["      passes correct context to key",{"fg":2}],["                                                                                                ",{}]],"41":[["      passes correct context to value",{"fg":2}],["                                                                                              ",{}]],"42":[["    for multi-line hash entries                                                                                                    ",{}]],"43":[["      passes correct context to key",{"fg":2}],["                                                                                                ",{}]],"44":[["      passes correct context to value",{"fg":2}],["                                                                                              ",{}]],"45":[["  #single_line_width_base                                                                                                          ",{}]],"46":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"47":[["    passes correct context to key",{"fg":2}],["                                                                                                  ",{}]],"48":[["    passes correct context to value",{"fg":2}],["                                                                                                ",{}]],"49":[["                                                                                                                                   ",{}]],"50":[["Y2R::AST::YCP::Assign                                                                                                              ",{}]],"51":[["  #compile                                                                                                                         ",{}]],"52":[["    for qualified assignments                                                                                                      ",{}]]}}],[0.012475,{"lines":{"0":[["Y2R::AST::Ruby::Literal                                                                                                            ",{}]],"1":[["  #to_ruby_base                                                                                                                    ",{}]],"2":[["    basics                                                                                                                         ",{}]],"3":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"4":[["  #single_line_width_base                                                                                                          ",{}]],"5":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"6":[["                                                                                                                                   ",{}]],"7":[["Y2R::AST::Ruby::Array                                                                                                              ",{}]],"8":[["  #to_ruby_base                                                                                                                    ",{}]],"9":[["    with lot of space available                                                                                                    ",{}]],"10":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"11":[["      passes correct context to elements",{"fg":2}],["                                                                                           ",{}]],"12":[["    with no space available                                                                                                        ",{}]],"13":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"14":[["      passes correct context to elements",{"fg":2}],["                                                                                           ",{}]],"15":[["  #single_line_width_base                                                                                                          ",{}]],"16":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"17":[["    passes correct context to elements",{"fg":2}],["                                                                                             ",{}]],"18":[["                                                                                                                                   ",{}]],"19":[["Y2R::AST::Ruby::Hash                                                                                                               ",{}]],"20":[["  #to_ruby_base                                                                                                                    ",{}]],"21":[["    with lot of space available                                                                                                    ",{}]],"22":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"23":[["      passes correct context to entries",{"fg":2}],["                                                                                            ",{}]],"24":[["    with no space available                                                                                                        ",{}]],"25":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"26":[["      passes correct context to entries",{"fg":2}],["                                                                                            ",{}]],"27":[["  #single_line_width_base                                                                                                          ",{}]],"28":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"29":[["    passes correct context to entries",{"fg":2}],["                                                                                              ",{}]],"30":[["                                                                                                                                   ",{}]],"31":[["Y2R::AST::Ruby::HashEntry                                                                                                          ",{}]],"32":[["  #to_ruby_base                                                                                                                    ",{}]],"33":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"34":[["    for single-line hash entries                                                                                                   ",{}]],"35":[["      passes correct context to key",{"fg":2}],["                                                                                                ",{}]],"36":[["      passes correct context to value",{"fg":2}],["                                                                                              ",{}]],"37":[["    for multi-line hash entries                                                                                                    ",{}]],"38":[["      passes correct context to key",{"fg":2}],["                                                                                                ",{}]],"39":[["      passes correct context to value",{"fg":2}],["                                                                                              ",{}]],"40":[["  #single_line_width_base                                                                                                          ",{}]],"41":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"42":[["    passes correct context to key",{"fg":2}],["                                                                                                  ",{}]],"43":[["    passes correct context to value",{"fg":2}],["                                                                                                ",{}]],"44":[["                                                                                                                                   ",{}]],"45":[["Y2R::AST::YCP::Assign                                                                                                              ",{}]],"46":[["  #compile                                                                                                                         ",{}]],"47":[["    for qualified assignments                                                                                                      ",{}]],"48":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"49":[["    for unqualified assignments                                                                                                    ",{}]],"50":[["      in global context that assign to global variables                                                                            ",{}]],"51":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"52":[["      in local context that assign to global variables                                                                             ",{}]]}}],[0.013964,{"lines":{"0":[["  #single_line_width_base                                                                                                          ",{}]],"1":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"2":[["                                                                                                                                   ",{}]],"3":[["Y2R::AST::Ruby::Array                                                                                                              ",{}]],"4":[["  #to_ruby_base                                                                                                                    ",{}]],"5":[["    with lot of space available                                                                                                    ",{}]],"6":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"7":[["      passes correct context to elements",{"fg":2}],["                                                                                           ",{}]],"8":[["    with no space available                                                                                                        ",{}]],"9":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"10":[["      passes correct context to elements",{"fg":2}],["                                                                                           ",{}]],"11":[["  #single_line_width_base                                                                                                          ",{}]],"12":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"13":[["    passes correct context to elements",{"fg":2}],["                                                                                             ",{}]],"14":[["                                                                                                                                   ",{}]],"15":[["Y2R::AST::Ruby::Hash                                                                                                               ",{}]],"16":[["  #to_ruby_base                                                                                                                    ",{}]],"17":[["    with lot of space available                                                                                                    ",{}]],"18":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"19":[["      passes correct context to entries",{"fg":2}],["                                                                                            ",{}]],"20":[["    with no space available                                                                                                        ",{}]],"21":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"22":[["      passes correct context to entries",{"fg":2}],["                                                                                            ",{}]],"23":[["  #single_line_width_base                                                                                                          ",{}]],"24":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"25":[["    passes correct context to entries",{"fg":2}],["                                                                                              ",{}]],"26":[["                                                                                                                                   ",{}]],"27":[["Y2R::AST::Ruby::HashEntry                                                                                                          ",{}]],"28":[["  #to_ruby_base                                                                                                                    ",{}]],"29":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"30":[["    for single-line hash entries                                                                                                   ",{}]],"31":[["      passes correct context to key",{"fg":2}],["                                                                                                ",{}]],"32":[["      passes correct context to value",{"fg":2}],["                                                                                              ",{}]],"33":[["    for multi-line hash entries                                                                                                    ",{}]],"34":[["      passes correct context to key",{"fg":2}],["                                                                                                ",{}]],"35":[["      passes correct context to value",{"fg":2}],["                                                                                              ",{}]],"36":[["  #single_line_width_base                                                                                                          ",{}]],"37":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"38":[["    passes correct context to key",{"fg":2}],["                                                                                                  ",{}]],"39":[["    passes correct context to value",{"fg":2}],["                                                                                                ",{}]],"40":[["                                                                                                                                   ",{}]],"41":[["Y2R::AST::YCP::Assign                                                                                                              ",{}]],"42":[["  #compile                                                                                                                         ",{}]],"43":[["    for qualified assignments                                                                                                      ",{}]],"44":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"45":[["    for unqualified assignments                                                                                                    ",{}]],"46":[["      in global context that assign to global variables                                                                            ",{}]],"47":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"48":[["      in local context that assign to global variables                                                                             ",{}]],"49":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"50":[["      in local context that assign to local variables                                                                              ",{}]],"52":[["      in nested local context that assign to inner variables                                                                       ",{}]]}}],[0.013362,{"lines":{"0":[["Y2R::AST::Ruby::Array                                                                                                              ",{}]],"1":[["  #to_ruby_base                                                                                                                    ",{}]],"2":[["    with lot of space available                                                                                                    ",{}]],"3":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"4":[["      passes correct context to elements",{"fg":2}],["                                                                                           ",{}]],"5":[["    with no space available                                                                                                        ",{}]],"8":[["  #single_line_width_base                                                                                                          ",{}]],"9":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"10":[["    passes correct context to elements",{"fg":2}],["                                                                                             ",{}]],"11":[["                                                                                                                                   ",{}]],"12":[["Y2R::AST::Ruby::Hash                                                                                                               ",{}]],"13":[["  #to_ruby_base                                                                                                                    ",{}]],"14":[["    with lot of space available                                                                                                    ",{}]],"15":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"16":[["      passes correct context to entries",{"fg":2}],["                                                                                            ",{}]],"17":[["    with no space available                                                                                                        ",{}]],"20":[["  #single_line_width_base                                                                                                          ",{}]],"21":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"22":[["    passes correct context to entries",{"fg":2}],["                                                                                              ",{}]],"23":[["                                                                                                                                   ",{}]],"24":[["Y2R::AST::Ruby::HashEntry                                                                                                          ",{}]],"25":[["  #to_ruby_base                                                                                                                    ",{}]],"26":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"27":[["    for single-line hash entries                                                                                                   ",{}]],"28":[["      passes correct context to key",{"fg":2}],["                                                                                                ",{}]],"29":[["      passes correct context to value",{"fg":2}],["                                                                                              ",{}]],"30":[["    for multi-line hash entries                                                                                                    ",{}]],"33":[["  #single_line_width_base                                                                                                          ",{}]],"34":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"35":[["    passes correct context to key",{"fg":2}],["                                                                                                  ",{}]],"36":[["    passes correct context to value",{"fg":2}],["                                                                                                ",{}]],"37":[["                                                                                                                                   ",{}]],"38":[["Y2R::AST::YCP::Assign                                                                                                              ",{}]],"39":[["  #compile                                                                                                                         ",{}]],"40":[["    for qualified assignments                                                                                                      ",{}]],"41":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"42":[["    for unqualified assignments                                                                                                    ",{}]],"43":[["      in global context that assign to global variables                                                                            ",{}]],"44":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"45":[["      in local context that assign to global variables                                                                             ",{}]],"46":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"47":[["      in local context that assign to local variables                                                                              ",{}]],"48":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"49":[["      in nested local context that assign to inner variables                                                                       ",{}]],"50":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"51":[["    for assignments with variables on rhs                                                                                          ",{}]],"52":[["      returns correct AST node for a rhs that doesn't need copy",{"fg":2}],["                                                                    ",{}]]}}],[0.016598,{"lines":{"0":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"1":[["    passes correct context to elements",{"fg":2}],["                                                                                             ",{}]],"2":[["                                                                                                                                   ",{}]],"3":[["Y2R::AST::Ruby::Hash                                                                                                               ",{}]],"4":[["  #to_ruby_base                                                                                                                    ",{}]],"5":[["    with lot of space available                                                                                                    ",{}]],"7":[["      passes correct context to entries",{"fg":2}],["                                                                                            ",{}]],"8":[["    with no space available                                                                                                        ",{}]],"9":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"10":[["      passes correct context to entries",{"fg":2}],["                                                                                            ",{}]],"11":[["  #single_line_width_base                                                                                                          ",{}]],"12":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"13":[["    passes correct context to entries",{"fg":2}],["                                                                                              ",{}]],"14":[["                                                                                                                                   ",{}]],"15":[["Y2R::AST::Ruby::HashEntry                                                                                                          ",{}]],"16":[["  #to_ruby_base                                                                                                                    ",{}]],"17":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"18":[["    for single-line hash entries                                                                                                   ",{}]],"19":[["      passes correct context to key",{"fg":2}],["                                                                                                ",{}]],"20":[["      passes correct context to value",{"fg":2}],["                                                                                              ",{}]],"21":[["    for multi-line hash entries                                                                                                    ",{}]],"22":[["      passes correct context to key",{"fg":2}],["                                                                                                ",{}]],"23":[["      passes correct context to value",{"fg":2}],["                                                                                              ",{}]],"24":[["  #single_line_width_base                                                                                                          ",{}]],"25":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"26":[["    passes correct context to key",{"fg":2}],["                                                                                                  ",{}]],"27":[["    passes correct context to value",{"fg":2}],["                                                                                                ",{}]],"28":[["                                                                                                                                   ",{}]],"29":[["Y2R::AST::YCP::Assign                                                                                                              ",{}]],"30":[["  #compile                                                                                                                         ",{}]],"31":[["    for qualified assignments                                                                                                      ",{}]],"32":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"33":[["    for unqualified assignments                                                                                                    ",{}]],"34":[["      in global context that assign to global variables                                                                            ",{}]],"35":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"36":[["      in local context that assign to global variables                                                                             ",{}]],"37":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"38":[["      in local context that assign to local variables                                                                              ",{}]],"39":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"40":[["      in nested local context that assign to inner variables                                                                       ",{}]],"41":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"42":[["    for assignments with variables on rhs                                                                                          ",{}]],"43":[["      returns correct AST node for a rhs that doesn't need copy",{"fg":2}],["                                                                    ",{}]],"44":[["      returns correct AST node for a rhs that needs copy",{"fg":2}],["                                                                           ",{}]],"45":[["                                                                                                                                   ",{}]],"46":[["Y2R::AST::YCP::Node                                                                                                                ",{}]],"47":[["  .transfers_comments                                                                                                              ",{}]],"48":[["    causes wrapped methods to transfer comments",{"fg":2}],["                                                                                    ",{}]],"49":[["                                                                                                                                   ",{}]],"50":[["Y2R::AST::YCP::Bracket                                                                                                             ",{}]],"51":[["  #compile                                                                                                                         ",{}]],"52":[["    returns correct AST node when args has single value",{"fg":2}],["                                                                            ",{}]]}}],[0.005725,{"lines":{"0":[["    with lot of space available                                                                                                    ",{}]],"1":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"2":[["      passes correct context to entries",{"fg":2}],["                                                                                            ",{}]],"3":[["    with no space available                                                                                                        ",{}]],"4":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"5":[["      passes correct context to entries",{"fg":2}],["                                                                                            ",{}]],"6":[["  #single_line_width_base                                                                                                          ",{}]],"7":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"8":[["    passes correct context to entries",{"fg":2}],["                                                                                              ",{}]],"9":[["                                                                                                                                   ",{}]],"10":[["Y2R::AST::Ruby::HashEntry                                                                                                          ",{}]],"11":[["  #to_ruby_base                                                                                                                    ",{}]],"12":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"13":[["    for single-line hash entries                                                                                                   ",{}]],"14":[["      passes correct context to key",{"fg":2}],["                                                                                                ",{}]],"15":[["      passes correct context to value",{"fg":2}],["                                                                                              ",{}]],"16":[["    for multi-line hash entries                                                                                                    ",{}]],"17":[["      passes correct context to key",{"fg":2}],["                                                                                                ",{}]],"18":[["      passes correct context to value",{"fg":2}],["                                                                                              ",{}]],"19":[["  #single_line_width_base                                                                                                          ",{}]],"20":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"21":[["    passes correct context to key",{"fg":2}],["                                                                                                  ",{}]],"22":[["    passes correct context to value",{"fg":2}],["                                                                                                ",{}]],"23":[["                                                                                                                                   ",{}]],"24":[["Y2R::AST::YCP::Assign                                                                                                              ",{}]],"25":[["  #compile                                                                                                                         ",{}]],"26":[["    for qualified assignments                                                                                                      ",{}]],"27":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"28":[["    for unqualified assignments                                                                                                    ",{}]],"29":[["      in global context that assign to global variables                                                                            ",{}]],"30":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"31":[["      in local context that assign to global variables                                                                             ",{}]],"32":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"33":[["      in local context that assign to local variables                                                                              ",{}]],"34":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"35":[["      in nested local context that assign to inner variables                                                                       ",{}]],"36":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"37":[["    for assignments with variables on rhs                                                                                          ",{}]],"38":[["      returns correct AST node for a rhs that doesn't need copy",{"fg":2}],["                                                                    ",{}]],"39":[["      returns correct AST node for a rhs that needs copy",{"fg":2}],["                                                                           ",{}]],"40":[["                                                                                                                                   ",{}]],"41":[["Y2R::AST::YCP::Node                                                                                                                ",{}]],"42":[["  .transfers_comments                                                                                                              ",{}]],"43":[["    causes wrapped methods to transfer comments",{"fg":2}],["                                                                                    ",{}]],"44":[["                                                                                                                                   ",{}]],"45":[["Y2R::AST::YCP::Bracket                                                                                                             ",{}]],"46":[["  #compile                                                                                                                         ",{}]],"47":[["    returns correct AST node when args has single value",{"fg":2}],["                                                                            ",{}]],"48":[["    returns correct AST node when args has multiple elements",{"fg":2}],["                                                                       ",{}]],"50":[["Y2R::AST::YCP::Break                                                                                                               ",{}]],"52":[["    for break statements inside a while statement                                                                                  ",{}]]}}],[0.021483,{"lines":{"0":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"1":[["      passes correct context to entries",{"fg":2}],["                                                                                            ",{}]],"2":[["    with no space available                                                                                                        ",{}]],"3":[["      emits correct code",{"fg":2}],["                                                                                                           ",{}]],"4":[["      passes correct context to entries",{"fg":2}],["                                                                                            ",{}]],"5":[["  #single_line_width_base                                                                                                          ",{}]],"6":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"7":[["    passes correct context to entries",{"fg":2}],["                                                                                              ",{}]],"8":[["                                                                                                                                   ",{}]],"9":[["Y2R::AST::Ruby::HashEntry                                                                                                          ",{}]],"10":[["  #to_ruby_base                                                                                                                    ",{}]],"11":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"12":[["    for single-line hash entries                                                                                                   ",{}]],"13":[["      passes correct context to key",{"fg":2}],["                                                                                                ",{}]],"14":[["      passes correct context to value",{"fg":2}],["                                                                                              ",{}]],"15":[["    for multi-line hash entries                                                                                                    ",{}]],"16":[["      passes correct context to key",{"fg":2}],["                                                                                                ",{}]],"17":[["      passes correct context to value",{"fg":2}],["                                                                                              ",{}]],"18":[["  #single_line_width_base                                                                                                          ",{}]],"19":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"20":[["    passes correct context to key",{"fg":2}],["                                                                                                  ",{}]],"21":[["    passes correct context to value",{"fg":2}],["                                                                                                ",{}]],"22":[["                                                                                                                                   ",{}]],"23":[["Y2R::AST::YCP::Assign                                                                                                              ",{}]],"24":[["  #compile                                                                                                                         ",{}]],"25":[["    for qualified assignments                                                                                                      ",{}]],"26":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"27":[["    for unqualified assignments                                                                                                    ",{}]],"28":[["      in global context that assign to global variables                                                                            ",{}]],"29":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"30":[["      in local context that assign to global variables                                                                             ",{}]],"31":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"32":[["      in local context that assign to local variables                                                                              ",{}]],"33":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"34":[["      in nested local context that assign to inner variables                                                                       ",{}]],"35":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"36":[["    for assignments with variables on rhs                                                                                          ",{}]],"37":[["      returns correct AST node for a rhs that doesn't need copy",{"fg":2}],["                                                                    ",{}]],"38":[["      returns correct AST node for a rhs that needs copy",{"fg":2}],["                                                                           ",{}]],"39":[["                                                                                                                                   ",{}]],"40":[["Y2R::AST::YCP::Node                                                                                                                ",{}]],"41":[["  .transfers_comments                                                                                                              ",{}]],"42":[["    causes wrapped methods to transfer comments",{"fg":2}],["                                                                                    ",{}]],"43":[["                                                                                                                                   ",{}]],"44":[["Y2R::AST::YCP::Bracket                                                                                                             ",{}]],"45":[["  #compile                                                                                                                         ",{}]],"46":[["    returns correct AST node when args has single value",{"fg":2}],["                                                                            ",{}]],"47":[["    returns correct AST node when args has multiple elements",{"fg":2}],["                                                                       ",{}]],"48":[["                                                                                                                                   ",{}]],"49":[["Y2R::AST::YCP::Break                                                                                                               ",{}]],"50":[["  #compile                                                                                                                         ",{}]],"51":[["    for break statements inside a while statement                                                                                  ",{}]],"52":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]]}}],[0.012328,{"lines":{"0":[["  #single_line_width_base                                                                                                          ",{}]],"1":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"2":[["    passes correct context to entries",{"fg":2}],["                                                                                              ",{}]],"3":[["                                                                                                                                   ",{}]],"4":[["Y2R::AST::Ruby::HashEntry                                                                                                          ",{}]],"5":[["  #to_ruby_base                                                                                                                    ",{}]],"6":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"7":[["    for single-line hash entries                                                                                                   ",{}]],"8":[["      passes correct context to key",{"fg":2}],["                                                                                                ",{}]],"9":[["      passes correct context to value",{"fg":2}],["                                                                                              ",{}]],"10":[["    for multi-line hash entries                                                                                                    ",{}]],"11":[["      passes correct context to key",{"fg":2}],["                                                                                                ",{}]],"12":[["      passes correct context to value",{"fg":2}],["                                                                                              ",{}]],"13":[["  #single_line_width_base                                                                                                          ",{}]],"14":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"15":[["    passes correct context to key",{"fg":2}],["                                                                                                  ",{}]],"16":[["    passes correct context to value",{"fg":2}],["                                                                                                ",{}]],"17":[["                                                                                                                                   ",{}]],"18":[["Y2R::AST::YCP::Assign                                                                                                              ",{}]],"19":[["  #compile                                                                                                                         ",{}]],"20":[["    for qualified assignments                                                                                                      ",{}]],"21":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"22":[["    for unqualified assignments                                                                                                    ",{}]],"23":[["      in global context that assign to global variables                                                                            ",{}]],"24":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"25":[["      in local context that assign to global variables                                                                             ",{}]],"26":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"27":[["      in local context that assign to local variables                                                                              ",{}]],"28":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"29":[["      in nested local context that assign to inner variables                                                                       ",{}]],"30":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"31":[["    for assignments with variables on rhs                                                                                          ",{}]],"32":[["      returns correct AST node for a rhs that doesn't need copy",{"fg":2}],["                                                                    ",{}]],"33":[["      returns correct AST node for a rhs that needs copy",{"fg":2}],["                                                                           ",{}]],"34":[["                                                                                                                                   ",{}]],"35":[["Y2R::AST::YCP::Node                                                                                                                ",{}]],"36":[["  .transfers_comments                                                                                                              ",{}]],"37":[["    causes wrapped methods to transfer comments",{"fg":2}],["                                                                                    ",{}]],"38":[["                                                                                                                                   ",{}]],"39":[["Y2R::AST::YCP::Bracket                                                                                                             ",{}]],"40":[["  #compile                                                                                                                         ",{}]],"41":[["    returns correct AST node when args has single value",{"fg":2}],["                                                                            ",{}]],"42":[["    returns correct AST node when args has multiple elements",{"fg":2}],["                                                                       ",{}]],"44":[["Y2R::AST::YCP::Break                                                                                                               ",{}]],"46":[["    for break statements inside a while statement                                                                                  ",{}]],"47":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"48":[["    for break statements inside a do statement                                                                                     ",{}]],"49":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"50":[["    for break statements inside a repeat statement                                                                                 ",{}]],"51":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"52":[["    for break statements inside a case clause                                                                                      ",{}]]}}],[0.054465,{"lines":{"0":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"1":[["    passes correct context to entries",{"fg":2}],["                                                                                              ",{}]],"2":[["                                                                                                                                   ",{}]],"3":[["Y2R::AST::Ruby::HashEntry                                                                                                          ",{}]],"4":[["  #to_ruby_base                                                                                                                    ",{}]],"5":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"6":[["    for single-line hash entries                                                                                                   ",{}]],"7":[["      passes correct context to key",{"fg":2}],["                                                                                                ",{}]],"8":[["      passes correct context to value",{"fg":2}],["                                                                                              ",{}]],"9":[["    for multi-line hash entries                                                                                                    ",{}]],"10":[["      passes correct context to key",{"fg":2}],["                                                                                                ",{}]],"11":[["      passes correct context to value",{"fg":2}],["                                                                                              ",{}]],"12":[["  #single_line_width_base                                                                                                          ",{}]],"13":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"14":[["    passes correct context to key",{"fg":2}],["                                                                                                  ",{}]],"15":[["    passes correct context to value",{"fg":2}],["                                                                                                ",{}]],"16":[["                                                                                                                                   ",{}]],"17":[["Y2R::AST::YCP::Assign                                                                                                              ",{}]],"18":[["  #compile                                                                                                                         ",{}]],"19":[["    for qualified assignments                                                                                                      ",{}]],"20":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"21":[["    for unqualified assignments                                                                                                    ",{}]],"22":[["      in global context that assign to global variables                                                                            ",{}]],"23":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"24":[["      in local context that assign to global variables                                                                             ",{}]],"25":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"26":[["      in local context that assign to local variables                                                                              ",{}]],"27":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"28":[["      in nested local context that assign to inner variables                                                                       ",{}]],"29":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"30":[["    for assignments with variables on rhs                                                                                          ",{}]],"31":[["      returns correct AST node for a rhs that doesn't need copy",{"fg":2}],["                                                                    ",{}]],"32":[["      returns correct AST node for a rhs that needs copy",{"fg":2}],["                                                                           ",{}]],"33":[["                                                                                                                                   ",{}]],"34":[["Y2R::AST::YCP::Node                                                                                                                ",{}]],"35":[["  .transfers_comments                                                                                                              ",{}]],"36":[["    causes wrapped methods to transfer comments",{"fg":2}],["                                                                                    ",{}]],"37":[["                                                                                                                                   ",{}]],"38":[["Y2R::AST::YCP::Bracket                                                                                                             ",{}]],"39":[["  #compile                                                                                                                         ",{}]],"40":[["    returns correct AST node when args has single value",{"fg":2}],["                                                                            ",{}]],"41":[["    returns correct AST node when args has multiple elements",{"fg":2}],["                                                                       ",{}]],"42":[["                                                                                                                                   ",{}]],"43":[["Y2R::AST::YCP::Break                                                                                                               ",{}]],"44":[["  #compile                                                                                                                         ",{}]],"45":[["    for break statements inside a while statement                                                                                  ",{}]],"46":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"47":[["    for break statements inside a do statement                                                                                     ",{}]],"48":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"49":[["    for break statements inside a repeat statement                                                                                 ",{}]],"50":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"51":[["    for break statements inside a case clause                                                                                      ",{}]],"52":[["      raises an exception",{"fg":2}],["                                                                                                          ",{}]]}}],[0.011422,{"lines":{"0":[["    emits correct code",{"fg":2}],["                                                                                                             ",{}]],"1":[["    for single-line hash entries                                                                                                   ",{}]],"2":[["      passes correct context to key",{"fg":2}],["                                                                                                ",{}]],"3":[["      passes correct context to value",{"fg":2}],["                                                                                              ",{}]],"4":[["    for multi-line hash entries                                                                                                    ",{}]],"5":[["      passes correct context to key",{"fg":2}],["                                                                                                ",{}]],"6":[["      passes correct context to value",{"fg":2}],["                                                                                              ",{}]],"7":[["  #single_line_width_base                                                                                                          ",{}]],"8":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"9":[["    passes correct context to key",{"fg":2}],["                                                                                                  ",{}]],"10":[["    passes correct context to value",{"fg":2}],["                                                                                                ",{}]],"11":[["                                                                                                                                   ",{}]],"12":[["Y2R::AST::YCP::Assign                                                                                                              ",{}]],"13":[["  #compile                                                                                                                         ",{}]],"14":[["    for qualified assignments                                                                                                      ",{}]],"15":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"16":[["    for unqualified assignments                                                                                                    ",{}]],"17":[["      in global context that assign to global variables                                                                            ",{}]],"18":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"19":[["      in local context that assign to global variables                                                                             ",{}]],"20":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"21":[["      in local context that assign to local variables                                                                              ",{}]],"22":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"23":[["      in nested local context that assign to inner variables                                                                       ",{}]],"24":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"25":[["    for assignments with variables on rhs                                                                                          ",{}]],"26":[["      returns correct AST node for a rhs that doesn't need copy",{"fg":2}],["                                                                    ",{}]],"27":[["      returns correct AST node for a rhs that needs copy",{"fg":2}],["                                                                           ",{}]],"28":[["                                                                                                                                   ",{}]],"29":[["Y2R::AST::YCP::Node                                                                                                                ",{}]],"30":[["  .transfers_comments                                                                                                              ",{}]],"31":[["    causes wrapped methods to transfer comments",{"fg":2}],["                                                                                    ",{}]],"32":[["                                                                                                                                   ",{}]],"33":[["Y2R::AST::YCP::Bracket                                                                                                             ",{}]],"34":[["  #compile                                                                                                                         ",{}]],"35":[["    returns correct AST node when args has single value",{"fg":2}],["                                                                            ",{}]],"36":[["    returns correct AST node when args has multiple elements",{"fg":2}],["                                                                       ",{}]],"38":[["Y2R::AST::YCP::Break                                                                                                               ",{}]],"40":[["    for break statements inside a while statement                                                                                  ",{}]],"41":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"42":[["    for break statements inside a do statement                                                                                     ",{}]],"43":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"44":[["    for break statements inside a repeat statement                                                                                 ",{}]],"45":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"46":[["    for break statements inside a case clause                                                                                      ",{}]],"47":[["      raises an exception",{"fg":2}],["                                                                                                          ",{}]],"48":[["    for break statements inside a default clause                                                                                   ",{}]],"49":[["      raises an exception",{"fg":2}],["                                                                                                          ",{}]],"50":[["    for break statements inside a while statement which is inside a block expression                                               ",{}]],"51":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"52":[["    for break statements inside a do statement which is inside a block expression                                                  ",{}]]}}],[0.016641,{"lines":{"0":[["      passes correct context to value",{"fg":2}],["                                                                                              ",{}]],"1":[["  #single_line_width_base                                                                                                          ",{}]],"2":[["    returns correct value",{"fg":2}],["                                                                                                          ",{}]],"3":[["    passes correct context to key",{"fg":2}],["                                                                                                  ",{}]],"4":[["    passes correct context to value",{"fg":2}],["                                                                                                ",{}]],"5":[["                                                                                                                                   ",{}]],"6":[["Y2R::AST::YCP::Assign                                                                                                              ",{}]],"7":[["  #compile                                                                                                                         ",{}]],"8":[["    for qualified assignments                                                                                                      ",{}]],"9":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"10":[["    for unqualified assignments                                                                                                    ",{}]],"11":[["      in global context that assign to global variables                                                                            ",{}]],"12":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"13":[["      in local context that assign to global variables                                                                             ",{}]],"14":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"15":[["      in local context that assign to local variables                                                                              ",{}]],"16":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"17":[["      in nested local context that assign to inner variables                                                                       ",{}]],"19":[["    for assignments with variables on rhs                                                                                          ",{}]],"20":[["      returns correct AST node for a rhs that doesn't need copy",{"fg":2}],["                                                                    ",{}]],"21":[["      returns correct AST node for a rhs that needs copy",{"fg":2}],["                                                                           ",{}]],"22":[["                                                                                                                                   ",{}]],"23":[["Y2R::AST::YCP::Node                                                                                                                ",{}]],"24":[["  .transfers_comments                                                                                                              ",{}]],"25":[["    causes wrapped methods to transfer comments",{"fg":2}],["                                                                                    ",{}]],"26":[["                                                                                                                                   ",{}]],"27":[["Y2R::AST::YCP::Bracket                                                                                                             ",{}]],"28":[["  #compile                                                                                                                         ",{}]],"29":[["    returns correct AST node when args has single value",{"fg":2}],["                                                                            ",{}]],"30":[["    returns correct AST node when args has multiple elements",{"fg":2}],["                                                                       ",{}]],"31":[["                                                                                                                                   ",{}]],"32":[["Y2R::AST::YCP::Break                                                                                                               ",{}]],"33":[["  #compile                                                                                                                         ",{}]],"34":[["    for break statements inside a while statement                                                                                  ",{}]],"35":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"36":[["    for break statements inside a do statement                                                                                     ",{}]],"37":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"38":[["    for break statements inside a repeat statement                                                                                 ",{}]],"39":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"40":[["    for break statements inside a case clause                                                                                      ",{}]],"41":[["      raises an exception",{"fg":2}],["                                                                                                          ",{}]],"42":[["    for break statements inside a default clause                                                                                   ",{}]],"43":[["      raises an exception",{"fg":2}],["                                                                                                          ",{}]],"44":[["    for break statements inside a while statement which is inside a block expression                                               ",{}]],"46":[["    for break statements inside a do statement which is inside a block expression                                                  ",{}]],"47":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"48":[["    for break statements inside a repeat statement which is inside a block expression                                              ",{}]],"49":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"50":[["    for break statements inside a case clause which is inside a block expression                                                   ",{}]],"51":[["      raises an exception",{"fg":2}],["                                                                                                          ",{}]],"52":[["    for break statements inside a default clause which is inside a block expression                                                ",{}]]}}],[0.016628,{"lines":{"0":[["                                                                                                                                   ",{}]],"1":[["Y2R::AST::YCP::Assign                                                                                                              ",{}]],"2":[["  #compile                                                                                                                         ",{}]],"3":[["    for qualified assignments                                                                                                      ",{}]],"4":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"5":[["    for unqualified assignments                                                                                                    ",{}]],"6":[["      in global context that assign to global variables                                                                            ",{}]],"7":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"8":[["      in local context that assign to global variables                                                                             ",{}]],"9":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"10":[["      in local context that assign to local variables                                                                              ",{}]],"11":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"12":[["      in nested local context that assign to inner variables                                                                       ",{}]],"13":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"14":[["    for assignments with variables on rhs                                                                                          ",{}]],"15":[["      returns correct AST node for a rhs that doesn't need copy",{"fg":2}],["                                                                    ",{}]],"16":[["      returns correct AST node for a rhs that needs copy",{"fg":2}],["                                                                           ",{}]],"17":[["                                                                                                                                   ",{}]],"18":[["Y2R::AST::YCP::Node                                                                                                                ",{}]],"19":[["  .transfers_comments                                                                                                              ",{}]],"20":[["    causes wrapped methods to transfer comments",{"fg":2}],["                                                                                    ",{}]],"21":[["                                                                                                                                   ",{}]],"22":[["Y2R::AST::YCP::Bracket                                                                                                             ",{}]],"23":[["  #compile                                                                                                                         ",{}]],"24":[["    returns correct AST node when args has single value",{"fg":2}],["                                                                            ",{}]],"25":[["    returns correct AST node when args has multiple elements",{"fg":2}],["                                                                       ",{}]],"27":[["Y2R::AST::YCP::Break                                                                                                               ",{}]],"29":[["    for break statements inside a while statement                                                                                  ",{}]],"30":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"31":[["    for break statements inside a do statement                                                                                     ",{}]],"32":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"33":[["    for break statements inside a repeat statement                                                                                 ",{}]],"34":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"35":[["    for break statements inside a case clause                                                                                      ",{}]],"36":[["      raises an exception",{"fg":2}],["                                                                                                          ",{}]],"37":[["    for break statements inside a default clause                                                                                   ",{}]],"38":[["      raises an exception",{"fg":2}],["                                                                                                          ",{}]],"39":[["    for break statements inside a while statement which is inside a block expression                                               ",{}]],"40":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"41":[["    for break statements inside a do statement which is inside a block expression                                                  ",{}]],"42":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"43":[["    for break statements inside a repeat statement which is inside a block expression                                              ",{}]],"44":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"45":[["    for break statements inside a case clause which is inside a block expression                                                   ",{}]],"46":[["      raises an exception",{"fg":2}],["                                                                                                          ",{}]],"47":[["    for break statements inside a default clause which is inside a block expression                                                ",{}]],"48":[["      raises an exception",{"fg":2}],["                                                                                                          ",{}]],"49":[["    for break statements inside a block expression                                                                                 ",{}]],"50":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"51":[["    for break statements inside a block expression which is inside a while statement                                               ",{}]],"52":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]]}}],[0.016178,{"lines":{"0":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"1":[["      in local context that assign to global variables                                                                             ",{}]],"2":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"3":[["      in local context that assign to local variables                                                                              ",{}]],"4":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"5":[["      in nested local context that assign to inner variables                                                                       ",{}]],"6":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"7":[["    for assignments with variables on rhs                                                                                          ",{}]],"8":[["      returns correct AST node for a rhs that doesn't need copy",{"fg":2}],["                                                                    ",{}]],"9":[["      returns correct AST node for a rhs that needs copy",{"fg":2}],["                                                                           ",{}]],"10":[["                                                                                                                                   ",{}]],"11":[["Y2R::AST::YCP::Node                                                                                                                ",{}]],"12":[["  .transfers_comments                                                                                                              ",{}]],"13":[["    causes wrapped methods to transfer comments",{"fg":2}],["                                                                                    ",{}]],"14":[["                                                                                                                                   ",{}]],"15":[["Y2R::AST::YCP::Bracket                                                                                                             ",{}]],"16":[["  #compile                                                                                                                         ",{}]],"17":[["    returns correct AST node when args has single value",{"fg":2}],["                                                                            ",{}]],"18":[["    returns correct AST node when args has multiple elements",{"fg":2}],["                                                                       ",{}]],"19":[["                                                                                                                                   ",{}]],"20":[["Y2R::AST::YCP::Break                                                                                                               ",{}]],"21":[["  #compile                                                                                                                         ",{}]],"22":[["    for break statements inside a while statement                                                                                  ",{}]],"23":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"24":[["    for break statements inside a do statement                                                                                     ",{}]],"25":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"26":[["    for break statements inside a repeat statement                                                                                 ",{}]],"27":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"28":[["    for break statements inside a case clause                                                                                      ",{}]],"29":[["      raises an exception",{"fg":2}],["                                                                                                          ",{}]],"30":[["    for break statements inside a default clause                                                                                   ",{}]],"31":[["      raises an exception",{"fg":2}],["                                                                                                          ",{}]],"32":[["    for break statements inside a while statement which is inside a block expression                                               ",{}]],"33":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"34":[["    for break statements inside a do statement which is inside a block expression                                                  ",{}]],"35":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"36":[["    for break statements inside a repeat statement which is inside a block expression                                              ",{}]],"37":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"38":[["    for break statements inside a case clause which is inside a block expression                                                   ",{}]],"39":[["      raises an exception",{"fg":2}],["                                                                                                          ",{}]],"40":[["    for break statements inside a default clause which is inside a block expression                                                ",{}]],"41":[["      raises an exception",{"fg":2}],["                                                                                                          ",{}]],"42":[["    for break statements inside a block expression                                                                                 ",{}]],"43":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"44":[["    for break statements inside a block expression which is inside a while statement                                               ",{}]],"45":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"46":[["    for break statements inside a block expression which is inside a do statement                                                  ",{}]],"47":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"48":[["    for break statements inside a block expression which is inside a repeat statement                                              ",{}]],"49":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"50":[["    for break statements inside a block expression which is inside a case clause                                                   ",{}]],"51":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"52":[["    for break statements inside a block expression which is inside a default clause                                                ",{}]]}}],[0.016236,{"lines":{"1":[["    for assignments with variables on rhs                                                                                          ",{}]],"2":[["      returns correct AST node for a rhs that doesn't need copy",{"fg":2}],["                                                                    ",{}]],"3":[["      returns correct AST node for a rhs that needs copy",{"fg":2}],["                                                                           ",{}]],"4":[["                                                                                                                                   ",{}]],"5":[["Y2R::AST::YCP::Node                                                                                                                ",{}]],"6":[["  .transfers_comments                                                                                                              ",{}]],"7":[["    causes wrapped methods to transfer comments",{"fg":2}],["                                                                                    ",{}]],"8":[["                                                                                                                                   ",{}]],"9":[["Y2R::AST::YCP::Bracket                                                                                                             ",{}]],"10":[["  #compile                                                                                                                         ",{}]],"11":[["    returns correct AST node when args has single value",{"fg":2}],["                                                                            ",{}]],"12":[["    returns correct AST node when args has multiple elements",{"fg":2}],["                                                                       ",{}]],"13":[["                                                                                                                                   ",{}]],"14":[["Y2R::AST::YCP::Break                                                                                                               ",{}]],"15":[["  #compile                                                                                                                         ",{}]],"16":[["    for break statements inside a while statement                                                                                  ",{}]],"17":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"18":[["    for break statements inside a do statement                                                                                     ",{}]],"19":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"20":[["    for break statements inside a repeat statement                                                                                 ",{}]],"21":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"22":[["    for break statements inside a case clause                                                                                      ",{}]],"23":[["      raises an exception",{"fg":2}],["                                                                                                          ",{}]],"24":[["    for break statements inside a default clause                                                                                   ",{}]],"25":[["      raises an exception",{"fg":2}],["                                                                                                          ",{}]],"26":[["    for break statements inside a while statement which is inside a block expression                                               ",{}]],"28":[["    for break statements inside a do statement which is inside a block expression                                                  ",{}]],"29":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"30":[["    for break statements inside a repeat statement which is inside a block expression                                              ",{}]],"31":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"32":[["    for break statements inside a case clause which is inside a block expression                                                   ",{}]],"33":[["      raises an exception",{"fg":2}],["                                                                                                          ",{}]],"34":[["    for break statements inside a default clause which is inside a block expression                                                ",{}]],"35":[["      raises an exception",{"fg":2}],["                                                                                                          ",{}]],"36":[["    for break statements inside a block expression                                                                                 ",{}]],"38":[["    for break statements inside a block expression which is inside a while statement                                               ",{}]],"39":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"40":[["    for break statements inside a block expression which is inside a do statement                                                  ",{}]],"41":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"42":[["    for break statements inside a block expression which is inside a repeat statement                                              ",{}]],"44":[["    for break statements inside a block expression which is inside a case clause                                                   ",{}]],"46":[["    for break statements inside a block expression which is inside a default clause                                                ",{}]],"48":[["                                                                                                                                   ",{}]],"49":[["Y2R::AST::YCP::Builtin                                                                                                             ",{}]],"50":[["  #compile                                                                                                                         ",{}]],"51":[["    returns correct AST node for builtins with no arguments and no block",{"fg":2}],["                                                           ",{}]],"52":[["    returns correct AST node for builtins with arguments and no block",{"fg":2}],["                                                              ",{}]]}}],[0.014385,{"lines":{"0":[["      returns correct AST node for a rhs that doesn't need copy",{"fg":2}],["                                                                    ",{}]],"1":[["      returns correct AST node for a rhs that needs copy",{"fg":2}],["                                                                           ",{}]],"2":[["                                                                                                                                   ",{}]],"3":[["Y2R::AST::YCP::Node                                                                                                                ",{}]],"4":[["  .transfers_comments                                                                                                              ",{}]],"5":[["    causes wrapped methods to transfer comments",{"fg":2}],["                                                                                    ",{}]],"6":[["                                                                                                                                   ",{}]],"7":[["Y2R::AST::YCP::Bracket                                                                                                             ",{}]],"8":[["  #compile                                                                                                                         ",{}]],"9":[["    returns correct AST node when args has single value",{"fg":2}],["                                                                            ",{}]],"10":[["    returns correct AST node when args has multiple elements",{"fg":2}],["                                                                       ",{}]],"11":[["                                                                                                                                   ",{}]],"12":[["Y2R::AST::YCP::Break                                                                                                               ",{}]],"13":[["  #compile                                                                                                                         ",{}]],"14":[["    for break statements inside a while statement                                                                                  ",{}]],"15":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"16":[["    for break statements inside a do statement                                                                                     ",{}]],"18":[["    for break statements inside a repeat statement                                                                                 ",{}]],"20":[["    for break statements inside a case clause                                                                                      ",{}]],"21":[["      raises an exception",{"fg":2}],["                                                                                                          ",{}]],"22":[["    for break statements inside a default clause                                                                                   ",{}]],"24":[["    for break statements inside a while statement which is inside a block expression                                               ",{}]],"25":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"26":[["    for break statements inside a do statement which is inside a block expression                                                  ",{}]],"28":[["    for break statements inside a repeat statement which is inside a block expression                                              ",{}]],"30":[["    for break statements inside a case clause which is inside a block expression                                                   ",{}]],"31":[["      raises an exception",{"fg":2}],["                                                                                                          ",{}]],"32":[["    for break statements inside a default clause which is inside a block expression                                                ",{}]],"34":[["    for break statements inside a block expression                                                                                 ",{}]],"35":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"36":[["    for break statements inside a block expression which is inside a while statement                                               ",{}]],"38":[["    for break statements inside a block expression which is inside a do statement                                                  ",{}]],"40":[["    for break statements inside a block expression which is inside a repeat statement                                              ",{}]],"42":[["    for break statements inside a block expression which is inside a case clause                                                   ",{}]],"44":[["    for break statements inside a block expression which is inside a default clause                                                ",{}]],"46":[["                                                                                                                                   ",{}]],"47":[["Y2R::AST::YCP::Builtin                                                                                                             ",{}]],"48":[["  #compile                                                                                                                         ",{}]],"49":[["    returns correct AST node for builtins with no arguments and no block",{"fg":2}],["                                                           ",{}]],"50":[["    returns correct AST node for builtins with arguments and no block",{"fg":2}],["                                                              ",{}]],"51":[["    returns correct AST node for builtins with no arguments and a block",{"fg":2}],["                                                            ",{}]],"52":[["    returns correct AST node for builtins with arguments and a block",{"fg":2}],["                                                               ",{}]]}}],[0.012758,{"lines":{"0":[["Y2R::AST::YCP::Bracket                                                                                                             ",{}]],"1":[["  #compile                                                                                                                         ",{}]],"2":[["    returns correct AST node when args has single value",{"fg":2}],["                                                                            ",{}]],"3":[["    returns correct AST node when args has multiple elements",{"fg":2}],["                                                                       ",{}]],"4":[["                                                                                                                                   ",{}]],"5":[["Y2R::AST::YCP::Break                                                                                                               ",{}]],"6":[["  #compile                                                                                                                         ",{}]],"7":[["    for break statements inside a while statement                                                                                  ",{}]],"8":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"9":[["    for break statements inside a do statement                                                                                     ",{}]],"10":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"11":[["    for break statements inside a repeat statement                                                                                 ",{}]],"12":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"13":[["    for break statements inside a case clause                                                                                      ",{}]],"14":[["      raises an exception",{"fg":2}],["                                                                                                          ",{}]],"15":[["    for break statements inside a default clause                                                                                   ",{}]],"16":[["      raises an exception",{"fg":2}],["                                                                                                          ",{}]],"17":[["    for break statements inside a while statement which is inside a block expression                                               ",{}]],"18":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"19":[["    for break statements inside a do statement which is inside a block expression                                                  ",{}]],"20":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"21":[["    for break statements inside a repeat statement which is inside a block expression                                              ",{}]],"22":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"23":[["    for break statements inside a case clause which is inside a block expression                                                   ",{}]],"24":[["      raises an exception",{"fg":2}],["                                                                                                          ",{}]],"25":[["    for break statements inside a default clause which is inside a block expression                                                ",{}]],"26":[["      raises an exception",{"fg":2}],["                                                                                                          ",{}]],"27":[["    for break statements inside a block expression                                                                                 ",{}]],"28":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"29":[["    for break statements inside a block expression which is inside a while statement                                               ",{}]],"30":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"31":[["    for break statements inside a block expression which is inside a do statement                                                  ",{}]],"32":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"33":[["    for break statements inside a block expression which is inside a repeat statement                                              ",{}]],"34":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"35":[["    for break statements inside a block expression which is inside a case clause                                                   ",{}]],"36":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"37":[["    for break statements inside a block expression which is inside a default clause                                                ",{}]],"38":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"39":[["                                                                                                                                   ",{}]],"40":[["Y2R::AST::YCP::Builtin                                                                                                             ",{}]],"41":[["  #compile                                                                                                                         ",{}]],"42":[["    returns correct AST node for builtins with no arguments and no block",{"fg":2}],["                                                           ",{}]],"43":[["    returns correct AST node for builtins with arguments and no block",{"fg":2}],["                                                              ",{}]],"44":[["    returns correct AST node for builtins with no arguments and a block",{"fg":2}],["                                                            ",{}]],"45":[["    returns correct AST node for builtins with arguments and a block",{"fg":2}],["                                                               ",{}]],"46":[["    returns correct AST node for namespaced builtins",{"fg":2}],["                                                                               ",{}]],"47":[["                                                                                                                                   ",{}]],"48":[["Y2R::AST::YCP::Call                                                                                                                ",{}]],"49":[["  #compile                                                                                                                         ",{}]],"50":[["    for calls with category == \"function\"                                                                                          ",{}]],"51":[["      of toplevel functions                                                                                                        ",{}]],"52":[["        returns correct AST node for unqualified calls",{"fg":2}],["                                                                             ",{}]]}}],[0.01633,{"lines":{"0":[["                                                                                                                                   ",{}]],"1":[["Y2R::AST::YCP::Break                                                                                                               ",{}]],"2":[["  #compile                                                                                                                         ",{}]],"3":[["    for break statements inside a while statement                                                                                  ",{}]],"4":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"5":[["    for break statements inside a do statement                                                                                     ",{}]],"6":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"7":[["    for break statements inside a repeat statement                                                                                 ",{}]],"9":[["    for break statements inside a case clause                                                                                      ",{}]],"10":[["      raises an exception",{"fg":2}],["                                                                                                          ",{}]],"11":[["    for break statements inside a default clause                                                                                   ",{}]],"12":[["      raises an exception",{"fg":2}],["                                                                                                          ",{}]],"13":[["    for break statements inside a while statement which is inside a block expression                                               ",{}]],"14":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"15":[["    for break statements inside a do statement which is inside a block expression                                                  ",{}]],"16":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"17":[["    for break statements inside a repeat statement which is inside a block expression                                              ",{}]],"19":[["    for break statements inside a case clause which is inside a block expression                                                   ",{}]],"20":[["      raises an exception",{"fg":2}],["                                                                                                          ",{}]],"21":[["    for break statements inside a default clause which is inside a block expression                                                ",{}]],"22":[["      raises an exception",{"fg":2}],["                                                                                                          ",{}]],"23":[["    for break statements inside a block expression                                                                                 ",{}]],"24":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"25":[["    for break statements inside a block expression which is inside a while statement                                               ",{}]],"26":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"27":[["    for break statements inside a block expression which is inside a do statement                                                  ",{}]],"29":[["    for break statements inside a block expression which is inside a repeat statement                                              ",{}]],"31":[["    for break statements inside a block expression which is inside a case clause                                                   ",{}]],"33":[["    for break statements inside a block expression which is inside a default clause                                                ",{}]],"35":[["                                                                                                                                   ",{}]],"36":[["Y2R::AST::YCP::Builtin                                                                                                             ",{}]],"37":[["  #compile                                                                                                                         ",{}]],"38":[["    returns correct AST node for builtins with no arguments and no block",{"fg":2}],["                                                           ",{}]],"39":[["    returns correct AST node for builtins with arguments and no block",{"fg":2}],["                                                              ",{}]],"40":[["    returns correct AST node for builtins with no arguments and a block",{"fg":2}],["                                                            ",{}]],"41":[["    returns correct AST node for builtins with arguments and a block",{"fg":2}],["                                                               ",{}]],"42":[["    returns correct AST node for namespaced builtins",{"fg":2}],["                                                                               ",{}]],"43":[["                                                                                                                                   ",{}]],"44":[["Y2R::AST::YCP::Call                                                                                                                ",{}]],"45":[["  #compile                                                                                                                         ",{}]],"46":[["    for calls with category == \"function\"                                                                                          ",{}]],"47":[["      of toplevel functions                                                                                                        ",{}]],"48":[["        returns correct AST node for unqualified calls",{"fg":2}],["                                                                             ",{}]],"49":[["        returns correct AST node for qualified calls",{"fg":2}],["                                                                               ",{}]],"50":[["        returns correct AST node for calls without arguments",{"fg":2}],["                                                                       ",{}]],"51":[["        returns correct AST node for calls with arguments",{"fg":2}],["                                                                          ",{}]],"52":[["      of nested functions                                                                                                          ",{}]]}}],[0.02249,{"lines":{"0":[["Y2R::AST::YCP::Break                                                                                                               ",{}]],"1":[["  #compile                                                                                                                         ",{}]],"2":[["    for break statements inside a while statement                                                                                  ",{}]],"3":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"4":[["    for break statements inside a do statement                                                                                     ",{}]],"5":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"6":[["    for break statements inside a repeat statement                                                                                 ",{}]],"7":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"8":[["    for break statements inside a case clause                                                                                      ",{}]],"9":[["      raises an exception",{"fg":2}],["                                                                                                          ",{}]],"10":[["    for break statements inside a default clause                                                                                   ",{}]],"11":[["      raises an exception",{"fg":2}],["                                                                                                          ",{}]],"12":[["    for break statements inside a while statement which is inside a block expression                                               ",{}]],"13":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"14":[["    for break statements inside a do statement which is inside a block expression                                                  ",{}]],"15":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"16":[["    for break statements inside a repeat statement which is inside a block expression                                              ",{}]],"17":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"18":[["    for break statements inside a case clause which is inside a block expression                                                   ",{}]],"19":[["      raises an exception",{"fg":2}],["                                                                                                          ",{}]],"20":[["    for break statements inside a default clause which is inside a block expression                                                ",{}]],"21":[["      raises an exception",{"fg":2}],["                                                                                                          ",{}]],"22":[["    for break statements inside a block expression                                                                                 ",{}]],"23":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"24":[["    for break statements inside a block expression which is inside a while statement                                               ",{}]],"25":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"26":[["    for break statements inside a block expression which is inside a do statement                                                  ",{}]],"27":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"28":[["    for break statements inside a block expression which is inside a repeat statement                                              ",{}]],"29":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"30":[["    for break statements inside a block expression which is inside a case clause                                                   ",{}]],"31":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"32":[["    for break statements inside a block expression which is inside a default clause                                                ",{}]],"33":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"34":[["                                                                                                                                   ",{}]],"35":[["Y2R::AST::YCP::Builtin                                                                                                             ",{}]],"36":[["  #compile                                                                                                                         ",{}]],"37":[["    returns correct AST node for builtins with no arguments and no block",{"fg":2}],["                                                           ",{}]],"38":[["    returns correct AST node for builtins with arguments and no block",{"fg":2}],["                                                              ",{}]],"39":[["    returns correct AST node for builtins with no arguments and a block",{"fg":2}],["                                                            ",{}]],"40":[["    returns correct AST node for builtins with arguments and a block",{"fg":2}],["                                                               ",{}]],"41":[["    returns correct AST node for namespaced builtins",{"fg":2}],["                                                                               ",{}]],"42":[["                                                                                                                                   ",{}]],"43":[["Y2R::AST::YCP::Call                                                                                                                ",{}]],"44":[["  #compile                                                                                                                         ",{}]],"45":[["    for calls with category == \"function\"                                                                                          ",{}]],"46":[["      of toplevel functions                                                                                                        ",{}]],"47":[["        returns correct AST node for unqualified calls",{"fg":2}],["                                                                             ",{}]],"48":[["        returns correct AST node for qualified calls",{"fg":2}],["                                                                               ",{}]],"49":[["        returns correct AST node for calls without arguments",{"fg":2}],["                                                                       ",{}]],"50":[["        returns correct AST node for calls with arguments",{"fg":2}],["                                                                          ",{}]],"51":[["      of nested functions                                                                                                          ",{}]],"52":[["        returns correct AST node for calls without arguments",{"fg":2}],["                                                                       ",{}]]}}],[0.007176999999999999,{"lines":{"0":[["    for break statements inside a while statement                                                                                  ",{}]],"1":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"2":[["    for break statements inside a do statement                                                                                     ",{}]],"4":[["    for break statements inside a repeat statement                                                                                 ",{}]],"6":[["    for break statements inside a case clause                                                                                      ",{}]],"7":[["      raises an exception",{"fg":2}],["                                                                                                          ",{}]],"8":[["    for break statements inside a default clause                                                                                   ",{}]],"10":[["    for break statements inside a while statement which is inside a block expression                                               ",{}]],"11":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"12":[["    for break statements inside a do statement which is inside a block expression                                                  ",{}]],"14":[["    for break statements inside a repeat statement which is inside a block expression                                              ",{}]],"16":[["    for break statements inside a case clause which is inside a block expression                                                   ",{}]],"17":[["      raises an exception",{"fg":2}],["                                                                                                          ",{}]],"18":[["    for break statements inside a default clause which is inside a block expression                                                ",{}]],"20":[["    for break statements inside a block expression                                                                                 ",{}]],"21":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"22":[["    for break statements inside a block expression which is inside a while statement                                               ",{}]],"24":[["    for break statements inside a block expression which is inside a do statement                                                  ",{}]],"26":[["    for break statements inside a block expression which is inside a repeat statement                                              ",{}]],"28":[["    for break statements inside a block expression which is inside a case clause                                                   ",{}]],"30":[["    for break statements inside a block expression which is inside a default clause                                                ",{}]],"32":[["                                                                                                                                   ",{}]],"33":[["Y2R::AST::YCP::Builtin                                                                                                             ",{}]],"34":[["  #compile                                                                                                                         ",{}]],"35":[["    returns correct AST node for builtins with no arguments and no block",{"fg":2}],["                                                           ",{}]],"36":[["    returns correct AST node for builtins with arguments and no block",{"fg":2}],["                                                              ",{}]],"37":[["    returns correct AST node for builtins with no arguments and a block",{"fg":2}],["                                                            ",{}]],"38":[["    returns correct AST node for builtins with arguments and a block",{"fg":2}],["                                                               ",{}]],"39":[["    returns correct AST node for namespaced builtins",{"fg":2}],["                                                                               ",{}]],"40":[["                                                                                                                                   ",{}]],"41":[["Y2R::AST::YCP::Call                                                                                                                ",{}]],"42":[["  #compile                                                                                                                         ",{}]],"43":[["    for calls with category == \"function\"                                                                                          ",{}]],"44":[["      of toplevel functions                                                                                                        ",{}]],"45":[["        returns correct AST node for unqualified calls",{"fg":2}],["                                                                             ",{}]],"46":[["        returns correct AST node for qualified calls",{"fg":2}],["                                                                               ",{}]],"47":[["        returns correct AST node for calls without arguments",{"fg":2}],["                                                                       ",{}]],"48":[["        returns correct AST node for calls with arguments",{"fg":2}],["                                                                          ",{}]],"49":[["      of nested functions                                                                                                          ",{}]],"50":[["        returns correct AST node for calls without arguments",{"fg":2}],["                                                                       ",{}]],"51":[["        returns correct AST node for calls with arguments",{"fg":2}],["                                                                          ",{}]],"52":[["        in local context that refer to local functions                                                                             ",{}]]}}],[0.058201,{"lines":{"0":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"1":[["    for break statements inside a do statement                                                                                     ",{}]],"2":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"3":[["    for break statements inside a repeat statement                                                                                 ",{}]],"4":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"5":[["    for break statements inside a case clause                                                                                      ",{}]],"6":[["      raises an exception",{"fg":2}],["                                                                                                          ",{}]],"7":[["    for break statements inside a default clause                                                                                   ",{}]],"8":[["      raises an exception",{"fg":2}],["                                                                                                          ",{}]],"9":[["    for break statements inside a while statement which is inside a block expression                                               ",{}]],"10":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"11":[["    for break statements inside a do statement which is inside a block expression                                                  ",{}]],"12":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"13":[["    for break statements inside a repeat statement which is inside a block expression                                              ",{}]],"14":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"15":[["    for break statements inside a case clause which is inside a block expression                                                   ",{}]],"16":[["      raises an exception",{"fg":2}],["                                                                                                          ",{}]],"17":[["    for break statements inside a default clause which is inside a block expression                                                ",{}]],"18":[["      raises an exception",{"fg":2}],["                                                                                                          ",{}]],"19":[["    for break statements inside a block expression                                                                                 ",{}]],"20":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"21":[["    for break statements inside a block expression which is inside a while statement                                               ",{}]],"22":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"23":[["    for break statements inside a block expression which is inside a do statement                                                  ",{}]],"24":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"25":[["    for break statements inside a block expression which is inside a repeat statement                                              ",{}]],"26":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"27":[["    for break statements inside a block expression which is inside a case clause                                                   ",{}]],"28":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"29":[["    for break statements inside a block expression which is inside a default clause                                                ",{}]],"30":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"31":[["                                                                                                                                   ",{}]],"32":[["Y2R::AST::YCP::Builtin                                                                                                             ",{}]],"33":[["  #compile                                                                                                                         ",{}]],"34":[["    returns correct AST node for builtins with no arguments and no block",{"fg":2}],["                                                           ",{}]],"35":[["    returns correct AST node for builtins with arguments and no block",{"fg":2}],["                                                              ",{}]],"36":[["    returns correct AST node for builtins with no arguments and a block",{"fg":2}],["                                                            ",{}]],"37":[["    returns correct AST node for builtins with arguments and a block",{"fg":2}],["                                                               ",{}]],"38":[["    returns correct AST node for namespaced builtins",{"fg":2}],["                                                                               ",{}]],"39":[["                                                                                                                                   ",{}]],"40":[["Y2R::AST::YCP::Call                                                                                                                ",{}]],"41":[["  #compile                                                                                                                         ",{}]],"42":[["    for calls with category == \"function\"                                                                                          ",{}]],"43":[["      of toplevel functions                                                                                                        ",{}]],"44":[["        returns correct AST node for unqualified calls",{"fg":2}],["                                                                             ",{}]],"45":[["        returns correct AST node for qualified calls",{"fg":2}],["                                                                               ",{}]],"46":[["        returns correct AST node for calls without arguments",{"fg":2}],["                                                                       ",{}]],"47":[["        returns correct AST node for calls with arguments",{"fg":2}],["                                                                          ",{}]],"48":[["      of nested functions                                                                                                          ",{}]],"49":[["        returns correct AST node for calls without arguments",{"fg":2}],["                                                                       ",{}]],"50":[["        returns correct AST node for calls with arguments",{"fg":2}],["                                                                          ",{}]],"51":[["        in local context that refer to local functions                                                                             ",{}]],"52":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]]}}],[0.009531,{"lines":{"0":[["    for break statements inside a repeat statement                                                                                 ",{}]],"1":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"2":[["    for break statements inside a case clause                                                                                      ",{}]],"3":[["      raises an exception",{"fg":2}],["                                                                                                          ",{}]],"4":[["    for break statements inside a default clause                                                                                   ",{}]],"5":[["      raises an exception",{"fg":2}],["                                                                                                          ",{}]],"6":[["    for break statements inside a while statement which is inside a block expression                                               ",{}]],"7":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"8":[["    for break statements inside a do statement which is inside a block expression                                                  ",{}]],"9":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"10":[["    for break statements inside a repeat statement which is inside a block expression                                              ",{}]],"11":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"12":[["    for break statements inside a case clause which is inside a block expression                                                   ",{}]],"13":[["      raises an exception",{"fg":2}],["                                                                                                          ",{}]],"14":[["    for break statements inside a default clause which is inside a block expression                                                ",{}]],"15":[["      raises an exception",{"fg":2}],["                                                                                                          ",{}]],"16":[["    for break statements inside a block expression                                                                                 ",{}]],"17":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"18":[["    for break statements inside a block expression which is inside a while statement                                               ",{}]],"19":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"20":[["    for break statements inside a block expression which is inside a do statement                                                  ",{}]],"21":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"22":[["    for break statements inside a block expression which is inside a repeat statement                                              ",{}]],"23":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"24":[["    for break statements inside a block expression which is inside a case clause                                                   ",{}]],"25":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"26":[["    for break statements inside a block expression which is inside a default clause                                                ",{}]],"27":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"28":[["                                                                                                                                   ",{}]],"29":[["Y2R::AST::YCP::Builtin                                                                                                             ",{}]],"30":[["  #compile                                                                                                                         ",{}]],"31":[["    returns correct AST node for builtins with no arguments and no block",{"fg":2}],["                                                           ",{}]],"32":[["    returns correct AST node for builtins with arguments and no block",{"fg":2}],["                                                              ",{}]],"33":[["    returns correct AST node for builtins with no arguments and a block",{"fg":2}],["                                                            ",{}]],"34":[["    returns correct AST node for builtins with arguments and a block",{"fg":2}],["                                                               ",{}]],"35":[["    returns correct AST node for namespaced builtins",{"fg":2}],["                                                                               ",{}]],"36":[["                                                                                                                                   ",{}]],"37":[["Y2R::AST::YCP::Call                                                                                                                ",{}]],"38":[["  #compile                                                                                                                         ",{}]],"39":[["    for calls with category == \"function\"                                                                                          ",{}]],"40":[["      of toplevel functions                                                                                                        ",{}]],"41":[["        returns correct AST node for unqualified calls",{"fg":2}],["                                                                             ",{}]],"42":[["        returns correct AST node for qualified calls",{"fg":2}],["                                                                               ",{}]],"43":[["        returns correct AST node for calls without arguments",{"fg":2}],["                                                                       ",{}]],"44":[["        returns correct AST node for calls with arguments",{"fg":2}],["                                                                          ",{}]],"45":[["      of nested functions                                                                                                          ",{}]],"48":[["        in local context that refer to local functions                                                                             ",{}]],"49":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"50":[["        in nested local context that refer to inner functions                                                                      ",{}]],"51":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"52":[["      with reference arguments                                                                                                     ",{}]]}}],[0.011156,{"lines":{"0":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"1":[["    for break statements inside a case clause                                                                                      ",{}]],"2":[["      raises an exception",{"fg":2}],["                                                                                                          ",{}]],"3":[["    for break statements inside a default clause                                                                                   ",{}]],"4":[["      raises an exception",{"fg":2}],["                                                                                                          ",{}]],"5":[["    for break statements inside a while statement which is inside a block expression                                               ",{}]],"6":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"7":[["    for break statements inside a do statement which is inside a block expression                                                  ",{}]],"8":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"9":[["    for break statements inside a repeat statement which is inside a block expression                                              ",{}]],"10":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"11":[["    for break statements inside a case clause which is inside a block expression                                                   ",{}]],"12":[["      raises an exception",{"fg":2}],["                                                                                                          ",{}]],"13":[["    for break statements inside a default clause which is inside a block expression                                                ",{}]],"14":[["      raises an exception",{"fg":2}],["                                                                                                          ",{}]],"15":[["    for break statements inside a block expression                                                                                 ",{}]],"16":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"17":[["    for break statements inside a block expression which is inside a while statement                                               ",{}]],"18":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"19":[["    for break statements inside a block expression which is inside a do statement                                                  ",{}]],"20":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"21":[["    for break statements inside a block expression which is inside a repeat statement                                              ",{}]],"22":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"23":[["    for break statements inside a block expression which is inside a case clause                                                   ",{}]],"24":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"25":[["    for break statements inside a block expression which is inside a default clause                                                ",{}]],"26":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"27":[["                                                                                                                                   ",{}]],"28":[["Y2R::AST::YCP::Builtin                                                                                                             ",{}]],"29":[["  #compile                                                                                                                         ",{}]],"30":[["    returns correct AST node for builtins with no arguments and no block",{"fg":2}],["                                                           ",{}]],"31":[["    returns correct AST node for builtins with arguments and no block",{"fg":2}],["                                                              ",{}]],"32":[["    returns correct AST node for builtins with no arguments and a block",{"fg":2}],["                                                            ",{}]],"33":[["    returns correct AST node for builtins with arguments and a block",{"fg":2}],["                                                               ",{}]],"34":[["    returns correct AST node for namespaced builtins",{"fg":2}],["                                                                               ",{}]],"35":[["                                                                                                                                   ",{}]],"36":[["Y2R::AST::YCP::Call                                                                                                                ",{}]],"37":[["  #compile                                                                                                                         ",{}]],"38":[["    for calls with category == \"function\"                                                                                          ",{}]],"39":[["      of toplevel functions                                                                                                        ",{}]],"40":[["        returns correct AST node for unqualified calls",{"fg":2}],["                                                                             ",{}]],"41":[["        returns correct AST node for qualified calls",{"fg":2}],["                                                                               ",{}]],"42":[["        returns correct AST node for calls without arguments",{"fg":2}],["                                                                       ",{}]],"43":[["        returns correct AST node for calls with arguments",{"fg":2}],["                                                                          ",{}]],"44":[["      of nested functions                                                                                                          ",{}]],"45":[["        returns correct AST node for calls without arguments",{"fg":2}],["                                                                       ",{}]],"46":[["        returns correct AST node for calls with arguments",{"fg":2}],["                                                                          ",{}]],"47":[["        in local context that refer to local functions                                                                             ",{}]],"48":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"49":[["        in nested local context that refer to inner functions                                                                      ",{}]],"50":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"51":[["      with reference arguments                                                                                                     ",{}]],"52":[["        returns correct AST node for calls where the result is used",{"fg":2}],["                                                                ",{}]]}}],[0.016521,{"lines":{"0":[["    for break statements inside a default clause                                                                                   ",{}]],"1":[["      raises an exception",{"fg":2}],["                                                                                                          ",{}]],"2":[["    for break statements inside a while statement which is inside a block expression                                               ",{}]],"3":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"4":[["    for break statements inside a do statement which is inside a block expression                                                  ",{}]],"5":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"6":[["    for break statements inside a repeat statement which is inside a block expression                                              ",{}]],"7":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"8":[["    for break statements inside a case clause which is inside a block expression                                                   ",{}]],"9":[["      raises an exception",{"fg":2}],["                                                                                                          ",{}]],"10":[["    for break statements inside a default clause which is inside a block expression                                                ",{}]],"11":[["      raises an exception",{"fg":2}],["                                                                                                          ",{}]],"12":[["    for break statements inside a block expression                                                                                 ",{}]],"13":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"14":[["    for break statements inside a block expression which is inside a while statement                                               ",{}]],"15":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"16":[["    for break statements inside a block expression which is inside a do statement                                                  ",{}]],"17":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"18":[["    for break statements inside a block expression which is inside a repeat statement                                              ",{}]],"19":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"20":[["    for break statements inside a block expression which is inside a case clause                                                   ",{}]],"21":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"22":[["    for break statements inside a block expression which is inside a default clause                                                ",{}]],"23":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"24":[["                                                                                                                                   ",{}]],"25":[["Y2R::AST::YCP::Builtin                                                                                                             ",{}]],"26":[["  #compile                                                                                                                         ",{}]],"27":[["    returns correct AST node for builtins with no arguments and no block",{"fg":2}],["                                                           ",{}]],"28":[["    returns correct AST node for builtins with arguments and no block",{"fg":2}],["                                                              ",{}]],"29":[["    returns correct AST node for builtins with no arguments and a block",{"fg":2}],["                                                            ",{}]],"30":[["    returns correct AST node for builtins with arguments and a block",{"fg":2}],["                                                               ",{}]],"31":[["    returns correct AST node for namespaced builtins",{"fg":2}],["                                                                               ",{}]],"32":[["                                                                                                                                   ",{}]],"33":[["Y2R::AST::YCP::Call                                                                                                                ",{}]],"34":[["  #compile                                                                                                                         ",{}]],"35":[["    for calls with category == \"function\"                                                                                          ",{}]],"36":[["      of toplevel functions                                                                                                        ",{}]],"37":[["        returns correct AST node for unqualified calls",{"fg":2}],["                                                                             ",{}]],"38":[["        returns correct AST node for qualified calls",{"fg":2}],["                                                                               ",{}]],"39":[["        returns correct AST node for calls without arguments",{"fg":2}],["                                                                       ",{}]],"40":[["        returns correct AST node for calls with arguments",{"fg":2}],["                                                                          ",{}]],"41":[["      of nested functions                                                                                                          ",{}]],"44":[["        in local context that refer to local functions                                                                             ",{}]],"45":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"46":[["        in nested local context that refer to inner functions                                                                      ",{}]],"47":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"48":[["      with reference arguments                                                                                                     ",{}]],"49":[["        returns correct AST node for calls where the result is used",{"fg":2}],["                                                                ",{}]],"50":[["        returns correct AST node for calls where the result is unused",{"fg":2}],["                                                              ",{}]],"51":[["    for calls with category == \"variable\"                                                                                          ",{}]],"52":[["      returns correct AST node for calls without arguments",{"fg":2}],["                                                                         ",{}]]}}],[0.01155,{"lines":{"0":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"1":[["    for break statements inside a repeat statement which is inside a block expression                                              ",{}]],"2":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"3":[["    for break statements inside a case clause which is inside a block expression                                                   ",{}]],"4":[["      raises an exception",{"fg":2}],["                                                                                                          ",{}]],"5":[["    for break statements inside a default clause which is inside a block expression                                                ",{}]],"6":[["      raises an exception",{"fg":2}],["                                                                                                          ",{}]],"7":[["    for break statements inside a block expression                                                                                 ",{}]],"8":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"9":[["    for break statements inside a block expression which is inside a while statement                                               ",{}]],"10":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"11":[["    for break statements inside a block expression which is inside a do statement                                                  ",{}]],"12":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"13":[["    for break statements inside a block expression which is inside a repeat statement                                              ",{}]],"14":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"15":[["    for break statements inside a block expression which is inside a case clause                                                   ",{}]],"16":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"17":[["    for break statements inside a block expression which is inside a default clause                                                ",{}]],"18":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"19":[["                                                                                                                                   ",{}]],"20":[["Y2R::AST::YCP::Builtin                                                                                                             ",{}]],"21":[["  #compile                                                                                                                         ",{}]],"22":[["    returns correct AST node for builtins with no arguments and no block",{"fg":2}],["                                                           ",{}]],"23":[["    returns correct AST node for builtins with arguments and no block",{"fg":2}],["                                                              ",{}]],"24":[["    returns correct AST node for builtins with no arguments and a block",{"fg":2}],["                                                            ",{}]],"25":[["    returns correct AST node for builtins with arguments and a block",{"fg":2}],["                                                               ",{}]],"26":[["    returns correct AST node for namespaced builtins",{"fg":2}],["                                                                               ",{}]],"27":[["                                                                                                                                   ",{}]],"28":[["Y2R::AST::YCP::Call                                                                                                                ",{}]],"29":[["  #compile                                                                                                                         ",{}]],"30":[["    for calls with category == \"function\"                                                                                          ",{}]],"31":[["      of toplevel functions                                                                                                        ",{}]],"32":[["        returns correct AST node for unqualified calls",{"fg":2}],["                                                                             ",{}]],"33":[["        returns correct AST node for qualified calls",{"fg":2}],["                                                                               ",{}]],"34":[["        returns correct AST node for calls without arguments",{"fg":2}],["                                                                       ",{}]],"35":[["        returns correct AST node for calls with arguments",{"fg":2}],["                                                                          ",{}]],"36":[["      of nested functions                                                                                                          ",{}]],"37":[["        returns correct AST node for calls without arguments",{"fg":2}],["                                                                       ",{}]],"38":[["        returns correct AST node for calls with arguments",{"fg":2}],["                                                                          ",{}]],"39":[["        in local context that refer to local functions                                                                             ",{}]],"40":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"41":[["        in nested local context that refer to inner functions                                                                      ",{}]],"42":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"43":[["      with reference arguments                                                                                                     ",{}]],"44":[["        returns correct AST node for calls where the result is used",{"fg":2}],["                                                                ",{}]],"45":[["        returns correct AST node for calls where the result is unused",{"fg":2}],["                                                              ",{}]],"46":[["    for calls with category == \"variable\"                                                                                          ",{}]],"47":[["      returns correct AST node for calls without arguments",{"fg":2}],["                                                                         ",{}]],"48":[["      returns correct AST node for calls with arguments",{"fg":2}],["                                                                            ",{}]],"49":[["      that are qualified                                                                                                           ",{}]],"50":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"51":[["      that are unqualified                                                                                                         ",{}]],"52":[["        in global context that refer to global variables                                                                           ",{}]]}}],[0.014088,{"lines":{"0":[["      raises an exception",{"fg":2}],["                                                                                                          ",{}]],"1":[["    for break statements inside a default clause which is inside a block expression                                                ",{}]],"2":[["      raises an exception",{"fg":2}],["                                                                                                          ",{}]],"3":[["    for break statements inside a block expression                                                                                 ",{}]],"4":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"5":[["    for break statements inside a block expression which is inside a while statement                                               ",{}]],"6":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"7":[["    for break statements inside a block expression which is inside a do statement                                                  ",{}]],"9":[["    for break statements inside a block expression which is inside a repeat statement                                              ",{}]],"11":[["    for break statements inside a block expression which is inside a case clause                                                   ",{}]],"13":[["    for break statements inside a block expression which is inside a default clause                                                ",{}]],"15":[["                                                                                                                                   ",{}]],"16":[["Y2R::AST::YCP::Builtin                                                                                                             ",{}]],"17":[["  #compile                                                                                                                         ",{}]],"18":[["    returns correct AST node for builtins with no arguments and no block",{"fg":2}],["                                                           ",{}]],"19":[["    returns correct AST node for builtins with arguments and no block",{"fg":2}],["                                                              ",{}]],"20":[["    returns correct AST node for builtins with no arguments and a block",{"fg":2}],["                                                            ",{}]],"21":[["    returns correct AST node for builtins with arguments and a block",{"fg":2}],["                                                               ",{}]],"22":[["    returns correct AST node for namespaced builtins",{"fg":2}],["                                                                               ",{}]],"23":[["                                                                                                                                   ",{}]],"24":[["Y2R::AST::YCP::Call                                                                                                                ",{}]],"25":[["  #compile                                                                                                                         ",{}]],"26":[["    for calls with category == \"function\"                                                                                          ",{}]],"27":[["      of toplevel functions                                                                                                        ",{}]],"28":[["        returns correct AST node for unqualified calls",{"fg":2}],["                                                                             ",{}]],"29":[["        returns correct AST node for qualified calls",{"fg":2}],["                                                                               ",{}]],"30":[["        returns correct AST node for calls without arguments",{"fg":2}],["                                                                       ",{}]],"31":[["        returns correct AST node for calls with arguments",{"fg":2}],["                                                                          ",{}]],"32":[["      of nested functions                                                                                                          ",{}]],"33":[["        returns correct AST node for calls without arguments",{"fg":2}],["                                                                       ",{}]],"34":[["        returns correct AST node for calls with arguments",{"fg":2}],["                                                                          ",{}]],"35":[["        in local context that refer to local functions                                                                             ",{}]],"36":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"37":[["        in nested local context that refer to inner functions                                                                      ",{}]],"38":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"39":[["      with reference arguments                                                                                                     ",{}]],"40":[["        returns correct AST node for calls where the result is used",{"fg":2}],["                                                                ",{}]],"41":[["        returns correct AST node for calls where the result is unused",{"fg":2}],["                                                              ",{}]],"42":[["    for calls with category == \"variable\"                                                                                          ",{}]],"43":[["      returns correct AST node for calls without arguments",{"fg":2}],["                                                                         ",{}]],"44":[["      returns correct AST node for calls with arguments",{"fg":2}],["                                                                            ",{}]],"45":[["      that are qualified                                                                                                           ",{}]],"46":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"47":[["      that are unqualified                                                                                                         ",{}]],"48":[["        in global context that refer to global variables                                                                           ",{}]],"49":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"50":[["        in local context that refer to global variables                                                                            ",{}]],"51":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"52":[["        in local context that refer to local variables                                                                             ",{}]]}}],[0.008664999999999999,{"lines":{"1":[["    for break statements inside a block expression                                                                                 ",{}]],"2":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"3":[["    for break statements inside a block expression which is inside a while statement                                               ",{}]],"5":[["    for break statements inside a block expression which is inside a do statement                                                  ",{}]],"7":[["    for break statements inside a block expression which is inside a repeat statement                                              ",{}]],"9":[["    for break statements inside a block expression which is inside a case clause                                                   ",{}]],"11":[["    for break statements inside a block expression which is inside a default clause                                                ",{}]],"13":[["                                                                                                                                   ",{}]],"14":[["Y2R::AST::YCP::Builtin                                                                                                             ",{}]],"15":[["  #compile                                                                                                                         ",{}]],"16":[["    returns correct AST node for builtins with no arguments and no block",{"fg":2}],["                                                           ",{}]],"17":[["    returns correct AST node for builtins with arguments and no block",{"fg":2}],["                                                              ",{}]],"18":[["    returns correct AST node for builtins with no arguments and a block",{"fg":2}],["                                                            ",{}]],"19":[["    returns correct AST node for builtins with arguments and a block",{"fg":2}],["                                                               ",{}]],"20":[["    returns correct AST node for namespaced builtins",{"fg":2}],["                                                                               ",{}]],"21":[["                                                                                                                                   ",{}]],"22":[["Y2R::AST::YCP::Call                                                                                                                ",{}]],"23":[["  #compile                                                                                                                         ",{}]],"24":[["    for calls with category == \"function\"                                                                                          ",{}]],"25":[["      of toplevel functions                                                                                                        ",{}]],"26":[["        returns correct AST node for unqualified calls",{"fg":2}],["                                                                             ",{}]],"27":[["        returns correct AST node for qualified calls",{"fg":2}],["                                                                               ",{}]],"28":[["        returns correct AST node for calls without arguments",{"fg":2}],["                                                                       ",{}]],"29":[["        returns correct AST node for calls with arguments",{"fg":2}],["                                                                          ",{}]],"30":[["      of nested functions                                                                                                          ",{}]],"31":[["        returns correct AST node for calls without arguments",{"fg":2}],["                                                                       ",{}]],"32":[["        returns correct AST node for calls with arguments",{"fg":2}],["                                                                          ",{}]],"33":[["        in local context that refer to local functions                                                                             ",{}]],"34":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"35":[["        in nested local context that refer to inner functions                                                                      ",{}]],"37":[["      with reference arguments                                                                                                     ",{}]],"38":[["        returns correct AST node for calls where the result is used",{"fg":2}],["                                                                ",{}]],"39":[["        returns correct AST node for calls where the result is unused",{"fg":2}],["                                                              ",{}]],"40":[["    for calls with category == \"variable\"                                                                                          ",{}]],"41":[["      returns correct AST node for calls without arguments",{"fg":2}],["                                                                         ",{}]],"42":[["      returns correct AST node for calls with arguments",{"fg":2}],["                                                                            ",{}]],"43":[["      that are qualified                                                                                                           ",{}]],"44":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"45":[["      that are unqualified                                                                                                         ",{}]],"46":[["        in global context that refer to global variables                                                                           ",{}]],"47":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"48":[["        in local context that refer to global variables                                                                            ",{}]],"50":[["        in local context that refer to local variables                                                                             ",{}]],"52":[["        in nested local context that refer to inner variables                                                                      ",{}]]}}],[0.014716,{"lines":{"0":[["    for break statements inside a block expression which is inside a do statement                                                  ",{}]],"1":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"2":[["    for break statements inside a block expression which is inside a repeat statement                                              ",{}]],"3":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"4":[["    for break statements inside a block expression which is inside a case clause                                                   ",{}]],"5":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"6":[["    for break statements inside a block expression which is inside a default clause                                                ",{}]],"7":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"8":[["                                                                                                                                   ",{}]],"9":[["Y2R::AST::YCP::Builtin                                                                                                             ",{}]],"10":[["  #compile                                                                                                                         ",{}]],"11":[["    returns correct AST node for builtins with no arguments and no block",{"fg":2}],["                                                           ",{}]],"12":[["    returns correct AST node for builtins with arguments and no block",{"fg":2}],["                                                              ",{}]],"13":[["    returns correct AST node for builtins with no arguments and a block",{"fg":2}],["                                                            ",{}]],"14":[["    returns correct AST node for builtins with arguments and a block",{"fg":2}],["                                                               ",{}]],"15":[["    returns correct AST node for namespaced builtins",{"fg":2}],["                                                                               ",{}]],"16":[["                                                                                                                                   ",{}]],"17":[["Y2R::AST::YCP::Call                                                                                                                ",{}]],"18":[["  #compile                                                                                                                         ",{}]],"19":[["    for calls with category == \"function\"                                                                                          ",{}]],"20":[["      of toplevel functions                                                                                                        ",{}]],"21":[["        returns correct AST node for unqualified calls",{"fg":2}],["                                                                             ",{}]],"22":[["        returns correct AST node for qualified calls",{"fg":2}],["                                                                               ",{}]],"23":[["        returns correct AST node for calls without arguments",{"fg":2}],["                                                                       ",{}]],"24":[["        returns correct AST node for calls with arguments",{"fg":2}],["                                                                          ",{}]],"25":[["      of nested functions                                                                                                          ",{}]],"26":[["        returns correct AST node for calls without arguments",{"fg":2}],["                                                                       ",{}]],"27":[["        returns correct AST node for calls with arguments",{"fg":2}],["                                                                          ",{}]],"28":[["        in local context that refer to local functions                                                                             ",{}]],"29":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"30":[["        in nested local context that refer to inner functions                                                                      ",{}]],"31":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"32":[["      with reference arguments                                                                                                     ",{}]],"33":[["        returns correct AST node for calls where the result is used",{"fg":2}],["                                                                ",{}]],"34":[["        returns correct AST node for calls where the result is unused",{"fg":2}],["                                                              ",{}]],"35":[["    for calls with category == \"variable\"                                                                                          ",{}]],"36":[["      returns correct AST node for calls without arguments",{"fg":2}],["                                                                         ",{}]],"37":[["      returns correct AST node for calls with arguments",{"fg":2}],["                                                                            ",{}]],"38":[["      that are qualified                                                                                                           ",{}]],"39":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"40":[["      that are unqualified                                                                                                         ",{}]],"41":[["        in global context that refer to global variables                                                                           ",{}]],"42":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"43":[["        in local context that refer to global variables                                                                            ",{}]],"44":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"45":[["        in local context that refer to local variables                                                                             ",{}]],"46":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"47":[["        in nested local context that refer to inner variables                                                                      ",{}]],"48":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"49":[["                                                                                                                                   ",{}]],"50":[["Y2R::AST::YCP::Case                                                                                                                ",{}]],"51":[["  #compile                                                                                                                         ",{}]],"52":[["    returns correct AST node for cases with one value",{"fg":2}],["                                                                              ",{}]]}}],[0.012005,{"lines":{"0":[["    for break statements inside a block expression which is inside a repeat statement                                              ",{}]],"2":[["    for break statements inside a block expression which is inside a case clause                                                   ",{}]],"4":[["    for break statements inside a block expression which is inside a default clause                                                ",{}]],"6":[["                                                                                                                                   ",{}]],"7":[["Y2R::AST::YCP::Builtin                                                                                                             ",{}]],"8":[["  #compile                                                                                                                         ",{}]],"9":[["    returns correct AST node for builtins with no arguments and no block",{"fg":2}],["                                                           ",{}]],"10":[["    returns correct AST node for builtins with arguments and no block",{"fg":2}],["                                                              ",{}]],"11":[["    returns correct AST node for builtins with no arguments and a block",{"fg":2}],["                                                            ",{}]],"12":[["    returns correct AST node for builtins with arguments and a block",{"fg":2}],["                                                               ",{}]],"13":[["    returns correct AST node for namespaced builtins",{"fg":2}],["                                                                               ",{}]],"14":[["                                                                                                                                   ",{}]],"15":[["Y2R::AST::YCP::Call                                                                                                                ",{}]],"16":[["  #compile                                                                                                                         ",{}]],"17":[["    for calls with category == \"function\"                                                                                          ",{}]],"18":[["      of toplevel functions                                                                                                        ",{}]],"19":[["        returns correct AST node for unqualified calls",{"fg":2}],["                                                                             ",{}]],"20":[["        returns correct AST node for qualified calls",{"fg":2}],["                                                                               ",{}]],"21":[["        returns correct AST node for calls without arguments",{"fg":2}],["                                                                       ",{}]],"22":[["        returns correct AST node for calls with arguments",{"fg":2}],["                                                                          ",{}]],"23":[["      of nested functions                                                                                                          ",{}]],"24":[["        returns correct AST node for calls without arguments",{"fg":2}],["                                                                       ",{}]],"25":[["        returns correct AST node for calls with arguments",{"fg":2}],["                                                                          ",{}]],"26":[["        in local context that refer to local functions                                                                             ",{}]],"27":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"28":[["        in nested local context that refer to inner functions                                                                      ",{}]],"30":[["      with reference arguments                                                                                                     ",{}]],"31":[["        returns correct AST node for calls where the result is used",{"fg":2}],["                                                                ",{}]],"32":[["        returns correct AST node for calls where the result is unused",{"fg":2}],["                                                              ",{}]],"33":[["    for calls with category == \"variable\"                                                                                          ",{}]],"34":[["      returns correct AST node for calls without arguments",{"fg":2}],["                                                                         ",{}]],"35":[["      returns correct AST node for calls with arguments",{"fg":2}],["                                                                            ",{}]],"36":[["      that are qualified                                                                                                           ",{}]],"37":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"38":[["      that are unqualified                                                                                                         ",{}]],"39":[["        in global context that refer to global variables                                                                           ",{}]],"40":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"41":[["        in local context that refer to global variables                                                                            ",{}]],"43":[["        in local context that refer to local variables                                                                             ",{}]],"45":[["        in nested local context that refer to inner variables                                                                      ",{}]],"47":[["                                                                                                                                   ",{}]],"48":[["Y2R::AST::YCP::Case                                                                                                                ",{}]],"49":[["  #compile                                                                                                                         ",{}]],"50":[["    returns correct AST node for cases with one value",{"fg":2}],["                                                                              ",{}]],"51":[["    returns correct AST node for cases with multiple values",{"fg":2}],["                                                                        ",{}]],"52":[["    removes a break statement from the end",{"fg":2}],["                                                                                         ",{}]]}}],[0.011374,{"lines":{"0":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"1":[["                                                                                                                                   ",{}]],"2":[["Y2R::AST::YCP::Builtin                                                                                                             ",{}]],"3":[["  #compile                                                                                                                         ",{}]],"4":[["    returns correct AST node for builtins with no arguments and no block",{"fg":2}],["                                                           ",{}]],"5":[["    returns correct AST node for builtins with arguments and no block",{"fg":2}],["                                                              ",{}]],"6":[["    returns correct AST node for builtins with no arguments and a block",{"fg":2}],["                                                            ",{}]],"7":[["    returns correct AST node for builtins with arguments and a block",{"fg":2}],["                                                               ",{}]],"8":[["    returns correct AST node for namespaced builtins",{"fg":2}],["                                                                               ",{}]],"9":[["                                                                                                                                   ",{}]],"10":[["Y2R::AST::YCP::Call                                                                                                                ",{}]],"11":[["  #compile                                                                                                                         ",{}]],"12":[["    for calls with category == \"function\"                                                                                          ",{}]],"13":[["      of toplevel functions                                                                                                        ",{}]],"14":[["        returns correct AST node for unqualified calls",{"fg":2}],["                                                                             ",{}]],"15":[["        returns correct AST node for qualified calls",{"fg":2}],["                                                                               ",{}]],"16":[["        returns correct AST node for calls without arguments",{"fg":2}],["                                                                       ",{}]],"17":[["        returns correct AST node for calls with arguments",{"fg":2}],["                                                                          ",{}]],"18":[["      of nested functions                                                                                                          ",{}]],"19":[["        returns correct AST node for calls without arguments",{"fg":2}],["                                                                       ",{}]],"20":[["        returns correct AST node for calls with arguments",{"fg":2}],["                                                                          ",{}]],"21":[["        in local context that refer to local functions                                                                             ",{}]],"22":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"23":[["        in nested local context that refer to inner functions                                                                      ",{}]],"24":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"25":[["      with reference arguments                                                                                                     ",{}]],"26":[["        returns correct AST node for calls where the result is used",{"fg":2}],["                                                                ",{}]],"27":[["        returns correct AST node for calls where the result is unused",{"fg":2}],["                                                              ",{}]],"28":[["    for calls with category == \"variable\"                                                                                          ",{}]],"29":[["      returns correct AST node for calls without arguments",{"fg":2}],["                                                                         ",{}]],"30":[["      returns correct AST node for calls with arguments",{"fg":2}],["                                                                            ",{}]],"31":[["      that are qualified                                                                                                           ",{}]],"32":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"33":[["      that are unqualified                                                                                                         ",{}]],"34":[["        in global context that refer to global variables                                                                           ",{}]],"35":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"36":[["        in local context that refer to global variables                                                                            ",{}]],"37":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"38":[["        in local context that refer to local variables                                                                             ",{}]],"39":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"40":[["        in nested local context that refer to inner variables                                                                      ",{}]],"41":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"42":[["                                                                                                                                   ",{}]],"43":[["Y2R::AST::YCP::Case                                                                                                                ",{}]],"44":[["  #compile                                                                                                                         ",{}]],"45":[["    returns correct AST node for cases with one value",{"fg":2}],["                                                                              ",{}]],"46":[["    returns correct AST node for cases with multiple values",{"fg":2}],["                                                                        ",{}]],"47":[["    removes a break statement from the end",{"fg":2}],["                                                                                         ",{}]],"48":[["    does not remove a return statement from the end",{"fg":2}],["                                                                                ",{}]],"49":[["    raises an exception for cases wihtout break or return",{"fg":2}],["                                                                          ",{}]],"50":[["                                                                                                                                   ",{}]],"51":[["Y2R::AST::YCP::Compare                                                                                                             ",{}]],"52":[["  #compile                                                                                                                         ",{}]]}}],[0.012268,{"lines":{"0":[["    returns correct AST node for builtins with arguments and no block",{"fg":2}],["                                                              ",{}]],"1":[["    returns correct AST node for builtins with no arguments and a block",{"fg":2}],["                                                            ",{}]],"2":[["    returns correct AST node for builtins with arguments and a block",{"fg":2}],["                                                               ",{}]],"3":[["    returns correct AST node for namespaced builtins",{"fg":2}],["                                                                               ",{}]],"4":[["                                                                                                                                   ",{}]],"5":[["Y2R::AST::YCP::Call                                                                                                                ",{}]],"6":[["  #compile                                                                                                                         ",{}]],"7":[["    for calls with category == \"function\"                                                                                          ",{}]],"8":[["      of toplevel functions                                                                                                        ",{}]],"9":[["        returns correct AST node for unqualified calls",{"fg":2}],["                                                                             ",{}]],"10":[["        returns correct AST node for qualified calls",{"fg":2}],["                                                                               ",{}]],"11":[["        returns correct AST node for calls without arguments",{"fg":2}],["                                                                       ",{}]],"12":[["        returns correct AST node for calls with arguments",{"fg":2}],["                                                                          ",{}]],"13":[["      of nested functions                                                                                                          ",{}]],"14":[["        returns correct AST node for calls without arguments",{"fg":2}],["                                                                       ",{}]],"15":[["        returns correct AST node for calls with arguments",{"fg":2}],["                                                                          ",{}]],"16":[["        in local context that refer to local functions                                                                             ",{}]],"17":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"18":[["        in nested local context that refer to inner functions                                                                      ",{}]],"19":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"20":[["      with reference arguments                                                                                                     ",{}]],"21":[["        returns correct AST node for calls where the result is used",{"fg":2}],["                                                                ",{}]],"22":[["        returns correct AST node for calls where the result is unused",{"fg":2}],["                                                              ",{}]],"23":[["    for calls with category == \"variable\"                                                                                          ",{}]],"24":[["      returns correct AST node for calls without arguments",{"fg":2}],["                                                                         ",{}]],"25":[["      returns correct AST node for calls with arguments",{"fg":2}],["                                                                            ",{}]],"26":[["      that are qualified                                                                                                           ",{}]],"27":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"28":[["      that are unqualified                                                                                                         ",{}]],"29":[["        in global context that refer to global variables                                                                           ",{}]],"30":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"31":[["        in local context that refer to global variables                                                                            ",{}]],"32":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"33":[["        in local context that refer to local variables                                                                             ",{}]],"34":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"35":[["        in nested local context that refer to inner variables                                                                      ",{}]],"36":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"37":[["                                                                                                                                   ",{}]],"38":[["Y2R::AST::YCP::Case                                                                                                                ",{}]],"39":[["  #compile                                                                                                                         ",{}]],"40":[["    returns correct AST node for cases with one value",{"fg":2}],["                                                                              ",{}]],"41":[["    returns correct AST node for cases with multiple values",{"fg":2}],["                                                                        ",{}]],"42":[["    removes a break statement from the end",{"fg":2}],["                                                                                         ",{}]],"43":[["    does not remove a return statement from the end",{"fg":2}],["                                                                                ",{}]],"44":[["    raises an exception for cases wihtout break or return",{"fg":2}],["                                                                          ",{}]],"45":[["                                                                                                                                   ",{}]],"46":[["Y2R::AST::YCP::Compare                                                                                                             ",{}]],"47":[["  #compile                                                                                                                         ",{}]],"48":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"49":[["                                                                                                                                   ",{}]],"50":[["Y2R::AST::YCP::Const                                                                                                               ",{}]],"51":[["  #compile                                                                                                                         ",{}]],"52":[["    returns correct AST node for void constants",{"fg":2}],["                                                                                    ",{}]]}}],[0.0051,{"lines":{"0":[["    returns correct AST node for builtins with no arguments and a block",{"fg":2}],["                                                            ",{}]],"1":[["    returns correct AST node for builtins with arguments and a block",{"fg":2}],["                                                               ",{}]],"2":[["    returns correct AST node for namespaced builtins",{"fg":2}],["                                                                               ",{}]],"3":[["                                                                                                                                   ",{}]],"4":[["Y2R::AST::YCP::Call                                                                                                                ",{}]],"5":[["  #compile                                                                                                                         ",{}]],"6":[["    for calls with category == \"function\"                                                                                          ",{}]],"7":[["      of toplevel functions                                                                                                        ",{}]],"8":[["        returns correct AST node for unqualified calls",{"fg":2}],["                                                                             ",{}]],"9":[["        returns correct AST node for qualified calls",{"fg":2}],["                                                                               ",{}]],"10":[["        returns correct AST node for calls without arguments",{"fg":2}],["                                                                       ",{}]],"11":[["        returns correct AST node for calls with arguments",{"fg":2}],["                                                                          ",{}]],"12":[["      of nested functions                                                                                                          ",{}]],"13":[["        returns correct AST node for calls without arguments",{"fg":2}],["                                                                       ",{}]],"14":[["        returns correct AST node for calls with arguments",{"fg":2}],["                                                                          ",{}]],"15":[["        in local context that refer to local functions                                                                             ",{}]],"16":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"17":[["        in nested local context that refer to inner functions                                                                      ",{}]],"18":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"19":[["      with reference arguments                                                                                                     ",{}]],"20":[["        returns correct AST node for calls where the result is used",{"fg":2}],["                                                                ",{}]],"21":[["        returns correct AST node for calls where the result is unused",{"fg":2}],["                                                              ",{}]],"22":[["    for calls with category == \"variable\"                                                                                          ",{}]],"23":[["      returns correct AST node for calls without arguments",{"fg":2}],["                                                                         ",{}]],"24":[["      returns correct AST node for calls with arguments",{"fg":2}],["                                                                            ",{}]],"25":[["      that are qualified                                                                                                           ",{}]],"26":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"27":[["      that are unqualified                                                                                                         ",{}]],"28":[["        in global context that refer to global variables                                                                           ",{}]],"29":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"30":[["        in local context that refer to global variables                                                                            ",{}]],"31":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"32":[["        in local context that refer to local variables                                                                             ",{}]],"33":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"34":[["        in nested local context that refer to inner variables                                                                      ",{}]],"35":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"36":[["                                                                                                                                   ",{}]],"37":[["Y2R::AST::YCP::Case                                                                                                                ",{}]],"38":[["  #compile                                                                                                                         ",{}]],"39":[["    returns correct AST node for cases with one value",{"fg":2}],["                                                                              ",{}]],"40":[["    returns correct AST node for cases with multiple values",{"fg":2}],["                                                                        ",{}]],"41":[["    removes a break statement from the end",{"fg":2}],["                                                                                         ",{}]],"42":[["    does not remove a return statement from the end",{"fg":2}],["                                                                                ",{}]],"43":[["    raises an exception for cases wihtout break or return",{"fg":2}],["                                                                          ",{}]],"44":[["                                                                                                                                   ",{}]],"45":[["Y2R::AST::YCP::Compare                                                                                                             ",{}]],"46":[["  #compile                                                                                                                         ",{}]],"47":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"48":[["                                                                                                                                   ",{}]],"49":[["Y2R::AST::YCP::Const                                                                                                               ",{}]],"50":[["  #compile                                                                                                                         ",{}]],"51":[["    returns correct AST node for void constants",{"fg":2}],["                                                                                    ",{}]],"52":[["    returns correct AST node for boolean constants",{"fg":2}],["                                                                                 ",{}]]}}],[0.020628,{"lines":{"0":[["    returns correct AST node for builtins with arguments and a block",{"fg":2}],["                                                               ",{}]],"1":[["    returns correct AST node for namespaced builtins",{"fg":2}],["                                                                               ",{}]],"2":[["                                                                                                                                   ",{}]],"3":[["Y2R::AST::YCP::Call                                                                                                                ",{}]],"4":[["  #compile                                                                                                                         ",{}]],"5":[["    for calls with category == \"function\"                                                                                          ",{}]],"6":[["      of toplevel functions                                                                                                        ",{}]],"7":[["        returns correct AST node for unqualified calls",{"fg":2}],["                                                                             ",{}]],"8":[["        returns correct AST node for qualified calls",{"fg":2}],["                                                                               ",{}]],"9":[["        returns correct AST node for calls without arguments",{"fg":2}],["                                                                       ",{}]],"10":[["        returns correct AST node for calls with arguments",{"fg":2}],["                                                                          ",{}]],"11":[["      of nested functions                                                                                                          ",{}]],"12":[["        returns correct AST node for calls without arguments",{"fg":2}],["                                                                       ",{}]],"13":[["        returns correct AST node for calls with arguments",{"fg":2}],["                                                                          ",{}]],"14":[["        in local context that refer to local functions                                                                             ",{}]],"15":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"16":[["        in nested local context that refer to inner functions                                                                      ",{}]],"17":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"18":[["      with reference arguments                                                                                                     ",{}]],"19":[["        returns correct AST node for calls where the result is used",{"fg":2}],["                                                                ",{}]],"20":[["        returns correct AST node for calls where the result is unused",{"fg":2}],["                                                              ",{}]],"21":[["    for calls with category == \"variable\"                                                                                          ",{}]],"22":[["      returns correct AST node for calls without arguments",{"fg":2}],["                                                                         ",{}]],"23":[["      returns correct AST node for calls with arguments",{"fg":2}],["                                                                            ",{}]],"24":[["      that are qualified                                                                                                           ",{}]],"25":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"26":[["      that are unqualified                                                                                                         ",{}]],"27":[["        in global context that refer to global variables                                                                           ",{}]],"28":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"29":[["        in local context that refer to global variables                                                                            ",{}]],"30":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"31":[["        in local context that refer to local variables                                                                             ",{}]],"32":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"33":[["        in nested local context that refer to inner variables                                                                      ",{}]],"34":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"35":[["                                                                                                                                   ",{}]],"36":[["Y2R::AST::YCP::Case                                                                                                                ",{}]],"37":[["  #compile                                                                                                                         ",{}]],"38":[["    returns correct AST node for cases with one value",{"fg":2}],["                                                                              ",{}]],"39":[["    returns correct AST node for cases with multiple values",{"fg":2}],["                                                                        ",{}]],"40":[["    removes a break statement from the end",{"fg":2}],["                                                                                         ",{}]],"41":[["    does not remove a return statement from the end",{"fg":2}],["                                                                                ",{}]],"42":[["    raises an exception for cases wihtout break or return",{"fg":2}],["                                                                          ",{}]],"43":[["                                                                                                                                   ",{}]],"44":[["Y2R::AST::YCP::Compare                                                                                                             ",{}]],"45":[["  #compile                                                                                                                         ",{}]],"46":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"47":[["                                                                                                                                   ",{}]],"48":[["Y2R::AST::YCP::Const                                                                                                               ",{}]],"49":[["  #compile                                                                                                                         ",{}]],"50":[["    returns correct AST node for void constants",{"fg":2}],["                                                                                    ",{}]],"51":[["    returns correct AST node for boolean constants",{"fg":2}],["                                                                                 ",{}]],"52":[["    returns correct AST node for integer constants",{"fg":2}],["                                                                                 ",{}]]}}],[0.012653,{"lines":{"0":[["                                                                                                                                   ",{}]],"1":[["Y2R::AST::YCP::Call                                                                                                                ",{}]],"2":[["  #compile                                                                                                                         ",{}]],"3":[["    for calls with category == \"function\"                                                                                          ",{}]],"4":[["      of toplevel functions                                                                                                        ",{}]],"5":[["        returns correct AST node for unqualified calls",{"fg":2}],["                                                                             ",{}]],"6":[["        returns correct AST node for qualified calls",{"fg":2}],["                                                                               ",{}]],"7":[["        returns correct AST node for calls without arguments",{"fg":2}],["                                                                       ",{}]],"8":[["        returns correct AST node for calls with arguments",{"fg":2}],["                                                                          ",{}]],"9":[["      of nested functions                                                                                                          ",{}]],"10":[["        returns correct AST node for calls without arguments",{"fg":2}],["                                                                       ",{}]],"11":[["        returns correct AST node for calls with arguments",{"fg":2}],["                                                                          ",{}]],"12":[["        in local context that refer to local functions                                                                             ",{}]],"13":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"14":[["        in nested local context that refer to inner functions                                                                      ",{}]],"16":[["      with reference arguments                                                                                                     ",{}]],"17":[["        returns correct AST node for calls where the result is used",{"fg":2}],["                                                                ",{}]],"18":[["        returns correct AST node for calls where the result is unused",{"fg":2}],["                                                              ",{}]],"19":[["    for calls with category == \"variable\"                                                                                          ",{}]],"20":[["      returns correct AST node for calls without arguments",{"fg":2}],["                                                                         ",{}]],"21":[["      returns correct AST node for calls with arguments",{"fg":2}],["                                                                            ",{}]],"22":[["      that are qualified                                                                                                           ",{}]],"23":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"24":[["      that are unqualified                                                                                                         ",{}]],"25":[["        in global context that refer to global variables                                                                           ",{}]],"26":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"27":[["        in local context that refer to global variables                                                                            ",{}]],"29":[["        in local context that refer to local variables                                                                             ",{}]],"31":[["        in nested local context that refer to inner variables                                                                      ",{}]],"33":[["                                                                                                                                   ",{}]],"34":[["Y2R::AST::YCP::Case                                                                                                                ",{}]],"35":[["  #compile                                                                                                                         ",{}]],"36":[["    returns correct AST node for cases with one value",{"fg":2}],["                                                                              ",{}]],"37":[["    returns correct AST node for cases with multiple values",{"fg":2}],["                                                                        ",{}]],"38":[["    removes a break statement from the end",{"fg":2}],["                                                                                         ",{}]],"39":[["    does not remove a return statement from the end",{"fg":2}],["                                                                                ",{}]],"40":[["    raises an exception for cases wihtout break or return",{"fg":2}],["                                                                          ",{}]],"41":[["                                                                                                                                   ",{}]],"42":[["Y2R::AST::YCP::Compare                                                                                                             ",{}]],"43":[["  #compile                                                                                                                         ",{}]],"44":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"45":[["                                                                                                                                   ",{}]],"46":[["Y2R::AST::YCP::Const                                                                                                               ",{}]],"47":[["  #compile                                                                                                                         ",{}]],"48":[["    returns correct AST node for void constants",{"fg":2}],["                                                                                    ",{}]],"49":[["    returns correct AST node for boolean constants",{"fg":2}],["                                                                                 ",{}]],"50":[["    returns correct AST node for integer constants",{"fg":2}],["                                                                                 ",{}]],"51":[["    returns correct AST node for float constants",{"fg":2}],["                                                                                   ",{}]],"52":[["    returns correct AST node for symbol constants",{"fg":2}],["                                                                                  ",{}]]}}],[0.013173,{"lines":{"0":[["        returns correct AST node for unqualified calls",{"fg":2}],["                                                                             ",{}]],"1":[["        returns correct AST node for qualified calls",{"fg":2}],["                                                                               ",{}]],"2":[["        returns correct AST node for calls without arguments",{"fg":2}],["                                                                       ",{}]],"3":[["        returns correct AST node for calls with arguments",{"fg":2}],["                                                                          ",{}]],"4":[["      of nested functions                                                                                                          ",{}]],"5":[["        returns correct AST node for calls without arguments",{"fg":2}],["                                                                       ",{}]],"6":[["        returns correct AST node for calls with arguments",{"fg":2}],["                                                                          ",{}]],"7":[["        in local context that refer to local functions                                                                             ",{}]],"8":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"9":[["        in nested local context that refer to inner functions                                                                      ",{}]],"10":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"11":[["      with reference arguments                                                                                                     ",{}]],"12":[["        returns correct AST node for calls where the result is used",{"fg":2}],["                                                                ",{}]],"13":[["        returns correct AST node for calls where the result is unused",{"fg":2}],["                                                              ",{}]],"14":[["    for calls with category == \"variable\"                                                                                          ",{}]],"15":[["      returns correct AST node for calls without arguments",{"fg":2}],["                                                                         ",{}]],"16":[["      returns correct AST node for calls with arguments",{"fg":2}],["                                                                            ",{}]],"17":[["      that are qualified                                                                                                           ",{}]],"18":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"19":[["      that are unqualified                                                                                                         ",{}]],"20":[["        in global context that refer to global variables                                                                           ",{}]],"21":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"22":[["        in local context that refer to global variables                                                                            ",{}]],"23":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"24":[["        in local context that refer to local variables                                                                             ",{}]],"25":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"26":[["        in nested local context that refer to inner variables                                                                      ",{}]],"27":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"28":[["                                                                                                                                   ",{}]],"29":[["Y2R::AST::YCP::Case                                                                                                                ",{}]],"30":[["  #compile                                                                                                                         ",{}]],"31":[["    returns correct AST node for cases with one value",{"fg":2}],["                                                                              ",{}]],"32":[["    returns correct AST node for cases with multiple values",{"fg":2}],["                                                                        ",{}]],"33":[["    removes a break statement from the end",{"fg":2}],["                                                                                         ",{}]],"34":[["    does not remove a return statement from the end",{"fg":2}],["                                                                                ",{}]],"35":[["    raises an exception for cases wihtout break or return",{"fg":2}],["                                                                          ",{}]],"36":[["                                                                                                                                   ",{}]],"37":[["Y2R::AST::YCP::Compare                                                                                                             ",{}]],"38":[["  #compile                                                                                                                         ",{}]],"39":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"40":[["                                                                                                                                   ",{}]],"41":[["Y2R::AST::YCP::Const                                                                                                               ",{}]],"42":[["  #compile                                                                                                                         ",{}]],"43":[["    returns correct AST node for void constants",{"fg":2}],["                                                                                    ",{}]],"44":[["    returns correct AST node for boolean constants",{"fg":2}],["                                                                                 ",{}]],"45":[["    returns correct AST node for integer constants",{"fg":2}],["                                                                                 ",{}]],"46":[["    returns correct AST node for float constants",{"fg":2}],["                                                                                   ",{}]],"47":[["    returns correct AST node for symbol constants",{"fg":2}],["                                                                                  ",{}]],"48":[["    returns correct AST node for string constants",{"fg":2}],["                                                                                  ",{}]],"49":[["    returns correct AST node for path constants",{"fg":2}],["                                                                                    ",{}]],"50":[["                                                                                                                                   ",{}]],"51":[["Y2R::AST::YCP::Continue                                                                                                            ",{}]],"52":[["  #compile                                                                                                                         ",{}]]}}],[0.052559,{"lines":{"0":[["        returns correct AST node for qualified calls",{"fg":2}],["                                                                               ",{}]],"1":[["        returns correct AST node for calls without arguments",{"fg":2}],["                                                                       ",{}]],"2":[["        returns correct AST node for calls with arguments",{"fg":2}],["                                                                          ",{}]],"3":[["      of nested functions                                                                                                          ",{}]],"4":[["        returns correct AST node for calls without arguments",{"fg":2}],["                                                                       ",{}]],"5":[["        returns correct AST node for calls with arguments",{"fg":2}],["                                                                          ",{}]],"6":[["        in local context that refer to local functions                                                                             ",{}]],"7":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"8":[["        in nested local context that refer to inner functions                                                                      ",{}]],"9":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"10":[["      with reference arguments                                                                                                     ",{}]],"11":[["        returns correct AST node for calls where the result is used",{"fg":2}],["                                                                ",{}]],"12":[["        returns correct AST node for calls where the result is unused",{"fg":2}],["                                                              ",{}]],"13":[["    for calls with category == \"variable\"                                                                                          ",{}]],"14":[["      returns correct AST node for calls without arguments",{"fg":2}],["                                                                         ",{}]],"15":[["      returns correct AST node for calls with arguments",{"fg":2}],["                                                                            ",{}]],"16":[["      that are qualified                                                                                                           ",{}]],"17":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"18":[["      that are unqualified                                                                                                         ",{}]],"19":[["        in global context that refer to global variables                                                                           ",{}]],"20":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"21":[["        in local context that refer to global variables                                                                            ",{}]],"22":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"23":[["        in local context that refer to local variables                                                                             ",{}]],"24":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"25":[["        in nested local context that refer to inner variables                                                                      ",{}]],"26":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"27":[["                                                                                                                                   ",{}]],"28":[["Y2R::AST::YCP::Case                                                                                                                ",{}]],"29":[["  #compile                                                                                                                         ",{}]],"30":[["    returns correct AST node for cases with one value",{"fg":2}],["                                                                              ",{}]],"31":[["    returns correct AST node for cases with multiple values",{"fg":2}],["                                                                        ",{}]],"32":[["    removes a break statement from the end",{"fg":2}],["                                                                                         ",{}]],"33":[["    does not remove a return statement from the end",{"fg":2}],["                                                                                ",{}]],"34":[["    raises an exception for cases wihtout break or return",{"fg":2}],["                                                                          ",{}]],"35":[["                                                                                                                                   ",{}]],"36":[["Y2R::AST::YCP::Compare                                                                                                             ",{}]],"37":[["  #compile                                                                                                                         ",{}]],"38":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"39":[["                                                                                                                                   ",{}]],"40":[["Y2R::AST::YCP::Const                                                                                                               ",{}]],"41":[["  #compile                                                                                                                         ",{}]],"42":[["    returns correct AST node for void constants",{"fg":2}],["                                                                                    ",{}]],"43":[["    returns correct AST node for boolean constants",{"fg":2}],["                                                                                 ",{}]],"44":[["    returns correct AST node for integer constants",{"fg":2}],["                                                                                 ",{}]],"45":[["    returns correct AST node for float constants",{"fg":2}],["                                                                                   ",{}]],"46":[["    returns correct AST node for symbol constants",{"fg":2}],["                                                                                  ",{}]],"47":[["    returns correct AST node for string constants",{"fg":2}],["                                                                                  ",{}]],"48":[["    returns correct AST node for path constants",{"fg":2}],["                                                                                    ",{}]],"49":[["                                                                                                                                   ",{}]],"50":[["Y2R::AST::YCP::Continue                                                                                                            ",{}]],"51":[["  #compile                                                                                                                         ",{}]],"52":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]]}}],[0.014011,{"lines":{"0":[["        in nested local context that refer to inner functions                                                                      ",{}]],"1":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"2":[["      with reference arguments                                                                                                     ",{}]],"3":[["        returns correct AST node for calls where the result is used",{"fg":2}],["                                                                ",{}]],"4":[["        returns correct AST node for calls where the result is unused",{"fg":2}],["                                                              ",{}]],"5":[["    for calls with category == \"variable\"                                                                                          ",{}]],"6":[["      returns correct AST node for calls without arguments",{"fg":2}],["                                                                         ",{}]],"7":[["      returns correct AST node for calls with arguments",{"fg":2}],["                                                                            ",{}]],"8":[["      that are qualified                                                                                                           ",{}]],"9":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"10":[["      that are unqualified                                                                                                         ",{}]],"11":[["        in global context that refer to global variables                                                                           ",{}]],"12":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"13":[["        in local context that refer to global variables                                                                            ",{}]],"14":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"15":[["        in local context that refer to local variables                                                                             ",{}]],"16":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"17":[["        in nested local context that refer to inner variables                                                                      ",{}]],"18":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"19":[["                                                                                                                                   ",{}]],"20":[["Y2R::AST::YCP::Case                                                                                                                ",{}]],"21":[["  #compile                                                                                                                         ",{}]],"22":[["    returns correct AST node for cases with one value",{"fg":2}],["                                                                              ",{}]],"23":[["    returns correct AST node for cases with multiple values",{"fg":2}],["                                                                        ",{}]],"24":[["    removes a break statement from the end",{"fg":2}],["                                                                                         ",{}]],"25":[["    does not remove a return statement from the end",{"fg":2}],["                                                                                ",{}]],"26":[["    raises an exception for cases wihtout break or return",{"fg":2}],["                                                                          ",{}]],"28":[["Y2R::AST::YCP::Compare                                                                                                             ",{}]],"30":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"31":[["                                                                                                                                   ",{}]],"32":[["Y2R::AST::YCP::Const                                                                                                               ",{}]],"33":[["  #compile                                                                                                                         ",{}]],"34":[["    returns correct AST node for void constants",{"fg":2}],["                                                                                    ",{}]],"35":[["    returns correct AST node for boolean constants",{"fg":2}],["                                                                                 ",{}]],"36":[["    returns correct AST node for integer constants",{"fg":2}],["                                                                                 ",{}]],"37":[["    returns correct AST node for float constants",{"fg":2}],["                                                                                   ",{}]],"38":[["    returns correct AST node for symbol constants",{"fg":2}],["                                                                                  ",{}]],"39":[["    returns correct AST node for string constants",{"fg":2}],["                                                                                  ",{}]],"40":[["    returns correct AST node for path constants",{"fg":2}],["                                                                                    ",{}]],"41":[["                                                                                                                                   ",{}]],"42":[["Y2R::AST::YCP::Continue                                                                                                            ",{}]],"43":[["  #compile                                                                                                                         ",{}]],"44":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"45":[["                                                                                                                                   ",{}]],"46":[["Y2R::AST::YCP::Default                                                                                                             ",{}]],"47":[["  #compile                                                                                                                         ",{}]],"48":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"49":[["    removes a break statement from the end",{"fg":2}],["                                                                                         ",{}]],"50":[["                                                                                                                                   ",{}]],"51":[["Y2R::AST::YCP::DefBlock                                                                                                            ",{}]],"52":[["  #compile                                                                                                                         ",{}]]}}],[0.012057,{"lines":{"0":[["    for calls with category == \"variable\"                                                                                          ",{}]],"1":[["      returns correct AST node for calls without arguments",{"fg":2}],["                                                                         ",{}]],"2":[["      returns correct AST node for calls with arguments",{"fg":2}],["                                                                            ",{}]],"3":[["      that are qualified                                                                                                           ",{}]],"4":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"5":[["      that are unqualified                                                                                                         ",{}]],"6":[["        in global context that refer to global variables                                                                           ",{}]],"7":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"8":[["        in local context that refer to global variables                                                                            ",{}]],"9":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"10":[["        in local context that refer to local variables                                                                             ",{}]],"11":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"12":[["        in nested local context that refer to inner variables                                                                      ",{}]],"13":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"14":[["                                                                                                                                   ",{}]],"15":[["Y2R::AST::YCP::Case                                                                                                                ",{}]],"16":[["  #compile                                                                                                                         ",{}]],"17":[["    returns correct AST node for cases with one value",{"fg":2}],["                                                                              ",{}]],"18":[["    returns correct AST node for cases with multiple values",{"fg":2}],["                                                                        ",{}]],"19":[["    removes a break statement from the end",{"fg":2}],["                                                                                         ",{}]],"20":[["    does not remove a return statement from the end",{"fg":2}],["                                                                                ",{}]],"21":[["    raises an exception for cases wihtout break or return",{"fg":2}],["                                                                          ",{}]],"22":[["                                                                                                                                   ",{}]],"23":[["Y2R::AST::YCP::Compare                                                                                                             ",{}]],"24":[["  #compile                                                                                                                         ",{}]],"25":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"26":[["                                                                                                                                   ",{}]],"27":[["Y2R::AST::YCP::Const                                                                                                               ",{}]],"28":[["  #compile                                                                                                                         ",{}]],"29":[["    returns correct AST node for void constants",{"fg":2}],["                                                                                    ",{}]],"30":[["    returns correct AST node for boolean constants",{"fg":2}],["                                                                                 ",{}]],"31":[["    returns correct AST node for integer constants",{"fg":2}],["                                                                                 ",{}]],"32":[["    returns correct AST node for float constants",{"fg":2}],["                                                                                   ",{}]],"33":[["    returns correct AST node for symbol constants",{"fg":2}],["                                                                                  ",{}]],"34":[["    returns correct AST node for string constants",{"fg":2}],["                                                                                  ",{}]],"35":[["    returns correct AST node for path constants",{"fg":2}],["                                                                                    ",{}]],"36":[["                                                                                                                                   ",{}]],"37":[["Y2R::AST::YCP::Continue                                                                                                            ",{}]],"38":[["  #compile                                                                                                                         ",{}]],"39":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"40":[["                                                                                                                                   ",{}]],"41":[["Y2R::AST::YCP::Default                                                                                                             ",{}]],"42":[["  #compile                                                                                                                         ",{}]],"43":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"44":[["    removes a break statement from the end",{"fg":2}],["                                                                                         ",{}]],"46":[["Y2R::AST::YCP::DefBlock                                                                                                            ",{}]],"49":[["                                                                                                                                   ",{}]],"50":[["Y2R::AST::YCP::Do                                                                                                                  ",{}]],"51":[["  #compile                                                                                                                         ",{}]],"52":[["    returns correct AST node for do statements without do",{"fg":2}],["                                                                          ",{}]]}}],[0.012559,{"lines":{"0":[["        in local context that refer to global variables                                                                            ",{}]],"1":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"2":[["        in local context that refer to local variables                                                                             ",{}]],"3":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"4":[["        in nested local context that refer to inner variables                                                                      ",{}]],"5":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"6":[["                                                                                                                                   ",{}]],"7":[["Y2R::AST::YCP::Case                                                                                                                ",{}]],"8":[["  #compile                                                                                                                         ",{}]],"9":[["    returns correct AST node for cases with one value",{"fg":2}],["                                                                              ",{}]],"10":[["    returns correct AST node for cases with multiple values",{"fg":2}],["                                                                        ",{}]],"11":[["    removes a break statement from the end",{"fg":2}],["                                                                                         ",{}]],"12":[["    does not remove a return statement from the end",{"fg":2}],["                                                                                ",{}]],"13":[["    raises an exception for cases wihtout break or return",{"fg":2}],["                                                                          ",{}]],"15":[["Y2R::AST::YCP::Compare                                                                                                             ",{}]],"17":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"18":[["                                                                                                                                   ",{}]],"19":[["Y2R::AST::YCP::Const                                                                                                               ",{}]],"20":[["  #compile                                                                                                                         ",{}]],"21":[["    returns correct AST node for void constants",{"fg":2}],["                                                                                    ",{}]],"22":[["    returns correct AST node for boolean constants",{"fg":2}],["                                                                                 ",{}]],"23":[["    returns correct AST node for integer constants",{"fg":2}],["                                                                                 ",{}]],"24":[["    returns correct AST node for float constants",{"fg":2}],["                                                                                   ",{}]],"25":[["    returns correct AST node for symbol constants",{"fg":2}],["                                                                                  ",{}]],"26":[["    returns correct AST node for string constants",{"fg":2}],["                                                                                  ",{}]],"27":[["    returns correct AST node for path constants",{"fg":2}],["                                                                                    ",{}]],"28":[["                                                                                                                                   ",{}]],"29":[["Y2R::AST::YCP::Continue                                                                                                            ",{}]],"30":[["  #compile                                                                                                                         ",{}]],"31":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"32":[["                                                                                                                                   ",{}]],"33":[["Y2R::AST::YCP::Default                                                                                                             ",{}]],"34":[["  #compile                                                                                                                         ",{}]],"35":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"36":[["    removes a break statement from the end",{"fg":2}],["                                                                                         ",{}]],"37":[["                                                                                                                                   ",{}]],"38":[["Y2R::AST::YCP::DefBlock                                                                                                            ",{}]],"39":[["  #compile                                                                                                                         ",{}]],"40":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"41":[["                                                                                                                                   ",{}]],"42":[["Y2R::AST::YCP::Do                                                                                                                  ",{}]],"43":[["  #compile                                                                                                                         ",{}]],"44":[["    returns correct AST node for do statements without do",{"fg":2}],["                                                                          ",{}]],"45":[["    returns correct AST node for do statements with do",{"fg":2}],["                                                                             ",{}]],"46":[["                                                                                                                                   ",{}]],"47":[["Y2R::AST::YCP::Entry                                                                                                               ",{}]],"48":[["  #compile                                                                                                                         ",{}]],"49":[["    for qualified entries                                                                                                          ",{}]],"50":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"51":[["    for unqualified entries                                                                                                        ",{}]],"52":[["      in global context that refer to global variables                                                                             ",{}]]}}],[0.012381,{"lines":{"0":[["        in nested local context that refer to inner variables                                                                      ",{}]],"2":[["                                                                                                                                   ",{}]],"3":[["Y2R::AST::YCP::Case                                                                                                                ",{}]],"4":[["  #compile                                                                                                                         ",{}]],"5":[["    returns correct AST node for cases with one value",{"fg":2}],["                                                                              ",{}]],"6":[["    returns correct AST node for cases with multiple values",{"fg":2}],["                                                                        ",{}]],"7":[["    removes a break statement from the end",{"fg":2}],["                                                                                         ",{}]],"8":[["    does not remove a return statement from the end",{"fg":2}],["                                                                                ",{}]],"9":[["    raises an exception for cases wihtout break or return",{"fg":2}],["                                                                          ",{}]],"10":[["                                                                                                                                   ",{}]],"11":[["Y2R::AST::YCP::Compare                                                                                                             ",{}]],"12":[["  #compile                                                                                                                         ",{}]],"13":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"15":[["Y2R::AST::YCP::Const                                                                                                               ",{}]],"17":[["    returns correct AST node for void constants",{"fg":2}],["                                                                                    ",{}]],"18":[["    returns correct AST node for boolean constants",{"fg":2}],["                                                                                 ",{}]],"19":[["    returns correct AST node for integer constants",{"fg":2}],["                                                                                 ",{}]],"20":[["    returns correct AST node for float constants",{"fg":2}],["                                                                                   ",{}]],"21":[["    returns correct AST node for symbol constants",{"fg":2}],["                                                                                  ",{}]],"22":[["    returns correct AST node for string constants",{"fg":2}],["                                                                                  ",{}]],"23":[["    returns correct AST node for path constants",{"fg":2}],["                                                                                    ",{}]],"24":[["                                                                                                                                   ",{}]],"25":[["Y2R::AST::YCP::Continue                                                                                                            ",{}]],"26":[["  #compile                                                                                                                         ",{}]],"27":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"29":[["Y2R::AST::YCP::Default                                                                                                             ",{}]],"32":[["    removes a break statement from the end",{"fg":2}],["                                                                                         ",{}]],"33":[["                                                                                                                                   ",{}]],"34":[["Y2R::AST::YCP::DefBlock                                                                                                            ",{}]],"35":[["  #compile                                                                                                                         ",{}]],"36":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"38":[["Y2R::AST::YCP::Do                                                                                                                  ",{}]],"40":[["    returns correct AST node for do statements without do",{"fg":2}],["                                                                          ",{}]],"41":[["    returns correct AST node for do statements with do",{"fg":2}],["                                                                             ",{}]],"42":[["                                                                                                                                   ",{}]],"43":[["Y2R::AST::YCP::Entry                                                                                                               ",{}]],"44":[["  #compile                                                                                                                         ",{}]],"45":[["    for qualified entries                                                                                                          ",{}]],"46":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"47":[["    for unqualified entries                                                                                                        ",{}]],"48":[["      in global context that refer to global variables                                                                             ",{}]],"49":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"50":[["      in local context that refer to global variables                                                                              ",{}]],"51":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"52":[["      in local context that refer to local variables                                                                               ",{}]]}}],[0.016556,{"lines":{"0":[["    returns correct AST node for cases with one value",{"fg":2}],["                                                                              ",{}]],"1":[["    returns correct AST node for cases with multiple values",{"fg":2}],["                                                                        ",{}]],"2":[["    removes a break statement from the end",{"fg":2}],["                                                                                         ",{}]],"3":[["    does not remove a return statement from the end",{"fg":2}],["                                                                                ",{}]],"4":[["    raises an exception for cases wihtout break or return",{"fg":2}],["                                                                          ",{}]],"5":[["                                                                                                                                   ",{}]],"6":[["Y2R::AST::YCP::Compare                                                                                                             ",{}]],"7":[["  #compile                                                                                                                         ",{}]],"8":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"9":[["                                                                                                                                   ",{}]],"10":[["Y2R::AST::YCP::Const                                                                                                               ",{}]],"11":[["  #compile                                                                                                                         ",{}]],"12":[["    returns correct AST node for void constants",{"fg":2}],["                                                                                    ",{}]],"13":[["    returns correct AST node for boolean constants",{"fg":2}],["                                                                                 ",{}]],"14":[["    returns correct AST node for integer constants",{"fg":2}],["                                                                                 ",{}]],"15":[["    returns correct AST node for float constants",{"fg":2}],["                                                                                   ",{}]],"16":[["    returns correct AST node for symbol constants",{"fg":2}],["                                                                                  ",{}]],"17":[["    returns correct AST node for string constants",{"fg":2}],["                                                                                  ",{}]],"18":[["    returns correct AST node for path constants",{"fg":2}],["                                                                                    ",{}]],"19":[["                                                                                                                                   ",{}]],"20":[["Y2R::AST::YCP::Continue                                                                                                            ",{}]],"21":[["  #compile                                                                                                                         ",{}]],"22":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"23":[["                                                                                                                                   ",{}]],"24":[["Y2R::AST::YCP::Default                                                                                                             ",{}]],"25":[["  #compile                                                                                                                         ",{}]],"26":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"27":[["    removes a break statement from the end",{"fg":2}],["                                                                                         ",{}]],"29":[["Y2R::AST::YCP::DefBlock                                                                                                            ",{}]],"32":[["                                                                                                                                   ",{}]],"33":[["Y2R::AST::YCP::Do                                                                                                                  ",{}]],"34":[["  #compile                                                                                                                         ",{}]],"35":[["    returns correct AST node for do statements without do",{"fg":2}],["                                                                          ",{}]],"36":[["    returns correct AST node for do statements with do",{"fg":2}],["                                                                             ",{}]],"38":[["Y2R::AST::YCP::Entry                                                                                                               ",{}]],"40":[["    for qualified entries                                                                                                          ",{}]],"41":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"42":[["    for unqualified entries                                                                                                        ",{}]],"43":[["      in global context that refer to global variables                                                                             ",{}]],"44":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"45":[["      in local context that refer to global variables                                                                              ",{}]],"46":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"47":[["      in local context that refer to local variables                                                                               ",{}]],"48":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"49":[["      in nested local context that refer to inner variables                                                                        ",{}]],"50":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"51":[["  #compile_as_ref                                                                                                                  ",{}]],"52":[["    for qualified entries                                                                                                          ",{}]]}}],[0.015016,{"lines":{"0":[["  #compile                                                                                                                         ",{}]],"1":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"2":[["                                                                                                                                   ",{}]],"3":[["Y2R::AST::YCP::Const                                                                                                               ",{}]],"4":[["  #compile                                                                                                                         ",{}]],"5":[["    returns correct AST node for void constants",{"fg":2}],["                                                                                    ",{}]],"6":[["    returns correct AST node for boolean constants",{"fg":2}],["                                                                                 ",{}]],"7":[["    returns correct AST node for integer constants",{"fg":2}],["                                                                                 ",{}]],"8":[["    returns correct AST node for float constants",{"fg":2}],["                                                                                   ",{}]],"9":[["    returns correct AST node for symbol constants",{"fg":2}],["                                                                                  ",{}]],"10":[["    returns correct AST node for string constants",{"fg":2}],["                                                                                  ",{}]],"11":[["    returns correct AST node for path constants",{"fg":2}],["                                                                                    ",{}]],"12":[["                                                                                                                                   ",{}]],"13":[["Y2R::AST::YCP::Continue                                                                                                            ",{}]],"14":[["  #compile                                                                                                                         ",{}]],"15":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"16":[["                                                                                                                                   ",{}]],"17":[["Y2R::AST::YCP::Default                                                                                                             ",{}]],"18":[["  #compile                                                                                                                         ",{}]],"19":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"20":[["    removes a break statement from the end",{"fg":2}],["                                                                                         ",{}]],"21":[["                                                                                                                                   ",{}]],"22":[["Y2R::AST::YCP::DefBlock                                                                                                            ",{}]],"23":[["  #compile                                                                                                                         ",{}]],"24":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"25":[["                                                                                                                                   ",{}]],"26":[["Y2R::AST::YCP::Do                                                                                                                  ",{}]],"27":[["  #compile                                                                                                                         ",{}]],"28":[["    returns correct AST node for do statements without do",{"fg":2}],["                                                                          ",{}]],"29":[["    returns correct AST node for do statements with do",{"fg":2}],["                                                                             ",{}]],"30":[["                                                                                                                                   ",{}]],"31":[["Y2R::AST::YCP::Entry                                                                                                               ",{}]],"32":[["  #compile                                                                                                                         ",{}]],"33":[["    for qualified entries                                                                                                          ",{}]],"34":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"35":[["    for unqualified entries                                                                                                        ",{}]],"36":[["      in global context that refer to global variables                                                                             ",{}]],"37":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"38":[["      in local context that refer to global variables                                                                              ",{}]],"39":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"40":[["      in local context that refer to local variables                                                                               ",{}]],"41":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"42":[["      in nested local context that refer to inner variables                                                                        ",{}]],"43":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"44":[["  #compile_as_ref                                                                                                                  ",{}]],"45":[["    for qualified entries                                                                                                          ",{}]],"46":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"47":[["    for unqualified entries                                                                                                        ",{}]],"48":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"49":[["                                                                                                                                   ",{}]],"50":[["Y2R::AST::YCP::FileBlock                                                                                                           ",{}]],"51":[["  #compile                                                                                                                         ",{}]],"52":[["    returns correct AST node for empty blocks",{"fg":2}],["                                                                                      ",{}]]}}],[0.016366,{"lines":{"0":[["    returns correct AST node for void constants",{"fg":2}],["                                                                                    ",{}]],"1":[["    returns correct AST node for boolean constants",{"fg":2}],["                                                                                 ",{}]],"2":[["    returns correct AST node for integer constants",{"fg":2}],["                                                                                 ",{}]],"3":[["    returns correct AST node for float constants",{"fg":2}],["                                                                                   ",{}]],"4":[["    returns correct AST node for symbol constants",{"fg":2}],["                                                                                  ",{}]],"5":[["    returns correct AST node for string constants",{"fg":2}],["                                                                                  ",{}]],"6":[["    returns correct AST node for path constants",{"fg":2}],["                                                                                    ",{}]],"7":[["                                                                                                                                   ",{}]],"8":[["Y2R::AST::YCP::Continue                                                                                                            ",{}]],"9":[["  #compile                                                                                                                         ",{}]],"10":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"11":[["                                                                                                                                   ",{}]],"12":[["Y2R::AST::YCP::Default                                                                                                             ",{}]],"13":[["  #compile                                                                                                                         ",{}]],"14":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"15":[["    removes a break statement from the end",{"fg":2}],["                                                                                         ",{}]],"17":[["Y2R::AST::YCP::DefBlock                                                                                                            ",{}]],"20":[["                                                                                                                                   ",{}]],"21":[["Y2R::AST::YCP::Do                                                                                                                  ",{}]],"22":[["  #compile                                                                                                                         ",{}]],"23":[["    returns correct AST node for do statements without do",{"fg":2}],["                                                                          ",{}]],"24":[["    returns correct AST node for do statements with do",{"fg":2}],["                                                                             ",{}]],"26":[["Y2R::AST::YCP::Entry                                                                                                               ",{}]],"28":[["    for qualified entries                                                                                                          ",{}]],"29":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"30":[["    for unqualified entries                                                                                                        ",{}]],"31":[["      in global context that refer to global variables                                                                             ",{}]],"32":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"33":[["      in local context that refer to global variables                                                                              ",{}]],"34":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"35":[["      in local context that refer to local variables                                                                               ",{}]],"36":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"37":[["      in nested local context that refer to inner variables                                                                        ",{}]],"38":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"39":[["  #compile_as_ref                                                                                                                  ",{}]],"40":[["    for qualified entries                                                                                                          ",{}]],"41":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"42":[["    for unqualified entries                                                                                                        ",{}]],"43":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"44":[["                                                                                                                                   ",{}]],"45":[["Y2R::AST::YCP::FileBlock                                                                                                           ",{}]],"46":[["  #compile                                                                                                                         ",{}]],"47":[["    returns correct AST node for empty blocks",{"fg":2}],["                                                                                      ",{}]],"48":[["    returns correct AST node for blocks with statements",{"fg":2}],["                                                                            ",{}]],"49":[["    returns correct AST node for blocks with function definitions",{"fg":2}],["                                                                  ",{}]],"50":[["                                                                                                                                   ",{}]],"51":[["Y2R::AST::YCP::Filename                                                                                                            ",{}]],"52":[["  #compile                                                                                                                         ",{}]]}}],[0.014213,{"lines":{"0":[["    returns correct AST node for path constants",{"fg":2}],["                                                                                    ",{}]],"1":[["                                                                                                                                   ",{}]],"2":[["Y2R::AST::YCP::Continue                                                                                                            ",{}]],"3":[["  #compile                                                                                                                         ",{}]],"4":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"5":[["                                                                                                                                   ",{}]],"6":[["Y2R::AST::YCP::Default                                                                                                             ",{}]],"7":[["  #compile                                                                                                                         ",{}]],"8":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"9":[["    removes a break statement from the end",{"fg":2}],["                                                                                         ",{}]],"10":[["                                                                                                                                   ",{}]],"11":[["Y2R::AST::YCP::DefBlock                                                                                                            ",{}]],"12":[["  #compile                                                                                                                         ",{}]],"13":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"14":[["                                                                                                                                   ",{}]],"15":[["Y2R::AST::YCP::Do                                                                                                                  ",{}]],"16":[["  #compile                                                                                                                         ",{}]],"17":[["    returns correct AST node for do statements without do",{"fg":2}],["                                                                          ",{}]],"18":[["    returns correct AST node for do statements with do",{"fg":2}],["                                                                             ",{}]],"19":[["                                                                                                                                   ",{}]],"20":[["Y2R::AST::YCP::Entry                                                                                                               ",{}]],"21":[["  #compile                                                                                                                         ",{}]],"22":[["    for qualified entries                                                                                                          ",{}]],"23":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"24":[["    for unqualified entries                                                                                                        ",{}]],"25":[["      in global context that refer to global variables                                                                             ",{}]],"26":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"27":[["      in local context that refer to global variables                                                                              ",{}]],"28":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"29":[["      in local context that refer to local variables                                                                               ",{}]],"30":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"31":[["      in nested local context that refer to inner variables                                                                        ",{}]],"33":[["  #compile_as_ref                                                                                                                  ",{}]],"34":[["    for qualified entries                                                                                                          ",{}]],"35":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"36":[["    for unqualified entries                                                                                                        ",{}]],"37":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"38":[["                                                                                                                                   ",{}]],"39":[["Y2R::AST::YCP::FileBlock                                                                                                           ",{}]],"40":[["  #compile                                                                                                                         ",{}]],"41":[["    returns correct AST node for empty blocks",{"fg":2}],["                                                                                      ",{}]],"42":[["    returns correct AST node for blocks with statements",{"fg":2}],["                                                                            ",{}]],"43":[["    returns correct AST node for blocks with function definitions",{"fg":2}],["                                                                  ",{}]],"45":[["Y2R::AST::YCP::Filename                                                                                                            ",{}]],"47":[["    returns nil",{"fg":2}],["                                                                                                                    ",{}]],"48":[["                                                                                                                                   ",{}]],"49":[["Y2R::AST::YCP::FunDef                                                                                                              ",{}]],"50":[["  #compile                                                                                                                         ",{}]],"51":[["    for toplevel function definitions                                                                                              ",{}]],"52":[["      returns correct AST node for function definitions without argument",{"fg":2}],["                                                           ",{}]]}}],[0.015103,{"lines":{"0":[["Y2R::AST::YCP::Continue                                                                                                            ",{}]],"1":[["  #compile                                                                                                                         ",{}]],"2":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"3":[["                                                                                                                                   ",{}]],"4":[["Y2R::AST::YCP::Default                                                                                                             ",{}]],"5":[["  #compile                                                                                                                         ",{}]],"6":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"7":[["    removes a break statement from the end",{"fg":2}],["                                                                                         ",{}]],"8":[["                                                                                                                                   ",{}]],"9":[["Y2R::AST::YCP::DefBlock                                                                                                            ",{}]],"10":[["  #compile                                                                                                                         ",{}]],"11":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"12":[["                                                                                                                                   ",{}]],"13":[["Y2R::AST::YCP::Do                                                                                                                  ",{}]],"14":[["  #compile                                                                                                                         ",{}]],"15":[["    returns correct AST node for do statements without do",{"fg":2}],["                                                                          ",{}]],"16":[["    returns correct AST node for do statements with do",{"fg":2}],["                                                                             ",{}]],"17":[["                                                                                                                                   ",{}]],"18":[["Y2R::AST::YCP::Entry                                                                                                               ",{}]],"19":[["  #compile                                                                                                                         ",{}]],"20":[["    for qualified entries                                                                                                          ",{}]],"21":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"22":[["    for unqualified entries                                                                                                        ",{}]],"23":[["      in global context that refer to global variables                                                                             ",{}]],"24":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"25":[["      in local context that refer to global variables                                                                              ",{}]],"27":[["      in local context that refer to local variables                                                                               ",{}]],"29":[["      in nested local context that refer to inner variables                                                                        ",{}]],"31":[["  #compile_as_ref                                                                                                                  ",{}]],"32":[["    for qualified entries                                                                                                          ",{}]],"33":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"34":[["    for unqualified entries                                                                                                        ",{}]],"36":[["                                                                                                                                   ",{}]],"37":[["Y2R::AST::YCP::FileBlock                                                                                                           ",{}]],"38":[["  #compile                                                                                                                         ",{}]],"39":[["    returns correct AST node for empty blocks",{"fg":2}],["                                                                                      ",{}]],"40":[["    returns correct AST node for blocks with statements",{"fg":2}],["                                                                            ",{}]],"41":[["    returns correct AST node for blocks with function definitions",{"fg":2}],["                                                                  ",{}]],"42":[["                                                                                                                                   ",{}]],"43":[["Y2R::AST::YCP::Filename                                                                                                            ",{}]],"44":[["  #compile                                                                                                                         ",{}]],"45":[["    returns nil",{"fg":2}],["                                                                                                                    ",{}]],"46":[["                                                                                                                                   ",{}]],"47":[["Y2R::AST::YCP::FunDef                                                                                                              ",{}]],"48":[["  #compile                                                                                                                         ",{}]],"49":[["    for toplevel function definitions                                                                                              ",{}]],"50":[["      returns correct AST node for function definitions without argument",{"fg":2}],["                                                           ",{}]],"51":[["      returns correct AST node for function definitions with arguments",{"fg":2}],["                                                             ",{}]],"52":[["    for nested function definitions                                                                                                ",{}]]}}],[0.005591,{"lines":{"0":[["  #compile                                                                                                                         ",{}]],"1":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"2":[["                                                                                                                                   ",{}]],"3":[["Y2R::AST::YCP::Default                                                                                                             ",{}]],"4":[["  #compile                                                                                                                         ",{}]],"5":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"6":[["    removes a break statement from the end",{"fg":2}],["                                                                                         ",{}]],"7":[["                                                                                                                                   ",{}]],"8":[["Y2R::AST::YCP::DefBlock                                                                                                            ",{}]],"9":[["  #compile                                                                                                                         ",{}]],"10":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"11":[["                                                                                                                                   ",{}]],"12":[["Y2R::AST::YCP::Do                                                                                                                  ",{}]],"13":[["  #compile                                                                                                                         ",{}]],"14":[["    returns correct AST node for do statements without do",{"fg":2}],["                                                                          ",{}]],"15":[["    returns correct AST node for do statements with do",{"fg":2}],["                                                                             ",{}]],"16":[["                                                                                                                                   ",{}]],"17":[["Y2R::AST::YCP::Entry                                                                                                               ",{}]],"18":[["  #compile                                                                                                                         ",{}]],"19":[["    for qualified entries                                                                                                          ",{}]],"20":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"21":[["    for unqualified entries                                                                                                        ",{}]],"22":[["      in global context that refer to global variables                                                                             ",{}]],"23":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"24":[["      in local context that refer to global variables                                                                              ",{}]],"25":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"26":[["      in local context that refer to local variables                                                                               ",{}]],"27":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"28":[["      in nested local context that refer to inner variables                                                                        ",{}]],"29":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"30":[["  #compile_as_ref                                                                                                                  ",{}]],"31":[["    for qualified entries                                                                                                          ",{}]],"32":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"33":[["    for unqualified entries                                                                                                        ",{}]],"34":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"35":[["                                                                                                                                   ",{}]],"36":[["Y2R::AST::YCP::FileBlock                                                                                                           ",{}]],"37":[["  #compile                                                                                                                         ",{}]],"38":[["    returns correct AST node for empty blocks",{"fg":2}],["                                                                                      ",{}]],"39":[["    returns correct AST node for blocks with statements",{"fg":2}],["                                                                            ",{}]],"40":[["    returns correct AST node for blocks with function definitions",{"fg":2}],["                                                                  ",{}]],"41":[["                                                                                                                                   ",{}]],"42":[["Y2R::AST::YCP::Filename                                                                                                            ",{}]],"43":[["  #compile                                                                                                                         ",{}]],"44":[["    returns nil",{"fg":2}],["                                                                                                                    ",{}]],"45":[["                                                                                                                                   ",{}]],"46":[["Y2R::AST::YCP::FunDef                                                                                                              ",{}]],"47":[["  #compile                                                                                                                         ",{}]],"48":[["    for toplevel function definitions                                                                                              ",{}]],"49":[["      returns correct AST node for function definitions without argument",{"fg":2}],["                                                           ",{}]],"50":[["      returns correct AST node for function definitions with arguments",{"fg":2}],["                                                             ",{}]],"51":[["    for nested function definitions                                                                                                ",{}]],"52":[["      returns correct AST node for function definitions without argument",{"fg":2}],["                                                           ",{}]]}}],[0.081748,{"lines":{"0":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"1":[["                                                                                                                                   ",{}]],"2":[["Y2R::AST::YCP::Default                                                                                                             ",{}]],"3":[["  #compile                                                                                                                         ",{}]],"4":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"5":[["    removes a break statement from the end",{"fg":2}],["                                                                                         ",{}]],"6":[["                                                                                                                                   ",{}]],"7":[["Y2R::AST::YCP::DefBlock                                                                                                            ",{}]],"8":[["  #compile                                                                                                                         ",{}]],"9":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"10":[["                                                                                                                                   ",{}]],"11":[["Y2R::AST::YCP::Do                                                                                                                  ",{}]],"12":[["  #compile                                                                                                                         ",{}]],"13":[["    returns correct AST node for do statements without do",{"fg":2}],["                                                                          ",{}]],"14":[["    returns correct AST node for do statements with do",{"fg":2}],["                                                                             ",{}]],"15":[["                                                                                                                                   ",{}]],"16":[["Y2R::AST::YCP::Entry                                                                                                               ",{}]],"17":[["  #compile                                                                                                                         ",{}]],"18":[["    for qualified entries                                                                                                          ",{}]],"19":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"20":[["    for unqualified entries                                                                                                        ",{}]],"21":[["      in global context that refer to global variables                                                                             ",{}]],"22":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"23":[["      in local context that refer to global variables                                                                              ",{}]],"24":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"25":[["      in local context that refer to local variables                                                                               ",{}]],"26":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"27":[["      in nested local context that refer to inner variables                                                                        ",{}]],"28":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"29":[["  #compile_as_ref                                                                                                                  ",{}]],"30":[["    for qualified entries                                                                                                          ",{}]],"31":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"32":[["    for unqualified entries                                                                                                        ",{}]],"33":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"34":[["                                                                                                                                   ",{}]],"35":[["Y2R::AST::YCP::FileBlock                                                                                                           ",{}]],"36":[["  #compile                                                                                                                         ",{}]],"37":[["    returns correct AST node for empty blocks",{"fg":2}],["                                                                                      ",{}]],"38":[["    returns correct AST node for blocks with statements",{"fg":2}],["                                                                            ",{}]],"39":[["    returns correct AST node for blocks with function definitions",{"fg":2}],["                                                                  ",{}]],"40":[["                                                                                                                                   ",{}]],"41":[["Y2R::AST::YCP::Filename                                                                                                            ",{}]],"42":[["  #compile                                                                                                                         ",{}]],"43":[["    returns nil",{"fg":2}],["                                                                                                                    ",{}]],"44":[["                                                                                                                                   ",{}]],"45":[["Y2R::AST::YCP::FunDef                                                                                                              ",{}]],"46":[["  #compile                                                                                                                         ",{}]],"47":[["    for toplevel function definitions                                                                                              ",{}]],"48":[["      returns correct AST node for function definitions without argument",{"fg":2}],["                                                           ",{}]],"49":[["      returns correct AST node for function definitions with arguments",{"fg":2}],["                                                             ",{}]],"50":[["    for nested function definitions                                                                                                ",{}]],"51":[["      returns correct AST node for function definitions without argument",{"fg":2}],["                                                           ",{}]],"52":[["      returns correct AST node for function definitions with arguments",{"fg":2}],["                                                             ",{}]]}}],[0.013487,{"lines":{"0":[["  #compile                                                                                                                         ",{}]],"1":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"2":[["    removes a break statement from the end",{"fg":2}],["                                                                                         ",{}]],"3":[["                                                                                                                                   ",{}]],"4":[["Y2R::AST::YCP::DefBlock                                                                                                            ",{}]],"5":[["  #compile                                                                                                                         ",{}]],"6":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"7":[["                                                                                                                                   ",{}]],"8":[["Y2R::AST::YCP::Do                                                                                                                  ",{}]],"9":[["  #compile                                                                                                                         ",{}]],"10":[["    returns correct AST node for do statements without do",{"fg":2}],["                                                                          ",{}]],"11":[["    returns correct AST node for do statements with do",{"fg":2}],["                                                                             ",{}]],"12":[["                                                                                                                                   ",{}]],"13":[["Y2R::AST::YCP::Entry                                                                                                               ",{}]],"14":[["  #compile                                                                                                                         ",{}]],"15":[["    for qualified entries                                                                                                          ",{}]],"16":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"17":[["    for unqualified entries                                                                                                        ",{}]],"18":[["      in global context that refer to global variables                                                                             ",{}]],"19":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"20":[["      in local context that refer to global variables                                                                              ",{}]],"21":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"22":[["      in local context that refer to local variables                                                                               ",{}]],"23":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"24":[["      in nested local context that refer to inner variables                                                                        ",{}]],"25":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"26":[["  #compile_as_ref                                                                                                                  ",{}]],"27":[["    for qualified entries                                                                                                          ",{}]],"28":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"29":[["    for unqualified entries                                                                                                        ",{}]],"30":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"31":[["                                                                                                                                   ",{}]],"32":[["Y2R::AST::YCP::FileBlock                                                                                                           ",{}]],"33":[["  #compile                                                                                                                         ",{}]],"34":[["    returns correct AST node for empty blocks",{"fg":2}],["                                                                                      ",{}]],"35":[["    returns correct AST node for blocks with statements",{"fg":2}],["                                                                            ",{}]],"36":[["    returns correct AST node for blocks with function definitions",{"fg":2}],["                                                                  ",{}]],"37":[["                                                                                                                                   ",{}]],"38":[["Y2R::AST::YCP::Filename                                                                                                            ",{}]],"39":[["  #compile                                                                                                                         ",{}]],"40":[["    returns nil",{"fg":2}],["                                                                                                                    ",{}]],"41":[["                                                                                                                                   ",{}]],"42":[["Y2R::AST::YCP::FunDef                                                                                                              ",{}]],"43":[["  #compile                                                                                                                         ",{}]],"44":[["    for toplevel function definitions                                                                                              ",{}]],"45":[["      returns correct AST node for function definitions without argument",{"fg":2}],["                                                           ",{}]],"46":[["      returns correct AST node for function definitions with arguments",{"fg":2}],["                                                             ",{}]],"47":[["    for nested function definitions                                                                                                ",{}]],"50":[["      in local context                                                                                                             ",{}]],"51":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"52":[["      in nested local context                                                                                                      ",{}]]}}],[0.016372,{"lines":{"0":[["Y2R::AST::YCP::DefBlock                                                                                                            ",{}]],"1":[["  #compile                                                                                                                         ",{}]],"2":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"4":[["Y2R::AST::YCP::Do                                                                                                                  ",{}]],"6":[["    returns correct AST node for do statements without do",{"fg":2}],["                                                                          ",{}]],"7":[["    returns correct AST node for do statements with do",{"fg":2}],["                                                                             ",{}]],"8":[["                                                                                                                                   ",{}]],"9":[["Y2R::AST::YCP::Entry                                                                                                               ",{}]],"10":[["  #compile                                                                                                                         ",{}]],"11":[["    for qualified entries                                                                                                          ",{}]],"12":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"13":[["    for unqualified entries                                                                                                        ",{}]],"14":[["      in global context that refer to global variables                                                                             ",{}]],"15":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"16":[["      in local context that refer to global variables                                                                              ",{}]],"17":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"18":[["      in local context that refer to local variables                                                                               ",{}]],"20":[["      in nested local context that refer to inner variables                                                                        ",{}]],"22":[["  #compile_as_ref                                                                                                                  ",{}]],"23":[["    for qualified entries                                                                                                          ",{}]],"24":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"25":[["    for unqualified entries                                                                                                        ",{}]],"26":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"27":[["                                                                                                                                   ",{}]],"28":[["Y2R::AST::YCP::FileBlock                                                                                                           ",{}]],"29":[["  #compile                                                                                                                         ",{}]],"30":[["    returns correct AST node for empty blocks",{"fg":2}],["                                                                                      ",{}]],"31":[["    returns correct AST node for blocks with statements",{"fg":2}],["                                                                            ",{}]],"32":[["    returns correct AST node for blocks with function definitions",{"fg":2}],["                                                                  ",{}]],"33":[["                                                                                                                                   ",{}]],"34":[["Y2R::AST::YCP::Filename                                                                                                            ",{}]],"35":[["  #compile                                                                                                                         ",{}]],"36":[["    returns nil",{"fg":2}],["                                                                                                                    ",{}]],"38":[["Y2R::AST::YCP::FunDef                                                                                                              ",{}]],"40":[["    for toplevel function definitions                                                                                              ",{}]],"41":[["      returns correct AST node for function definitions without argument",{"fg":2}],["                                                           ",{}]],"42":[["      returns correct AST node for function definitions with arguments",{"fg":2}],["                                                             ",{}]],"43":[["    for nested function definitions                                                                                                ",{}]],"44":[["      returns correct AST node for function definitions without argument",{"fg":2}],["                                                           ",{}]],"45":[["      returns correct AST node for function definitions with arguments",{"fg":2}],["                                                             ",{}]],"46":[["      in local context                                                                                                             ",{}]],"47":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"48":[["      in nested local context                                                                                                      ",{}]],"49":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"50":[["                                                                                                                                   ",{}]],"51":[["Y2R::AST::YCP::If                                                                                                                  ",{}]],"52":[["  #to_ruby                                                                                                                         ",{}]]}}],[0.015875,{"lines":{"0":[["                                                                                                                                   ",{}]],"1":[["Y2R::AST::YCP::Do                                                                                                                  ",{}]],"2":[["  #compile                                                                                                                         ",{}]],"3":[["    returns correct AST node for do statements without do",{"fg":2}],["                                                                          ",{}]],"4":[["    returns correct AST node for do statements with do",{"fg":2}],["                                                                             ",{}]],"5":[["                                                                                                                                   ",{}]],"6":[["Y2R::AST::YCP::Entry                                                                                                               ",{}]],"7":[["  #compile                                                                                                                         ",{}]],"8":[["    for qualified entries                                                                                                          ",{}]],"9":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"10":[["    for unqualified entries                                                                                                        ",{}]],"11":[["      in global context that refer to global variables                                                                             ",{}]],"12":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"13":[["      in local context that refer to global variables                                                                              ",{}]],"14":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"15":[["      in local context that refer to local variables                                                                               ",{}]],"16":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"17":[["      in nested local context that refer to inner variables                                                                        ",{}]],"18":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"19":[["  #compile_as_ref                                                                                                                  ",{}]],"20":[["    for qualified entries                                                                                                          ",{}]],"21":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"22":[["    for unqualified entries                                                                                                        ",{}]],"23":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"24":[["                                                                                                                                   ",{}]],"25":[["Y2R::AST::YCP::FileBlock                                                                                                           ",{}]],"26":[["  #compile                                                                                                                         ",{}]],"27":[["    returns correct AST node for empty blocks",{"fg":2}],["                                                                                      ",{}]],"28":[["    returns correct AST node for blocks with statements",{"fg":2}],["                                                                            ",{}]],"29":[["    returns correct AST node for blocks with function definitions",{"fg":2}],["                                                                  ",{}]],"30":[["                                                                                                                                   ",{}]],"31":[["Y2R::AST::YCP::Filename                                                                                                            ",{}]],"32":[["  #compile                                                                                                                         ",{}]],"33":[["    returns nil",{"fg":2}],["                                                                                                                    ",{}]],"34":[["                                                                                                                                   ",{}]],"35":[["Y2R::AST::YCP::FunDef                                                                                                              ",{}]],"36":[["  #compile                                                                                                                         ",{}]],"37":[["    for toplevel function definitions                                                                                              ",{}]],"38":[["      returns correct AST node for function definitions without argument",{"fg":2}],["                                                           ",{}]],"39":[["      returns correct AST node for function definitions with arguments",{"fg":2}],["                                                             ",{}]],"40":[["    for nested function definitions                                                                                                ",{}]],"43":[["      in local context                                                                                                             ",{}]],"44":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"45":[["      in nested local context                                                                                                      ",{}]],"46":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"47":[["                                                                                                                                   ",{}]],"48":[["Y2R::AST::YCP::If                                                                                                                  ",{}]],"49":[["  #to_ruby                                                                                                                         ",{}]],"50":[["    returns correct AST node for if statements without then and else",{"fg":2}],["                                                               ",{}]],"51":[["    returns correct AST node for if statements with then but without else",{"fg":2}],["                                                          ",{}]],"52":[["    returns correct AST node for if statements without then but with else",{"fg":2}],["                                                          ",{}]]}}],[0.015382,{"lines":{"1":[["Y2R::AST::YCP::Entry                                                                                                               ",{}]],"3":[["    for qualified entries                                                                                                          ",{}]],"4":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"5":[["    for unqualified entries                                                                                                        ",{}]],"6":[["      in global context that refer to global variables                                                                             ",{}]],"7":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"8":[["      in local context that refer to global variables                                                                              ",{}]],"9":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"10":[["      in local context that refer to local variables                                                                               ",{}]],"11":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"12":[["      in nested local context that refer to inner variables                                                                        ",{}]],"13":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"14":[["  #compile_as_ref                                                                                                                  ",{}]],"15":[["    for qualified entries                                                                                                          ",{}]],"16":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"17":[["    for unqualified entries                                                                                                        ",{}]],"18":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"19":[["                                                                                                                                   ",{}]],"20":[["Y2R::AST::YCP::FileBlock                                                                                                           ",{}]],"21":[["  #compile                                                                                                                         ",{}]],"22":[["    returns correct AST node for empty blocks",{"fg":2}],["                                                                                      ",{}]],"23":[["    returns correct AST node for blocks with statements",{"fg":2}],["                                                                            ",{}]],"24":[["    returns correct AST node for blocks with function definitions",{"fg":2}],["                                                                  ",{}]],"25":[["                                                                                                                                   ",{}]],"26":[["Y2R::AST::YCP::Filename                                                                                                            ",{}]],"27":[["  #compile                                                                                                                         ",{}]],"28":[["    returns nil",{"fg":2}],["                                                                                                                    ",{}]],"29":[["                                                                                                                                   ",{}]],"30":[["Y2R::AST::YCP::FunDef                                                                                                              ",{}]],"31":[["  #compile                                                                                                                         ",{}]],"32":[["    for toplevel function definitions                                                                                              ",{}]],"33":[["      returns correct AST node for function definitions without argument",{"fg":2}],["                                                           ",{}]],"34":[["      returns correct AST node for function definitions with arguments",{"fg":2}],["                                                             ",{}]],"35":[["    for nested function definitions                                                                                                ",{}]],"36":[["      returns correct AST node for function definitions without argument",{"fg":2}],["                                                           ",{}]],"37":[["      returns correct AST node for function definitions with arguments",{"fg":2}],["                                                             ",{}]],"38":[["      in local context                                                                                                             ",{}]],"39":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"40":[["      in nested local context                                                                                                      ",{}]],"41":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"42":[["                                                                                                                                   ",{}]],"43":[["Y2R::AST::YCP::If                                                                                                                  ",{}]],"44":[["  #to_ruby                                                                                                                         ",{}]],"45":[["    returns correct AST node for if statements without then and else",{"fg":2}],["                                                               ",{}]],"46":[["    returns correct AST node for if statements with then but without else",{"fg":2}],["                                                          ",{}]],"47":[["    returns correct AST node for if statements without then but with else",{"fg":2}],["                                                          ",{}]],"48":[["    returns correct AST node for if statements with then and else",{"fg":2}],["                                                                  ",{}]],"49":[["    returns correct AST node for if statements with else if",{"fg":2}],["                                                                        ",{}]],"50":[["                                                                                                                                   ",{}]],"51":[["Y2R::AST::YCP::Import                                                                                                              ",{}]],"52":[["  #compile                                                                                                                         ",{}]]}}],[0.015825,{"lines":{"0":[["      in global context that refer to global variables                                                                             ",{}]],"1":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"2":[["      in local context that refer to global variables                                                                              ",{}]],"3":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"4":[["      in local context that refer to local variables                                                                               ",{}]],"5":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"6":[["      in nested local context that refer to inner variables                                                                        ",{}]],"8":[["  #compile_as_ref                                                                                                                  ",{}]],"9":[["    for qualified entries                                                                                                          ",{}]],"10":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"11":[["    for unqualified entries                                                                                                        ",{}]],"12":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"13":[["                                                                                                                                   ",{}]],"14":[["Y2R::AST::YCP::FileBlock                                                                                                           ",{}]],"15":[["  #compile                                                                                                                         ",{}]],"16":[["    returns correct AST node for empty blocks",{"fg":2}],["                                                                                      ",{}]],"17":[["    returns correct AST node for blocks with statements",{"fg":2}],["                                                                            ",{}]],"18":[["    returns correct AST node for blocks with function definitions",{"fg":2}],["                                                                  ",{}]],"20":[["Y2R::AST::YCP::Filename                                                                                                            ",{}]],"22":[["    returns nil",{"fg":2}],["                                                                                                                    ",{}]],"23":[["                                                                                                                                   ",{}]],"24":[["Y2R::AST::YCP::FunDef                                                                                                              ",{}]],"25":[["  #compile                                                                                                                         ",{}]],"26":[["    for toplevel function definitions                                                                                              ",{}]],"27":[["      returns correct AST node for function definitions without argument",{"fg":2}],["                                                           ",{}]],"28":[["      returns correct AST node for function definitions with arguments",{"fg":2}],["                                                             ",{}]],"29":[["    for nested function definitions                                                                                                ",{}]],"30":[["      returns correct AST node for function definitions without argument",{"fg":2}],["                                                           ",{}]],"31":[["      returns correct AST node for function definitions with arguments",{"fg":2}],["                                                             ",{}]],"32":[["      in local context                                                                                                             ",{}]],"33":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"34":[["      in nested local context                                                                                                      ",{}]],"35":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"36":[["                                                                                                                                   ",{}]],"37":[["Y2R::AST::YCP::If                                                                                                                  ",{}]],"38":[["  #to_ruby                                                                                                                         ",{}]],"39":[["    returns correct AST node for if statements without then and else",{"fg":2}],["                                                               ",{}]],"40":[["    returns correct AST node for if statements with then but without else",{"fg":2}],["                                                          ",{}]],"41":[["    returns correct AST node for if statements without then but with else",{"fg":2}],["                                                          ",{}]],"42":[["    returns correct AST node for if statements with then and else",{"fg":2}],["                                                                  ",{}]],"43":[["    returns correct AST node for if statements with else if",{"fg":2}],["                                                                        ",{}]],"44":[["                                                                                                                                   ",{}]],"45":[["Y2R::AST::YCP::Import                                                                                                              ",{}]],"46":[["  #compile                                                                                                                         ",{}]],"47":[["    returns correct AST node for regular imports",{"fg":2}],["                                                                                   ",{}]],"48":[["    returns nil for SCR imports",{"fg":2}],["                                                                                                    ",{}]],"49":[["    returns nil for WFM imports",{"fg":2}],["                                                                                                    ",{}]],"51":[["Y2R::AST::YCP::Include                                                                                                             ",{}]]}}],[0.01602,{"lines":{"0":[["  #compile_as_ref                                                                                                                  ",{}]],"1":[["    for qualified entries                                                                                                          ",{}]],"2":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"3":[["    for unqualified entries                                                                                                        ",{}]],"4":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"5":[["                                                                                                                                   ",{}]],"6":[["Y2R::AST::YCP::FileBlock                                                                                                           ",{}]],"7":[["  #compile                                                                                                                         ",{}]],"8":[["    returns correct AST node for empty blocks",{"fg":2}],["                                                                                      ",{}]],"9":[["    returns correct AST node for blocks with statements",{"fg":2}],["                                                                            ",{}]],"10":[["    returns correct AST node for blocks with function definitions",{"fg":2}],["                                                                  ",{}]],"11":[["                                                                                                                                   ",{}]],"12":[["Y2R::AST::YCP::Filename                                                                                                            ",{}]],"13":[["  #compile                                                                                                                         ",{}]],"14":[["    returns nil",{"fg":2}],["                                                                                                                    ",{}]],"15":[["                                                                                                                                   ",{}]],"16":[["Y2R::AST::YCP::FunDef                                                                                                              ",{}]],"17":[["  #compile                                                                                                                         ",{}]],"18":[["    for toplevel function definitions                                                                                              ",{}]],"19":[["      returns correct AST node for function definitions without argument",{"fg":2}],["                                                           ",{}]],"20":[["      returns correct AST node for function definitions with arguments",{"fg":2}],["                                                             ",{}]],"21":[["    for nested function definitions                                                                                                ",{}]],"22":[["      returns correct AST node for function definitions without argument",{"fg":2}],["                                                           ",{}]],"23":[["      returns correct AST node for function definitions with arguments",{"fg":2}],["                                                             ",{}]],"24":[["      in local context                                                                                                             ",{}]],"25":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"26":[["      in nested local context                                                                                                      ",{}]],"27":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"28":[["                                                                                                                                   ",{}]],"29":[["Y2R::AST::YCP::If                                                                                                                  ",{}]],"30":[["  #to_ruby                                                                                                                         ",{}]],"31":[["    returns correct AST node for if statements without then and else",{"fg":2}],["                                                               ",{}]],"32":[["    returns correct AST node for if statements with then but without else",{"fg":2}],["                                                          ",{}]],"33":[["    returns correct AST node for if statements without then but with else",{"fg":2}],["                                                          ",{}]],"34":[["    returns correct AST node for if statements with then and else",{"fg":2}],["                                                                  ",{}]],"35":[["    returns correct AST node for if statements with else if",{"fg":2}],["                                                                        ",{}]],"37":[["Y2R::AST::YCP::Import                                                                                                              ",{}]],"38":[["  #compile                                                                                                                         ",{}]],"39":[["    returns correct AST node for regular imports",{"fg":2}],["                                                                                   ",{}]],"40":[["    returns nil for SCR imports",{"fg":2}],["                                                                                                    ",{}]],"41":[["    returns nil for WFM imports",{"fg":2}],["                                                                                                    ",{}]],"42":[["                                                                                                                                   ",{}]],"43":[["Y2R::AST::YCP::Include                                                                                                             ",{}]],"44":[["  #compile                                                                                                                         ",{}]],"45":[["    raises an exception for non-toplevel includes",{"fg":2}],["                                                                                  ",{}]],"46":[["    when compiling as include file                                                                                                 ",{}]],"47":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"48":[["    when not compiling as include file                                                                                             ",{}]],"49":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"51":[["Y2R::AST::YCP::IncludeBlock                                                                                                        ",{}]]}}],[0.011978,{"lines":{"0":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"1":[["    for unqualified entries                                                                                                        ",{}]],"3":[["                                                                                                                                   ",{}]],"4":[["Y2R::AST::YCP::FileBlock                                                                                                           ",{}]],"5":[["  #compile                                                                                                                         ",{}]],"6":[["    returns correct AST node for empty blocks",{"fg":2}],["                                                                                      ",{}]],"7":[["    returns correct AST node for blocks with statements",{"fg":2}],["                                                                            ",{}]],"8":[["    returns correct AST node for blocks with function definitions",{"fg":2}],["                                                                  ",{}]],"9":[["                                                                                                                                   ",{}]],"10":[["Y2R::AST::YCP::Filename                                                                                                            ",{}]],"11":[["  #compile                                                                                                                         ",{}]],"12":[["    returns nil",{"fg":2}],["                                                                                                                    ",{}]],"13":[["                                                                                                                                   ",{}]],"14":[["Y2R::AST::YCP::FunDef                                                                                                              ",{}]],"15":[["  #compile                                                                                                                         ",{}]],"16":[["    for toplevel function definitions                                                                                              ",{}]],"17":[["      returns correct AST node for function definitions without argument",{"fg":2}],["                                                           ",{}]],"18":[["      returns correct AST node for function definitions with arguments",{"fg":2}],["                                                             ",{}]],"19":[["    for nested function definitions                                                                                                ",{}]],"20":[["      returns correct AST node for function definitions without argument",{"fg":2}],["                                                           ",{}]],"21":[["      returns correct AST node for function definitions with arguments",{"fg":2}],["                                                             ",{}]],"22":[["      in local context                                                                                                             ",{}]],"23":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"24":[["      in nested local context                                                                                                      ",{}]],"26":[["                                                                                                                                   ",{}]],"27":[["Y2R::AST::YCP::If                                                                                                                  ",{}]],"28":[["  #to_ruby                                                                                                                         ",{}]],"29":[["    returns correct AST node for if statements without then and else",{"fg":2}],["                                                               ",{}]],"30":[["    returns correct AST node for if statements with then but without else",{"fg":2}],["                                                          ",{}]],"31":[["    returns correct AST node for if statements without then but with else",{"fg":2}],["                                                          ",{}]],"32":[["    returns correct AST node for if statements with then and else",{"fg":2}],["                                                                  ",{}]],"33":[["    returns correct AST node for if statements with else if",{"fg":2}],["                                                                        ",{}]],"34":[["                                                                                                                                   ",{}]],"35":[["Y2R::AST::YCP::Import                                                                                                              ",{}]],"36":[["  #compile                                                                                                                         ",{}]],"37":[["    returns correct AST node for regular imports",{"fg":2}],["                                                                                   ",{}]],"38":[["    returns nil for SCR imports",{"fg":2}],["                                                                                                    ",{}]],"39":[["    returns nil for WFM imports",{"fg":2}],["                                                                                                    ",{}]],"40":[["                                                                                                                                   ",{}]],"41":[["Y2R::AST::YCP::Include                                                                                                             ",{}]],"42":[["  #compile                                                                                                                         ",{}]],"43":[["    raises an exception for non-toplevel includes",{"fg":2}],["                                                                                  ",{}]],"44":[["    when compiling as include file                                                                                                 ",{}]],"45":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"46":[["    when not compiling as include file                                                                                             ",{}]],"48":[["                                                                                                                                   ",{}]],"49":[["Y2R::AST::YCP::IncludeBlock                                                                                                        ",{}]],"50":[["  #compile                                                                                                                         ",{}]],"51":[["    returns correct AST node for empty blocks",{"fg":2}],["                                                                                      ",{}]],"52":[["    returns correct AST node for blocks with statements",{"fg":2}],["                                                                            ",{}]]}}],[0.013942,{"lines":{"0":[["    returns correct AST node for blocks with function definitions",{"fg":2}],["                                                                  ",{}]],"1":[["                                                                                                                                   ",{}]],"2":[["Y2R::AST::YCP::Filename                                                                                                            ",{}]],"3":[["  #compile                                                                                                                         ",{}]],"4":[["    returns nil",{"fg":2}],["                                                                                                                    ",{}]],"5":[["                                                                                                                                   ",{}]],"6":[["Y2R::AST::YCP::FunDef                                                                                                              ",{}]],"7":[["  #compile                                                                                                                         ",{}]],"8":[["    for toplevel function definitions                                                                                              ",{}]],"9":[["      returns correct AST node for function definitions without argument",{"fg":2}],["                                                           ",{}]],"10":[["      returns correct AST node for function definitions with arguments",{"fg":2}],["                                                             ",{}]],"11":[["    for nested function definitions                                                                                                ",{}]],"12":[["      returns correct AST node for function definitions without argument",{"fg":2}],["                                                           ",{}]],"13":[["      returns correct AST node for function definitions with arguments",{"fg":2}],["                                                             ",{}]],"14":[["      in local context                                                                                                             ",{}]],"15":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"16":[["      in nested local context                                                                                                      ",{}]],"17":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"18":[["                                                                                                                                   ",{}]],"19":[["Y2R::AST::YCP::If                                                                                                                  ",{}]],"20":[["  #to_ruby                                                                                                                         ",{}]],"21":[["    returns correct AST node for if statements without then and else",{"fg":2}],["                                                               ",{}]],"22":[["    returns correct AST node for if statements with then but without else",{"fg":2}],["                                                          ",{}]],"23":[["    returns correct AST node for if statements without then but with else",{"fg":2}],["                                                          ",{}]],"24":[["    returns correct AST node for if statements with then and else",{"fg":2}],["                                                                  ",{}]],"25":[["    returns correct AST node for if statements with else if",{"fg":2}],["                                                                        ",{}]],"27":[["Y2R::AST::YCP::Import                                                                                                              ",{}]],"28":[["  #compile                                                                                                                         ",{}]],"29":[["    returns correct AST node for regular imports",{"fg":2}],["                                                                                   ",{}]],"30":[["    returns nil for SCR imports",{"fg":2}],["                                                                                                    ",{}]],"31":[["    returns nil for WFM imports",{"fg":2}],["                                                                                                    ",{}]],"32":[["                                                                                                                                   ",{}]],"33":[["Y2R::AST::YCP::Include                                                                                                             ",{}]],"34":[["  #compile                                                                                                                         ",{}]],"35":[["    raises an exception for non-toplevel includes",{"fg":2}],["                                                                                  ",{}]],"36":[["    when compiling as include file                                                                                                 ",{}]],"37":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"38":[["    when not compiling as include file                                                                                             ",{}]],"39":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"41":[["Y2R::AST::YCP::IncludeBlock                                                                                                        ",{}]],"43":[["    returns correct AST node for empty blocks",{"fg":2}],["                                                                                      ",{}]],"44":[["    returns correct AST node for blocks with statements",{"fg":2}],["                                                                            ",{}]],"45":[["    returns correct AST node for blocks with function definitions",{"fg":2}],["                                                                  ",{}]],"46":[["                                                                                                                                   ",{}]],"47":[["Y2R::AST::YCP::List                                                                                                                ",{}]],"48":[["  #compile                                                                                                                         ",{}]],"49":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"50":[["                                                                                                                                   ",{}]],"51":[["Y2R::AST::YCP::Locale                                                                                                              ",{}]],"52":[["  #compile                                                                                                                         ",{}]]}}],[0.02165,{"lines":{"0":[["                                                                                                                                   ",{}]],"1":[["Y2R::AST::YCP::Filename                                                                                                            ",{}]],"2":[["  #compile                                                                                                                         ",{}]],"3":[["    returns nil",{"fg":2}],["                                                                                                                    ",{}]],"4":[["                                                                                                                                   ",{}]],"5":[["Y2R::AST::YCP::FunDef                                                                                                              ",{}]],"6":[["  #compile                                                                                                                         ",{}]],"7":[["    for toplevel function definitions                                                                                              ",{}]],"8":[["      returns correct AST node for function definitions without argument",{"fg":2}],["                                                           ",{}]],"9":[["      returns correct AST node for function definitions with arguments",{"fg":2}],["                                                             ",{}]],"10":[["    for nested function definitions                                                                                                ",{}]],"11":[["      returns correct AST node for function definitions without argument",{"fg":2}],["                                                           ",{}]],"12":[["      returns correct AST node for function definitions with arguments",{"fg":2}],["                                                             ",{}]],"13":[["      in local context                                                                                                             ",{}]],"14":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"15":[["      in nested local context                                                                                                      ",{}]],"16":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"17":[["                                                                                                                                   ",{}]],"18":[["Y2R::AST::YCP::If                                                                                                                  ",{}]],"19":[["  #to_ruby                                                                                                                         ",{}]],"20":[["    returns correct AST node for if statements without then and else",{"fg":2}],["                                                               ",{}]],"21":[["    returns correct AST node for if statements with then but without else",{"fg":2}],["                                                          ",{}]],"22":[["    returns correct AST node for if statements without then but with else",{"fg":2}],["                                                          ",{}]],"23":[["    returns correct AST node for if statements with then and else",{"fg":2}],["                                                                  ",{}]],"24":[["    returns correct AST node for if statements with else if",{"fg":2}],["                                                                        ",{}]],"25":[["                                                                                                                                   ",{}]],"26":[["Y2R::AST::YCP::Import                                                                                                              ",{}]],"27":[["  #compile                                                                                                                         ",{}]],"28":[["    returns correct AST node for regular imports",{"fg":2}],["                                                                                   ",{}]],"29":[["    returns nil for SCR imports",{"fg":2}],["                                                                                                    ",{}]],"30":[["    returns nil for WFM imports",{"fg":2}],["                                                                                                    ",{}]],"31":[["                                                                                                                                   ",{}]],"32":[["Y2R::AST::YCP::Include                                                                                                             ",{}]],"33":[["  #compile                                                                                                                         ",{}]],"34":[["    raises an exception for non-toplevel includes",{"fg":2}],["                                                                                  ",{}]],"35":[["    when compiling as include file                                                                                                 ",{}]],"36":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"37":[["    when not compiling as include file                                                                                             ",{}]],"38":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"39":[["                                                                                                                                   ",{}]],"40":[["Y2R::AST::YCP::IncludeBlock                                                                                                        ",{}]],"41":[["  #compile                                                                                                                         ",{}]],"42":[["    returns correct AST node for empty blocks",{"fg":2}],["                                                                                      ",{}]],"43":[["    returns correct AST node for blocks with statements",{"fg":2}],["                                                                            ",{}]],"44":[["    returns correct AST node for blocks with function definitions",{"fg":2}],["                                                                  ",{}]],"45":[["                                                                                                                                   ",{}]],"46":[["Y2R::AST::YCP::List                                                                                                                ",{}]],"47":[["  #compile                                                                                                                         ",{}]],"48":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"49":[["                                                                                                                                   ",{}]],"50":[["Y2R::AST::YCP::Locale                                                                                                              ",{}]],"51":[["  #compile                                                                                                                         ",{}]],"52":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]]}}],[0.014374,{"lines":{"0":[["      returns correct AST node for function definitions without argument",{"fg":2}],["                                                           ",{}]],"1":[["      returns correct AST node for function definitions with arguments",{"fg":2}],["                                                             ",{}]],"2":[["      in local context                                                                                                             ",{}]],"3":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"4":[["      in nested local context                                                                                                      ",{}]],"5":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"6":[["                                                                                                                                   ",{}]],"7":[["Y2R::AST::YCP::If                                                                                                                  ",{}]],"8":[["  #to_ruby                                                                                                                         ",{}]],"9":[["    returns correct AST node for if statements without then and else",{"fg":2}],["                                                               ",{}]],"10":[["    returns correct AST node for if statements with then but without else",{"fg":2}],["                                                          ",{}]],"11":[["    returns correct AST node for if statements without then but with else",{"fg":2}],["                                                          ",{}]],"12":[["    returns correct AST node for if statements with then and else",{"fg":2}],["                                                                  ",{}]],"13":[["    returns correct AST node for if statements with else if",{"fg":2}],["                                                                        ",{}]],"14":[["                                                                                                                                   ",{}]],"15":[["Y2R::AST::YCP::Import                                                                                                              ",{}]],"16":[["  #compile                                                                                                                         ",{}]],"17":[["    returns correct AST node for regular imports",{"fg":2}],["                                                                                   ",{}]],"18":[["    returns nil for SCR imports",{"fg":2}],["                                                                                                    ",{}]],"19":[["    returns nil for WFM imports",{"fg":2}],["                                                                                                    ",{}]],"20":[["                                                                                                                                   ",{}]],"21":[["Y2R::AST::YCP::Include                                                                                                             ",{}]],"22":[["  #compile                                                                                                                         ",{}]],"23":[["    raises an exception for non-toplevel includes",{"fg":2}],["                                                                                  ",{}]],"24":[["    when compiling as include file                                                                                                 ",{}]],"25":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"26":[["    when not compiling as include file                                                                                             ",{}]],"27":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"28":[["                                                                                                                                   ",{}]],"29":[["Y2R::AST::YCP::IncludeBlock                                                                                                        ",{}]],"30":[["  #compile                                                                                                                         ",{}]],"31":[["    returns correct AST node for empty blocks",{"fg":2}],["                                                                                      ",{}]],"32":[["    returns correct AST node for blocks with statements",{"fg":2}],["                                                                            ",{}]],"33":[["    returns correct AST node for blocks with function definitions",{"fg":2}],["                                                                  ",{}]],"34":[["                                                                                                                                   ",{}]],"35":[["Y2R::AST::YCP::List                                                                                                                ",{}]],"36":[["  #compile                                                                                                                         ",{}]],"37":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"38":[["                                                                                                                                   ",{}]],"39":[["Y2R::AST::YCP::Locale                                                                                                              ",{}]],"40":[["  #compile                                                                                                                         ",{}]],"41":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"42":[["                                                                                                                                   ",{}]],"43":[["Y2R::AST::YCP::Map                                                                                                                 ",{}]],"44":[["  #compile                                                                                                                         ",{}]],"45":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"46":[["                                                                                                                                   ",{}]],"47":[["Y2R::AST::YCP::MapElement                                                                                                          ",{}]],"48":[["  #compile                                                                                                                         ",{}]],"49":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"50":[["                                                                                                                                   ",{}]],"51":[["Y2R::AST::YCP::ModuleBlock                                                                                                         ",{}]],"52":[["  #compile                                                                                                                         ",{}]]}}],[0.0075,{"lines":{"0":[["      returns correct AST node for function definitions with arguments",{"fg":2}],["                                                             ",{}]],"1":[["      in local context                                                                                                             ",{}]],"2":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"3":[["      in nested local context                                                                                                      ",{}]],"4":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"5":[["                                                                                                                                   ",{}]],"6":[["Y2R::AST::YCP::If                                                                                                                  ",{}]],"7":[["  #to_ruby                                                                                                                         ",{}]],"8":[["    returns correct AST node for if statements without then and else",{"fg":2}],["                                                               ",{}]],"9":[["    returns correct AST node for if statements with then but without else",{"fg":2}],["                                                          ",{}]],"10":[["    returns correct AST node for if statements without then but with else",{"fg":2}],["                                                          ",{}]],"11":[["    returns correct AST node for if statements with then and else",{"fg":2}],["                                                                  ",{}]],"12":[["    returns correct AST node for if statements with else if",{"fg":2}],["                                                                        ",{}]],"13":[["                                                                                                                                   ",{}]],"14":[["Y2R::AST::YCP::Import                                                                                                              ",{}]],"15":[["  #compile                                                                                                                         ",{}]],"16":[["    returns correct AST node for regular imports",{"fg":2}],["                                                                                   ",{}]],"17":[["    returns nil for SCR imports",{"fg":2}],["                                                                                                    ",{}]],"18":[["    returns nil for WFM imports",{"fg":2}],["                                                                                                    ",{}]],"19":[["                                                                                                                                   ",{}]],"20":[["Y2R::AST::YCP::Include                                                                                                             ",{}]],"21":[["  #compile                                                                                                                         ",{}]],"22":[["    raises an exception for non-toplevel includes",{"fg":2}],["                                                                                  ",{}]],"23":[["    when compiling as include file                                                                                                 ",{}]],"24":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"25":[["    when not compiling as include file                                                                                             ",{}]],"26":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"27":[["                                                                                                                                   ",{}]],"28":[["Y2R::AST::YCP::IncludeBlock                                                                                                        ",{}]],"29":[["  #compile                                                                                                                         ",{}]],"30":[["    returns correct AST node for empty blocks",{"fg":2}],["                                                                                      ",{}]],"31":[["    returns correct AST node for blocks with statements",{"fg":2}],["                                                                            ",{}]],"32":[["    returns correct AST node for blocks with function definitions",{"fg":2}],["                                                                  ",{}]],"33":[["                                                                                                                                   ",{}]],"34":[["Y2R::AST::YCP::List                                                                                                                ",{}]],"35":[["  #compile                                                                                                                         ",{}]],"36":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"37":[["                                                                                                                                   ",{}]],"38":[["Y2R::AST::YCP::Locale                                                                                                              ",{}]],"39":[["  #compile                                                                                                                         ",{}]],"40":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"41":[["                                                                                                                                   ",{}]],"42":[["Y2R::AST::YCP::Map                                                                                                                 ",{}]],"43":[["  #compile                                                                                                                         ",{}]],"44":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"45":[["                                                                                                                                   ",{}]],"46":[["Y2R::AST::YCP::MapElement                                                                                                          ",{}]],"47":[["  #compile                                                                                                                         ",{}]],"48":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"49":[["                                                                                                                                   ",{}]],"50":[["Y2R::AST::YCP::ModuleBlock                                                                                                         ",{}]],"51":[["  #compile                                                                                                                         ",{}]],"52":[["    returns correct AST node for empty blocks",{"fg":2}],["                                                                                      ",{}]]}}],[0.05653,{"lines":{"0":[["      in local context                                                                                                             ",{}]],"1":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"2":[["      in nested local context                                                                                                      ",{}]],"3":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"4":[["                                                                                                                                   ",{}]],"5":[["Y2R::AST::YCP::If                                                                                                                  ",{}]],"6":[["  #to_ruby                                                                                                                         ",{}]],"7":[["    returns correct AST node for if statements without then and else",{"fg":2}],["                                                               ",{}]],"8":[["    returns correct AST node for if statements with then but without else",{"fg":2}],["                                                          ",{}]],"9":[["    returns correct AST node for if statements without then but with else",{"fg":2}],["                                                          ",{}]],"10":[["    returns correct AST node for if statements with then and else",{"fg":2}],["                                                                  ",{}]],"11":[["    returns correct AST node for if statements with else if",{"fg":2}],["                                                                        ",{}]],"12":[["                                                                                                                                   ",{}]],"13":[["Y2R::AST::YCP::Import                                                                                                              ",{}]],"14":[["  #compile                                                                                                                         ",{}]],"15":[["    returns correct AST node for regular imports",{"fg":2}],["                                                                                   ",{}]],"16":[["    returns nil for SCR imports",{"fg":2}],["                                                                                                    ",{}]],"17":[["    returns nil for WFM imports",{"fg":2}],["                                                                                                    ",{}]],"18":[["                                                                                                                                   ",{}]],"19":[["Y2R::AST::YCP::Include                                                                                                             ",{}]],"20":[["  #compile                                                                                                                         ",{}]],"21":[["    raises an exception for non-toplevel includes",{"fg":2}],["                                                                                  ",{}]],"22":[["    when compiling as include file                                                                                                 ",{}]],"23":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"24":[["    when not compiling as include file                                                                                             ",{}]],"25":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"26":[["                                                                                                                                   ",{}]],"27":[["Y2R::AST::YCP::IncludeBlock                                                                                                        ",{}]],"28":[["  #compile                                                                                                                         ",{}]],"29":[["    returns correct AST node for empty blocks",{"fg":2}],["                                                                                      ",{}]],"30":[["    returns correct AST node for blocks with statements",{"fg":2}],["                                                                            ",{}]],"31":[["    returns correct AST node for blocks with function definitions",{"fg":2}],["                                                                  ",{}]],"32":[["                                                                                                                                   ",{}]],"33":[["Y2R::AST::YCP::List                                                                                                                ",{}]],"34":[["  #compile                                                                                                                         ",{}]],"35":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"36":[["                                                                                                                                   ",{}]],"37":[["Y2R::AST::YCP::Locale                                                                                                              ",{}]],"38":[["  #compile                                                                                                                         ",{}]],"39":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"40":[["                                                                                                                                   ",{}]],"41":[["Y2R::AST::YCP::Map                                                                                                                 ",{}]],"42":[["  #compile                                                                                                                         ",{}]],"43":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"44":[["                                                                                                                                   ",{}]],"45":[["Y2R::AST::YCP::MapElement                                                                                                          ",{}]],"46":[["  #compile                                                                                                                         ",{}]],"47":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"48":[["                                                                                                                                   ",{}]],"49":[["Y2R::AST::YCP::ModuleBlock                                                                                                         ",{}]],"50":[["  #compile                                                                                                                         ",{}]],"51":[["    returns correct AST node for empty blocks",{"fg":2}],["                                                                                      ",{}]],"52":[["    returns correct AST node for blocks with symbols",{"fg":2}],["                                                                               ",{}]]}}],[0.00861,{"lines":{"0":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"1":[["      in nested local context                                                                                                      ",{}]],"2":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"3":[["                                                                                                                                   ",{}]],"4":[["Y2R::AST::YCP::If                                                                                                                  ",{}]],"5":[["  #to_ruby                                                                                                                         ",{}]],"6":[["    returns correct AST node for if statements without then and else",{"fg":2}],["                                                               ",{}]],"7":[["    returns correct AST node for if statements with then but without else",{"fg":2}],["                                                          ",{}]],"8":[["    returns correct AST node for if statements without then but with else",{"fg":2}],["                                                          ",{}]],"9":[["    returns correct AST node for if statements with then and else",{"fg":2}],["                                                                  ",{}]],"10":[["    returns correct AST node for if statements with else if",{"fg":2}],["                                                                        ",{}]],"11":[["                                                                                                                                   ",{}]],"12":[["Y2R::AST::YCP::Import                                                                                                              ",{}]],"13":[["  #compile                                                                                                                         ",{}]],"14":[["    returns correct AST node for regular imports",{"fg":2}],["                                                                                   ",{}]],"15":[["    returns nil for SCR imports",{"fg":2}],["                                                                                                    ",{}]],"16":[["    returns nil for WFM imports",{"fg":2}],["                                                                                                    ",{}]],"17":[["                                                                                                                                   ",{}]],"18":[["Y2R::AST::YCP::Include                                                                                                             ",{}]],"19":[["  #compile                                                                                                                         ",{}]],"20":[["    raises an exception for non-toplevel includes",{"fg":2}],["                                                                                  ",{}]],"21":[["    when compiling as include file                                                                                                 ",{}]],"22":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"23":[["    when not compiling as include file                                                                                             ",{}]],"24":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"25":[["                                                                                                                                   ",{}]],"26":[["Y2R::AST::YCP::IncludeBlock                                                                                                        ",{}]],"27":[["  #compile                                                                                                                         ",{}]],"28":[["    returns correct AST node for empty blocks",{"fg":2}],["                                                                                      ",{}]],"29":[["    returns correct AST node for blocks with statements",{"fg":2}],["                                                                            ",{}]],"30":[["    returns correct AST node for blocks with function definitions",{"fg":2}],["                                                                  ",{}]],"31":[["                                                                                                                                   ",{}]],"32":[["Y2R::AST::YCP::List                                                                                                                ",{}]],"33":[["  #compile                                                                                                                         ",{}]],"34":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"35":[["                                                                                                                                   ",{}]],"36":[["Y2R::AST::YCP::Locale                                                                                                              ",{}]],"37":[["  #compile                                                                                                                         ",{}]],"38":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"39":[["                                                                                                                                   ",{}]],"40":[["Y2R::AST::YCP::Map                                                                                                                 ",{}]],"41":[["  #compile                                                                                                                         ",{}]],"42":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"43":[["                                                                                                                                   ",{}]],"44":[["Y2R::AST::YCP::MapElement                                                                                                          ",{}]],"45":[["  #compile                                                                                                                         ",{}]],"46":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"47":[["                                                                                                                                   ",{}]],"48":[["Y2R::AST::YCP::ModuleBlock                                                                                                         ",{}]],"49":[["  #compile                                                                                                                         ",{}]],"50":[["    returns correct AST node for empty blocks",{"fg":2}],["                                                                                      ",{}]],"51":[["    returns correct AST node for blocks with symbols",{"fg":2}],["                                                                               ",{}]],"52":[["    returns correct AST node for blocks with statements",{"fg":2}],["                                                                            ",{}]]}}],[0.010127,{"lines":{"0":[["      in nested local context                                                                                                      ",{}]],"1":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"2":[["                                                                                                                                   ",{}]],"3":[["Y2R::AST::YCP::If                                                                                                                  ",{}]],"4":[["  #to_ruby                                                                                                                         ",{}]],"5":[["    returns correct AST node for if statements without then and else",{"fg":2}],["                                                               ",{}]],"6":[["    returns correct AST node for if statements with then but without else",{"fg":2}],["                                                          ",{}]],"7":[["    returns correct AST node for if statements without then but with else",{"fg":2}],["                                                          ",{}]],"8":[["    returns correct AST node for if statements with then and else",{"fg":2}],["                                                                  ",{}]],"9":[["    returns correct AST node for if statements with else if",{"fg":2}],["                                                                        ",{}]],"10":[["                                                                                                                                   ",{}]],"11":[["Y2R::AST::YCP::Import                                                                                                              ",{}]],"12":[["  #compile                                                                                                                         ",{}]],"13":[["    returns correct AST node for regular imports",{"fg":2}],["                                                                                   ",{}]],"14":[["    returns nil for SCR imports",{"fg":2}],["                                                                                                    ",{}]],"15":[["    returns nil for WFM imports",{"fg":2}],["                                                                                                    ",{}]],"16":[["                                                                                                                                   ",{}]],"17":[["Y2R::AST::YCP::Include                                                                                                             ",{}]],"18":[["  #compile                                                                                                                         ",{}]],"19":[["    raises an exception for non-toplevel includes",{"fg":2}],["                                                                                  ",{}]],"20":[["    when compiling as include file                                                                                                 ",{}]],"21":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"22":[["    when not compiling as include file                                                                                             ",{}]],"23":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"24":[["                                                                                                                                   ",{}]],"25":[["Y2R::AST::YCP::IncludeBlock                                                                                                        ",{}]],"26":[["  #compile                                                                                                                         ",{}]],"27":[["    returns correct AST node for empty blocks",{"fg":2}],["                                                                                      ",{}]],"28":[["    returns correct AST node for blocks with statements",{"fg":2}],["                                                                            ",{}]],"29":[["    returns correct AST node for blocks with function definitions",{"fg":2}],["                                                                  ",{}]],"30":[["                                                                                                                                   ",{}]],"31":[["Y2R::AST::YCP::List                                                                                                                ",{}]],"32":[["  #compile                                                                                                                         ",{}]],"33":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"34":[["                                                                                                                                   ",{}]],"35":[["Y2R::AST::YCP::Locale                                                                                                              ",{}]],"36":[["  #compile                                                                                                                         ",{}]],"37":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"38":[["                                                                                                                                   ",{}]],"39":[["Y2R::AST::YCP::Map                                                                                                                 ",{}]],"40":[["  #compile                                                                                                                         ",{}]],"41":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"42":[["                                                                                                                                   ",{}]],"43":[["Y2R::AST::YCP::MapElement                                                                                                          ",{}]],"44":[["  #compile                                                                                                                         ",{}]],"45":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"46":[["                                                                                                                                   ",{}]],"47":[["Y2R::AST::YCP::ModuleBlock                                                                                                         ",{}]],"48":[["  #compile                                                                                                                         ",{}]],"49":[["    returns correct AST node for empty blocks",{"fg":2}],["                                                                                      ",{}]],"50":[["    returns correct AST node for blocks with symbols",{"fg":2}],["                                                                               ",{}]],"51":[["    returns correct AST node for blocks with statements",{"fg":2}],["                                                                            ",{}]],"52":[["    returns correct AST node for blocks with function definitions",{"fg":2}],["                                                                  ",{}]]}}],[0.014017,{"lines":{"0":[["Y2R::AST::YCP::If                                                                                                                  ",{}]],"1":[["  #to_ruby                                                                                                                         ",{}]],"2":[["    returns correct AST node for if statements without then and else",{"fg":2}],["                                                               ",{}]],"3":[["    returns correct AST node for if statements with then but without else",{"fg":2}],["                                                          ",{}]],"4":[["    returns correct AST node for if statements without then but with else",{"fg":2}],["                                                          ",{}]],"5":[["    returns correct AST node for if statements with then and else",{"fg":2}],["                                                                  ",{}]],"6":[["    returns correct AST node for if statements with else if",{"fg":2}],["                                                                        ",{}]],"7":[["                                                                                                                                   ",{}]],"8":[["Y2R::AST::YCP::Import                                                                                                              ",{}]],"9":[["  #compile                                                                                                                         ",{}]],"10":[["    returns correct AST node for regular imports",{"fg":2}],["                                                                                   ",{}]],"11":[["    returns nil for SCR imports",{"fg":2}],["                                                                                                    ",{}]],"12":[["    returns nil for WFM imports",{"fg":2}],["                                                                                                    ",{}]],"13":[["                                                                                                                                   ",{}]],"14":[["Y2R::AST::YCP::Include                                                                                                             ",{}]],"15":[["  #compile                                                                                                                         ",{}]],"16":[["    raises an exception for non-toplevel includes",{"fg":2}],["                                                                                  ",{}]],"17":[["    when compiling as include file                                                                                                 ",{}]],"18":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"19":[["    when not compiling as include file                                                                                             ",{}]],"20":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"21":[["                                                                                                                                   ",{}]],"22":[["Y2R::AST::YCP::IncludeBlock                                                                                                        ",{}]],"23":[["  #compile                                                                                                                         ",{}]],"24":[["    returns correct AST node for empty blocks",{"fg":2}],["                                                                                      ",{}]],"25":[["    returns correct AST node for blocks with statements",{"fg":2}],["                                                                            ",{}]],"26":[["    returns correct AST node for blocks with function definitions",{"fg":2}],["                                                                  ",{}]],"27":[["                                                                                                                                   ",{}]],"28":[["Y2R::AST::YCP::List                                                                                                                ",{}]],"29":[["  #compile                                                                                                                         ",{}]],"30":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"31":[["                                                                                                                                   ",{}]],"32":[["Y2R::AST::YCP::Locale                                                                                                              ",{}]],"33":[["  #compile                                                                                                                         ",{}]],"34":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"35":[["                                                                                                                                   ",{}]],"36":[["Y2R::AST::YCP::Map                                                                                                                 ",{}]],"37":[["  #compile                                                                                                                         ",{}]],"38":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"39":[["                                                                                                                                   ",{}]],"40":[["Y2R::AST::YCP::MapElement                                                                                                          ",{}]],"41":[["  #compile                                                                                                                         ",{}]],"42":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"43":[["                                                                                                                                   ",{}]],"44":[["Y2R::AST::YCP::ModuleBlock                                                                                                         ",{}]],"45":[["  #compile                                                                                                                         ",{}]],"46":[["    returns correct AST node for empty blocks",{"fg":2}],["                                                                                      ",{}]],"47":[["    returns correct AST node for blocks with symbols",{"fg":2}],["                                                                               ",{}]],"48":[["    returns correct AST node for blocks with statements",{"fg":2}],["                                                                            ",{}]],"49":[["    returns correct AST node for blocks with function definitions",{"fg":2}],["                                                                  ",{}]],"50":[["    returns correct AST node for blocks with a constructor",{"fg":2}],["                                                                         ",{}]],"51":[["    raises an exception for blocks whose name isn't a Ruby class name",{"fg":2}],["                                                              ",{}]],"52":[["    in context with export_private == false                                                                                        ",{}]]}}],[0.015324,{"lines":{"0":[["    returns correct AST node for if statements with else if",{"fg":2}],["                                                                        ",{}]],"1":[["                                                                                                                                   ",{}]],"2":[["Y2R::AST::YCP::Import                                                                                                              ",{}]],"3":[["  #compile                                                                                                                         ",{}]],"4":[["    returns correct AST node for regular imports",{"fg":2}],["                                                                                   ",{}]],"5":[["    returns nil for SCR imports",{"fg":2}],["                                                                                                    ",{}]],"6":[["    returns nil for WFM imports",{"fg":2}],["                                                                                                    ",{}]],"8":[["Y2R::AST::YCP::Include                                                                                                             ",{}]],"10":[["    raises an exception for non-toplevel includes",{"fg":2}],["                                                                                  ",{}]],"11":[["    when compiling as include file                                                                                                 ",{}]],"12":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"13":[["    when not compiling as include file                                                                                             ",{}]],"14":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"15":[["                                                                                                                                   ",{}]],"16":[["Y2R::AST::YCP::IncludeBlock                                                                                                        ",{}]],"17":[["  #compile                                                                                                                         ",{}]],"18":[["    returns correct AST node for empty blocks",{"fg":2}],["                                                                                      ",{}]],"19":[["    returns correct AST node for blocks with statements",{"fg":2}],["                                                                            ",{}]],"20":[["    returns correct AST node for blocks with function definitions",{"fg":2}],["                                                                  ",{}]],"22":[["Y2R::AST::YCP::List                                                                                                                ",{}]],"24":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"25":[["                                                                                                                                   ",{}]],"26":[["Y2R::AST::YCP::Locale                                                                                                              ",{}]],"27":[["  #compile                                                                                                                         ",{}]],"28":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"29":[["                                                                                                                                   ",{}]],"30":[["Y2R::AST::YCP::Map                                                                                                                 ",{}]],"31":[["  #compile                                                                                                                         ",{}]],"32":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"33":[["                                                                                                                                   ",{}]],"34":[["Y2R::AST::YCP::MapElement                                                                                                          ",{}]],"35":[["  #compile                                                                                                                         ",{}]],"36":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"37":[["                                                                                                                                   ",{}]],"38":[["Y2R::AST::YCP::ModuleBlock                                                                                                         ",{}]],"39":[["  #compile                                                                                                                         ",{}]],"40":[["    returns correct AST node for empty blocks",{"fg":2}],["                                                                                      ",{}]],"41":[["    returns correct AST node for blocks with symbols",{"fg":2}],["                                                                               ",{}]],"42":[["    returns correct AST node for blocks with statements",{"fg":2}],["                                                                            ",{}]],"43":[["    returns correct AST node for blocks with function definitions",{"fg":2}],["                                                                  ",{}]],"44":[["    returns correct AST node for blocks with a constructor",{"fg":2}],["                                                                         ",{}]],"45":[["    raises an exception for blocks whose name isn't a Ruby class name",{"fg":2}],["                                                              ",{}]],"46":[["    in context with export_private == false                                                                                        ",{}]],"47":[["      does not export private symbols",{"fg":2}],["                                                                                              ",{}]],"48":[["    in context with export_private == true                                                                                         ",{}]],"49":[["      does exports private symbols",{"fg":2}],["                                                                                                 ",{}]],"50":[["                                                                                                                                   ",{}]],"51":[["Y2R::AST::YCP::Repeat                                                                                                              ",{}]],"52":[["  #compile                                                                                                                         ",{}]]}}],[0.012082,{"lines":{"0":[["    returns nil for WFM imports",{"fg":2}],["                                                                                                    ",{}]],"2":[["Y2R::AST::YCP::Include                                                                                                             ",{}]],"4":[["    raises an exception for non-toplevel includes",{"fg":2}],["                                                                                  ",{}]],"5":[["    when compiling as include file                                                                                                 ",{}]],"6":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"7":[["    when not compiling as include file                                                                                             ",{}]],"8":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"9":[["                                                                                                                                   ",{}]],"10":[["Y2R::AST::YCP::IncludeBlock                                                                                                        ",{}]],"11":[["  #compile                                                                                                                         ",{}]],"12":[["    returns correct AST node for empty blocks",{"fg":2}],["                                                                                      ",{}]],"13":[["    returns correct AST node for blocks with statements",{"fg":2}],["                                                                            ",{}]],"14":[["    returns correct AST node for blocks with function definitions",{"fg":2}],["                                                                  ",{}]],"16":[["Y2R::AST::YCP::List                                                                                                                ",{}]],"18":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"19":[["                                                                                                                                   ",{}]],"20":[["Y2R::AST::YCP::Locale                                                                                                              ",{}]],"21":[["  #compile                                                                                                                         ",{}]],"22":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"23":[["                                                                                                                                   ",{}]],"24":[["Y2R::AST::YCP::Map                                                                                                                 ",{}]],"25":[["  #compile                                                                                                                         ",{}]],"26":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"27":[["                                                                                                                                   ",{}]],"28":[["Y2R::AST::YCP::MapElement                                                                                                          ",{}]],"29":[["  #compile                                                                                                                         ",{}]],"30":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"31":[["                                                                                                                                   ",{}]],"32":[["Y2R::AST::YCP::ModuleBlock                                                                                                         ",{}]],"33":[["  #compile                                                                                                                         ",{}]],"34":[["    returns correct AST node for empty blocks",{"fg":2}],["                                                                                      ",{}]],"35":[["    returns correct AST node for blocks with symbols",{"fg":2}],["                                                                               ",{}]],"36":[["    returns correct AST node for blocks with statements",{"fg":2}],["                                                                            ",{}]],"37":[["    returns correct AST node for blocks with function definitions",{"fg":2}],["                                                                  ",{}]],"38":[["    returns correct AST node for blocks with a constructor",{"fg":2}],["                                                                         ",{}]],"39":[["    raises an exception for blocks whose name isn't a Ruby class name",{"fg":2}],["                                                              ",{}]],"40":[["    in context with export_private == false                                                                                        ",{}]],"41":[["      does not export private symbols",{"fg":2}],["                                                                                              ",{}]],"42":[["    in context with export_private == true                                                                                         ",{}]],"43":[["      does exports private symbols",{"fg":2}],["                                                                                                 ",{}]],"44":[["                                                                                                                                   ",{}]],"45":[["Y2R::AST::YCP::Repeat                                                                                                              ",{}]],"46":[["  #compile                                                                                                                         ",{}]],"47":[["    returns correct AST node for repeat statements without do",{"fg":2}],["                                                                      ",{}]],"48":[["    returns correct AST node for repeat statements with do",{"fg":2}],["                                                                         ",{}]],"49":[["                                                                                                                                   ",{}]],"50":[["Y2R::AST::YCP::Return                                                                                                              ",{}]],"51":[["  #compile                                                                                                                         ",{}]],"52":[["    for return statements at the client toplevel                                                                                   ",{}]]}}],[0.016112,{"lines":{"0":[["    raises an exception for non-toplevel includes",{"fg":2}],["                                                                                  ",{}]],"1":[["    when compiling as include file                                                                                                 ",{}]],"2":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"3":[["    when not compiling as include file                                                                                             ",{}]],"4":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"5":[["                                                                                                                                   ",{}]],"6":[["Y2R::AST::YCP::IncludeBlock                                                                                                        ",{}]],"7":[["  #compile                                                                                                                         ",{}]],"8":[["    returns correct AST node for empty blocks",{"fg":2}],["                                                                                      ",{}]],"9":[["    returns correct AST node for blocks with statements",{"fg":2}],["                                                                            ",{}]],"10":[["    returns correct AST node for blocks with function definitions",{"fg":2}],["                                                                  ",{}]],"11":[["                                                                                                                                   ",{}]],"12":[["Y2R::AST::YCP::List                                                                                                                ",{}]],"13":[["  #compile                                                                                                                         ",{}]],"14":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"16":[["Y2R::AST::YCP::Locale                                                                                                              ",{}]],"20":[["Y2R::AST::YCP::Map                                                                                                                 ",{}]],"24":[["Y2R::AST::YCP::MapElement                                                                                                          ",{}]],"28":[["Y2R::AST::YCP::ModuleBlock                                                                                                         ",{}]],"30":[["    returns correct AST node for empty blocks",{"fg":2}],["                                                                                      ",{}]],"31":[["    returns correct AST node for blocks with symbols",{"fg":2}],["                                                                               ",{}]],"32":[["    returns correct AST node for blocks with statements",{"fg":2}],["                                                                            ",{}]],"33":[["    returns correct AST node for blocks with function definitions",{"fg":2}],["                                                                  ",{}]],"34":[["    returns correct AST node for blocks with a constructor",{"fg":2}],["                                                                         ",{}]],"35":[["    raises an exception for blocks whose name isn't a Ruby class name",{"fg":2}],["                                                              ",{}]],"36":[["    in context with export_private == false                                                                                        ",{}]],"37":[["      does not export private symbols",{"fg":2}],["                                                                                              ",{}]],"38":[["    in context with export_private == true                                                                                         ",{}]],"39":[["      does exports private symbols",{"fg":2}],["                                                                                                 ",{}]],"40":[["                                                                                                                                   ",{}]],"41":[["Y2R::AST::YCP::Repeat                                                                                                              ",{}]],"42":[["  #compile                                                                                                                         ",{}]],"43":[["    returns correct AST node for repeat statements without do",{"fg":2}],["                                                                      ",{}]],"44":[["    returns correct AST node for repeat statements with do",{"fg":2}],["                                                                         ",{}]],"45":[["                                                                                                                                   ",{}]],"46":[["Y2R::AST::YCP::Return                                                                                                              ",{}]],"47":[["  #compile                                                                                                                         ",{}]],"48":[["    for return statements at the client toplevel                                                                                   ",{}]],"49":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"50":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"51":[["    for return statements inside a function                                                                                        ",{}]],"52":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]]}}],[0.015684,{"lines":{"0":[["                                                                                                                                   ",{}]],"1":[["Y2R::AST::YCP::IncludeBlock                                                                                                        ",{}]],"2":[["  #compile                                                                                                                         ",{}]],"3":[["    returns correct AST node for empty blocks",{"fg":2}],["                                                                                      ",{}]],"4":[["    returns correct AST node for blocks with statements",{"fg":2}],["                                                                            ",{}]],"5":[["    returns correct AST node for blocks with function definitions",{"fg":2}],["                                                                  ",{}]],"6":[["                                                                                                                                   ",{}]],"7":[["Y2R::AST::YCP::List                                                                                                                ",{}]],"8":[["  #compile                                                                                                                         ",{}]],"9":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"10":[["                                                                                                                                   ",{}]],"11":[["Y2R::AST::YCP::Locale                                                                                                              ",{}]],"12":[["  #compile                                                                                                                         ",{}]],"13":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"14":[["                                                                                                                                   ",{}]],"15":[["Y2R::AST::YCP::Map                                                                                                                 ",{}]],"16":[["  #compile                                                                                                                         ",{}]],"17":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"18":[["                                                                                                                                   ",{}]],"19":[["Y2R::AST::YCP::MapElement                                                                                                          ",{}]],"20":[["  #compile                                                                                                                         ",{}]],"21":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"22":[["                                                                                                                                   ",{}]],"23":[["Y2R::AST::YCP::ModuleBlock                                                                                                         ",{}]],"24":[["  #compile                                                                                                                         ",{}]],"25":[["    returns correct AST node for empty blocks",{"fg":2}],["                                                                                      ",{}]],"26":[["    returns correct AST node for blocks with symbols",{"fg":2}],["                                                                               ",{}]],"27":[["    returns correct AST node for blocks with statements",{"fg":2}],["                                                                            ",{}]],"28":[["    returns correct AST node for blocks with function definitions",{"fg":2}],["                                                                  ",{}]],"29":[["    returns correct AST node for blocks with a constructor",{"fg":2}],["                                                                         ",{}]],"30":[["    raises an exception for blocks whose name isn't a Ruby class name",{"fg":2}],["                                                              ",{}]],"31":[["    in context with export_private == false                                                                                        ",{}]],"32":[["      does not export private symbols",{"fg":2}],["                                                                                              ",{}]],"33":[["    in context with export_private == true                                                                                         ",{}]],"34":[["      does exports private symbols",{"fg":2}],["                                                                                                 ",{}]],"35":[["                                                                                                                                   ",{}]],"36":[["Y2R::AST::YCP::Repeat                                                                                                              ",{}]],"37":[["  #compile                                                                                                                         ",{}]],"38":[["    returns correct AST node for repeat statements without do",{"fg":2}],["                                                                      ",{}]],"39":[["    returns correct AST node for repeat statements with do",{"fg":2}],["                                                                         ",{}]],"41":[["Y2R::AST::YCP::Return                                                                                                              ",{}]],"43":[["    for return statements at the client toplevel                                                                                   ",{}]],"44":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"45":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"46":[["    for return statements inside a function                                                                                        ",{}]],"47":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"48":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"49":[["    for return statements inside a function which is inside a client toplevel                                                      ",{}]],"50":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"51":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"52":[["    for return statements inside a function which is inside a block expression                                                     ",{}]]}}],[0.015998,{"lines":{"0":[["    returns correct AST node for blocks with statements",{"fg":2}],["                                                                            ",{}]],"1":[["    returns correct AST node for blocks with function definitions",{"fg":2}],["                                                                  ",{}]],"2":[["                                                                                                                                   ",{}]],"3":[["Y2R::AST::YCP::List                                                                                                                ",{}]],"4":[["  #compile                                                                                                                         ",{}]],"5":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"7":[["Y2R::AST::YCP::Locale                                                                                                              ",{}]],"11":[["Y2R::AST::YCP::Map                                                                                                                 ",{}]],"15":[["Y2R::AST::YCP::MapElement                                                                                                          ",{}]],"19":[["Y2R::AST::YCP::ModuleBlock                                                                                                         ",{}]],"21":[["    returns correct AST node for empty blocks",{"fg":2}],["                                                                                      ",{}]],"22":[["    returns correct AST node for blocks with symbols",{"fg":2}],["                                                                               ",{}]],"23":[["    returns correct AST node for blocks with statements",{"fg":2}],["                                                                            ",{}]],"24":[["    returns correct AST node for blocks with function definitions",{"fg":2}],["                                                                  ",{}]],"25":[["    returns correct AST node for blocks with a constructor",{"fg":2}],["                                                                         ",{}]],"26":[["    raises an exception for blocks whose name isn't a Ruby class name",{"fg":2}],["                                                              ",{}]],"27":[["    in context with export_private == false                                                                                        ",{}]],"28":[["      does not export private symbols",{"fg":2}],["                                                                                              ",{}]],"29":[["    in context with export_private == true                                                                                         ",{}]],"30":[["      does exports private symbols",{"fg":2}],["                                                                                                 ",{}]],"31":[["                                                                                                                                   ",{}]],"32":[["Y2R::AST::YCP::Repeat                                                                                                              ",{}]],"33":[["  #compile                                                                                                                         ",{}]],"34":[["    returns correct AST node for repeat statements without do",{"fg":2}],["                                                                      ",{}]],"35":[["    returns correct AST node for repeat statements with do",{"fg":2}],["                                                                         ",{}]],"36":[["                                                                                                                                   ",{}]],"37":[["Y2R::AST::YCP::Return                                                                                                              ",{}]],"38":[["  #compile                                                                                                                         ",{}]],"39":[["    for return statements at the client toplevel                                                                                   ",{}]],"40":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"41":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"42":[["    for return statements inside a function                                                                                        ",{}]],"43":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"44":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"45":[["    for return statements inside a function which is inside a client toplevel                                                      ",{}]],"46":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"47":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"48":[["    for return statements inside a function which is inside a block expression                                                     ",{}]],"49":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"50":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"51":[["    for return statements inside a block expression                                                                                ",{}]],"52":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]]}}],[0.010232,{"lines":{"0":[["Y2R::AST::YCP::List                                                                                                                ",{}]],"1":[["  #compile                                                                                                                         ",{}]],"2":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"3":[["                                                                                                                                   ",{}]],"4":[["Y2R::AST::YCP::Locale                                                                                                              ",{}]],"5":[["  #compile                                                                                                                         ",{}]],"6":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"7":[["                                                                                                                                   ",{}]],"8":[["Y2R::AST::YCP::Map                                                                                                                 ",{}]],"9":[["  #compile                                                                                                                         ",{}]],"10":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"11":[["                                                                                                                                   ",{}]],"12":[["Y2R::AST::YCP::MapElement                                                                                                          ",{}]],"13":[["  #compile                                                                                                                         ",{}]],"14":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"15":[["                                                                                                                                   ",{}]],"16":[["Y2R::AST::YCP::ModuleBlock                                                                                                         ",{}]],"17":[["  #compile                                                                                                                         ",{}]],"18":[["    returns correct AST node for empty blocks",{"fg":2}],["                                                                                      ",{}]],"19":[["    returns correct AST node for blocks with symbols",{"fg":2}],["                                                                               ",{}]],"20":[["    returns correct AST node for blocks with statements",{"fg":2}],["                                                                            ",{}]],"21":[["    returns correct AST node for blocks with function definitions",{"fg":2}],["                                                                  ",{}]],"22":[["    returns correct AST node for blocks with a constructor",{"fg":2}],["                                                                         ",{}]],"23":[["    raises an exception for blocks whose name isn't a Ruby class name",{"fg":2}],["                                                              ",{}]],"24":[["    in context with export_private == false                                                                                        ",{}]],"25":[["      does not export private symbols",{"fg":2}],["                                                                                              ",{}]],"26":[["    in context with export_private == true                                                                                         ",{}]],"27":[["      does exports private symbols",{"fg":2}],["                                                                                                 ",{}]],"28":[["                                                                                                                                   ",{}]],"29":[["Y2R::AST::YCP::Repeat                                                                                                              ",{}]],"30":[["  #compile                                                                                                                         ",{}]],"31":[["    returns correct AST node for repeat statements without do",{"fg":2}],["                                                                      ",{}]],"32":[["    returns correct AST node for repeat statements with do",{"fg":2}],["                                                                         ",{}]],"33":[["                                                                                                                                   ",{}]],"34":[["Y2R::AST::YCP::Return                                                                                                              ",{}]],"35":[["  #compile                                                                                                                         ",{}]],"36":[["    for return statements at the client toplevel                                                                                   ",{}]],"37":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"38":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"39":[["    for return statements inside a function                                                                                        ",{}]],"42":[["    for return statements inside a function which is inside a client toplevel                                                      ",{}]],"45":[["    for return statements inside a function which is inside a block expression                                                     ",{}]],"48":[["    for return statements inside a block expression                                                                                ",{}]],"51":[["    for return statements inside a block expression which is inside a client toplevel                                              ",{}]]}}],[0.022034,{"lines":{"0":[["  #compile                                                                                                                         ",{}]],"1":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"2":[["                                                                                                                                   ",{}]],"3":[["Y2R::AST::YCP::Locale                                                                                                              ",{}]],"4":[["  #compile                                                                                                                         ",{}]],"5":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"6":[["                                                                                                                                   ",{}]],"7":[["Y2R::AST::YCP::Map                                                                                                                 ",{}]],"8":[["  #compile                                                                                                                         ",{}]],"9":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"10":[["                                                                                                                                   ",{}]],"11":[["Y2R::AST::YCP::MapElement                                                                                                          ",{}]],"12":[["  #compile                                                                                                                         ",{}]],"13":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"14":[["                                                                                                                                   ",{}]],"15":[["Y2R::AST::YCP::ModuleBlock                                                                                                         ",{}]],"16":[["  #compile                                                                                                                         ",{}]],"17":[["    returns correct AST node for empty blocks",{"fg":2}],["                                                                                      ",{}]],"18":[["    returns correct AST node for blocks with symbols",{"fg":2}],["                                                                               ",{}]],"19":[["    returns correct AST node for blocks with statements",{"fg":2}],["                                                                            ",{}]],"20":[["    returns correct AST node for blocks with function definitions",{"fg":2}],["                                                                  ",{}]],"21":[["    returns correct AST node for blocks with a constructor",{"fg":2}],["                                                                         ",{}]],"22":[["    raises an exception for blocks whose name isn't a Ruby class name",{"fg":2}],["                                                              ",{}]],"23":[["    in context with export_private == false                                                                                        ",{}]],"24":[["      does not export private symbols",{"fg":2}],["                                                                                              ",{}]],"25":[["    in context with export_private == true                                                                                         ",{}]],"26":[["      does exports private symbols",{"fg":2}],["                                                                                                 ",{}]],"27":[["                                                                                                                                   ",{}]],"28":[["Y2R::AST::YCP::Repeat                                                                                                              ",{}]],"29":[["  #compile                                                                                                                         ",{}]],"30":[["    returns correct AST node for repeat statements without do",{"fg":2}],["                                                                      ",{}]],"31":[["    returns correct AST node for repeat statements with do",{"fg":2}],["                                                                         ",{}]],"32":[["                                                                                                                                   ",{}]],"33":[["Y2R::AST::YCP::Return                                                                                                              ",{}]],"34":[["  #compile                                                                                                                         ",{}]],"35":[["    for return statements at the client toplevel                                                                                   ",{}]],"36":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"37":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"38":[["    for return statements inside a function                                                                                        ",{}]],"39":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"40":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"41":[["    for return statements inside a function which is inside a client toplevel                                                      ",{}]],"42":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"43":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"44":[["    for return statements inside a function which is inside a block expression                                                     ",{}]],"45":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"46":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"47":[["    for return statements inside a block expression                                                                                ",{}]],"48":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"49":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"50":[["    for return statements inside a block expression which is inside a client toplevel                                              ",{}]],"51":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"52":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]]}}],[0.013163,{"lines":{"3":[["Y2R::AST::YCP::Map                                                                                                                 ",{}]],"7":[["Y2R::AST::YCP::MapElement                                                                                                          ",{}]],"11":[["Y2R::AST::YCP::ModuleBlock                                                                                                         ",{}]],"13":[["    returns correct AST node for empty blocks",{"fg":2}],["                                                                                      ",{}]],"14":[["    returns correct AST node for blocks with symbols",{"fg":2}],["                                                                               ",{}]],"15":[["    returns correct AST node for blocks with statements",{"fg":2}],["                                                                            ",{}]],"16":[["    returns correct AST node for blocks with function definitions",{"fg":2}],["                                                                  ",{}]],"17":[["    returns correct AST node for blocks with a constructor",{"fg":2}],["                                                                         ",{}]],"18":[["    raises an exception for blocks whose name isn't a Ruby class name",{"fg":2}],["                                                              ",{}]],"19":[["    in context with export_private == false                                                                                        ",{}]],"20":[["      does not export private symbols",{"fg":2}],["                                                                                              ",{}]],"21":[["    in context with export_private == true                                                                                         ",{}]],"22":[["      does exports private symbols",{"fg":2}],["                                                                                                 ",{}]],"23":[["                                                                                                                                   ",{}]],"24":[["Y2R::AST::YCP::Repeat                                                                                                              ",{}]],"25":[["  #compile                                                                                                                         ",{}]],"26":[["    returns correct AST node for repeat statements without do",{"fg":2}],["                                                                      ",{}]],"27":[["    returns correct AST node for repeat statements with do",{"fg":2}],["                                                                         ",{}]],"28":[["                                                                                                                                   ",{}]],"29":[["Y2R::AST::YCP::Return                                                                                                              ",{}]],"30":[["  #compile                                                                                                                         ",{}]],"31":[["    for return statements at the client toplevel                                                                                   ",{}]],"32":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"33":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"34":[["    for return statements inside a function                                                                                        ",{}]],"35":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"36":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"37":[["    for return statements inside a function which is inside a client toplevel                                                      ",{}]],"38":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"39":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"40":[["    for return statements inside a function which is inside a block expression                                                     ",{}]],"41":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"42":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"43":[["    for return statements inside a block expression                                                                                ",{}]],"44":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"45":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"46":[["    for return statements inside a block expression which is inside a client toplevel                                              ",{}]],"47":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"48":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"49":[["    for return statements inside a block expression which is inside a function                                                     ",{}]],"50":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"51":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"52":[["    for return statements with variables as a value                                                                                ",{}]]}}],[0.006882,{"lines":{"0":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"1":[["                                                                                                                                   ",{}]],"2":[["Y2R::AST::YCP::Map                                                                                                                 ",{}]],"3":[["  #compile                                                                                                                         ",{}]],"4":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"5":[["                                                                                                                                   ",{}]],"6":[["Y2R::AST::YCP::MapElement                                                                                                          ",{}]],"7":[["  #compile                                                                                                                         ",{}]],"8":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"9":[["                                                                                                                                   ",{}]],"10":[["Y2R::AST::YCP::ModuleBlock                                                                                                         ",{}]],"11":[["  #compile                                                                                                                         ",{}]],"12":[["    returns correct AST node for empty blocks",{"fg":2}],["                                                                                      ",{}]],"13":[["    returns correct AST node for blocks with symbols",{"fg":2}],["                                                                               ",{}]],"14":[["    returns correct AST node for blocks with statements",{"fg":2}],["                                                                            ",{}]],"15":[["    returns correct AST node for blocks with function definitions",{"fg":2}],["                                                                  ",{}]],"16":[["    returns correct AST node for blocks with a constructor",{"fg":2}],["                                                                         ",{}]],"17":[["    raises an exception for blocks whose name isn't a Ruby class name",{"fg":2}],["                                                              ",{}]],"18":[["    in context with export_private == false                                                                                        ",{}]],"19":[["      does not export private symbols",{"fg":2}],["                                                                                              ",{}]],"20":[["    in context with export_private == true                                                                                         ",{}]],"21":[["      does exports private symbols",{"fg":2}],["                                                                                                 ",{}]],"22":[["                                                                                                                                   ",{}]],"23":[["Y2R::AST::YCP::Repeat                                                                                                              ",{}]],"24":[["  #compile                                                                                                                         ",{}]],"25":[["    returns correct AST node for repeat statements without do",{"fg":2}],["                                                                      ",{}]],"26":[["    returns correct AST node for repeat statements with do",{"fg":2}],["                                                                         ",{}]],"27":[["                                                                                                                                   ",{}]],"28":[["Y2R::AST::YCP::Return                                                                                                              ",{}]],"29":[["  #compile                                                                                                                         ",{}]],"30":[["    for return statements at the client toplevel                                                                                   ",{}]],"31":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"32":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"33":[["    for return statements inside a function                                                                                        ",{}]],"34":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"35":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"36":[["    for return statements inside a function which is inside a client toplevel                                                      ",{}]],"37":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"38":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"39":[["    for return statements inside a function which is inside a block expression                                                     ",{}]],"40":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"41":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"42":[["    for return statements inside a block expression                                                                                ",{}]],"43":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"44":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"45":[["    for return statements inside a block expression which is inside a client toplevel                                              ",{}]],"46":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"47":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"48":[["    for return statements inside a block expression which is inside a function                                                     ",{}]],"49":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"50":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"51":[["    for return statements with variables as a value                                                                                ",{}]],"52":[["      returns correct AST node for a value that doesn't need copy",{"fg":2}],["                                                                  ",{}]]}}],[0.058477,{"lines":{"0":[["                                                                                                                                   ",{}]],"1":[["Y2R::AST::YCP::Map                                                                                                                 ",{}]],"2":[["  #compile                                                                                                                         ",{}]],"3":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"4":[["                                                                                                                                   ",{}]],"5":[["Y2R::AST::YCP::MapElement                                                                                                          ",{}]],"6":[["  #compile                                                                                                                         ",{}]],"7":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"8":[["                                                                                                                                   ",{}]],"9":[["Y2R::AST::YCP::ModuleBlock                                                                                                         ",{}]],"10":[["  #compile                                                                                                                         ",{}]],"11":[["    returns correct AST node for empty blocks",{"fg":2}],["                                                                                      ",{}]],"12":[["    returns correct AST node for blocks with symbols",{"fg":2}],["                                                                               ",{}]],"13":[["    returns correct AST node for blocks with statements",{"fg":2}],["                                                                            ",{}]],"14":[["    returns correct AST node for blocks with function definitions",{"fg":2}],["                                                                  ",{}]],"15":[["    returns correct AST node for blocks with a constructor",{"fg":2}],["                                                                         ",{}]],"16":[["    raises an exception for blocks whose name isn't a Ruby class name",{"fg":2}],["                                                              ",{}]],"17":[["    in context with export_private == false                                                                                        ",{}]],"18":[["      does not export private symbols",{"fg":2}],["                                                                                              ",{}]],"19":[["    in context with export_private == true                                                                                         ",{}]],"20":[["      does exports private symbols",{"fg":2}],["                                                                                                 ",{}]],"21":[["                                                                                                                                   ",{}]],"22":[["Y2R::AST::YCP::Repeat                                                                                                              ",{}]],"23":[["  #compile                                                                                                                         ",{}]],"24":[["    returns correct AST node for repeat statements without do",{"fg":2}],["                                                                      ",{}]],"25":[["    returns correct AST node for repeat statements with do",{"fg":2}],["                                                                         ",{}]],"26":[["                                                                                                                                   ",{}]],"27":[["Y2R::AST::YCP::Return                                                                                                              ",{}]],"28":[["  #compile                                                                                                                         ",{}]],"29":[["    for return statements at the client toplevel                                                                                   ",{}]],"30":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"31":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"32":[["    for return statements inside a function                                                                                        ",{}]],"33":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"34":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"35":[["    for return statements inside a function which is inside a client toplevel                                                      ",{}]],"36":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"37":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"38":[["    for return statements inside a function which is inside a block expression                                                     ",{}]],"39":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"40":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"41":[["    for return statements inside a block expression                                                                                ",{}]],"42":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"43":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"44":[["    for return statements inside a block expression which is inside a client toplevel                                              ",{}]],"45":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"46":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"47":[["    for return statements inside a block expression which is inside a function                                                     ",{}]],"48":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"49":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"50":[["    for return statements with variables as a value                                                                                ",{}]],"51":[["      returns correct AST node for a value that doesn't need copy",{"fg":2}],["                                                                  ",{}]],"52":[["      returns correct AST node for a value that needs copy",{"fg":2}],["                                                                         ",{}]]}}],[0.013521,{"lines":{"1":[["Y2R::AST::YCP::ModuleBlock                                                                                                         ",{}]],"3":[["    returns correct AST node for empty blocks",{"fg":2}],["                                                                                      ",{}]],"4":[["    returns correct AST node for blocks with symbols",{"fg":2}],["                                                                               ",{}]],"5":[["    returns correct AST node for blocks with statements",{"fg":2}],["                                                                            ",{}]],"6":[["    returns correct AST node for blocks with function definitions",{"fg":2}],["                                                                  ",{}]],"7":[["    returns correct AST node for blocks with a constructor",{"fg":2}],["                                                                         ",{}]],"8":[["    raises an exception for blocks whose name isn't a Ruby class name",{"fg":2}],["                                                              ",{}]],"9":[["    in context with export_private == false                                                                                        ",{}]],"10":[["      does not export private symbols",{"fg":2}],["                                                                                              ",{}]],"11":[["    in context with export_private == true                                                                                         ",{}]],"12":[["      does exports private symbols",{"fg":2}],["                                                                                                 ",{}]],"13":[["                                                                                                                                   ",{}]],"14":[["Y2R::AST::YCP::Repeat                                                                                                              ",{}]],"15":[["  #compile                                                                                                                         ",{}]],"16":[["    returns correct AST node for repeat statements without do",{"fg":2}],["                                                                      ",{}]],"17":[["    returns correct AST node for repeat statements with do",{"fg":2}],["                                                                         ",{}]],"18":[["                                                                                                                                   ",{}]],"19":[["Y2R::AST::YCP::Return                                                                                                              ",{}]],"20":[["  #compile                                                                                                                         ",{}]],"21":[["    for return statements at the client toplevel                                                                                   ",{}]],"22":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"23":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"24":[["    for return statements inside a function                                                                                        ",{}]],"25":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"26":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"27":[["    for return statements inside a function which is inside a client toplevel                                                      ",{}]],"28":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"29":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"30":[["    for return statements inside a function which is inside a block expression                                                     ",{}]],"31":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"32":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"33":[["    for return statements inside a block expression                                                                                ",{}]],"34":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"35":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"36":[["    for return statements inside a block expression which is inside a client toplevel                                              ",{}]],"37":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"38":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"39":[["    for return statements inside a block expression which is inside a function                                                     ",{}]],"40":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"41":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"42":[["    for return statements with variables as a value                                                                                ",{}]],"43":[["      returns correct AST node for a value that doesn't need copy",{"fg":2}],["                                                                  ",{}]],"44":[["      returns correct AST node for a value that needs copy",{"fg":2}],["                                                                         ",{}]],"45":[["                                                                                                                                   ",{}]],"46":[["Y2R::AST::YCP::StmtBlock                                                                                                           ",{}]],"47":[["  #compile                                                                                                                         ",{}]],"48":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"49":[["                                                                                                                                   ",{}]],"50":[["Y2R::AST::YCP::Switch                                                                                                              ",{}]],"51":[["  #compile                                                                                                                         ",{}]],"52":[["    emits correct code for empty switch statements",{"fg":2}],["                                                                                 ",{}]]}}],[0.016444,{"lines":{"0":[["  #compile                                                                                                                         ",{}]],"1":[["    returns correct AST node for empty blocks",{"fg":2}],["                                                                                      ",{}]],"2":[["    returns correct AST node for blocks with symbols",{"fg":2}],["                                                                               ",{}]],"3":[["    returns correct AST node for blocks with statements",{"fg":2}],["                                                                            ",{}]],"4":[["    returns correct AST node for blocks with function definitions",{"fg":2}],["                                                                  ",{}]],"5":[["    returns correct AST node for blocks with a constructor",{"fg":2}],["                                                                         ",{}]],"6":[["    raises an exception for blocks whose name isn't a Ruby class name",{"fg":2}],["                                                              ",{}]],"7":[["    in context with export_private == false                                                                                        ",{}]],"8":[["      does not export private symbols",{"fg":2}],["                                                                                              ",{}]],"9":[["    in context with export_private == true                                                                                         ",{}]],"10":[["      does exports private symbols",{"fg":2}],["                                                                                                 ",{}]],"11":[["                                                                                                                                   ",{}]],"12":[["Y2R::AST::YCP::Repeat                                                                                                              ",{}]],"13":[["  #compile                                                                                                                         ",{}]],"14":[["    returns correct AST node for repeat statements without do",{"fg":2}],["                                                                      ",{}]],"15":[["    returns correct AST node for repeat statements with do",{"fg":2}],["                                                                         ",{}]],"16":[["                                                                                                                                   ",{}]],"17":[["Y2R::AST::YCP::Return                                                                                                              ",{}]],"18":[["  #compile                                                                                                                         ",{}]],"19":[["    for return statements at the client toplevel                                                                                   ",{}]],"20":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"21":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"22":[["    for return statements inside a function                                                                                        ",{}]],"23":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"24":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"25":[["    for return statements inside a function which is inside a client toplevel                                                      ",{}]],"26":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"27":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"28":[["    for return statements inside a function which is inside a block expression                                                     ",{}]],"29":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"30":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"31":[["    for return statements inside a block expression                                                                                ",{}]],"32":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"33":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"34":[["    for return statements inside a block expression which is inside a client toplevel                                              ",{}]],"35":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"36":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"37":[["    for return statements inside a block expression which is inside a function                                                     ",{}]],"38":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"39":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"40":[["    for return statements with variables as a value                                                                                ",{}]],"41":[["      returns correct AST node for a value that doesn't need copy",{"fg":2}],["                                                                  ",{}]],"42":[["      returns correct AST node for a value that needs copy",{"fg":2}],["                                                                         ",{}]],"43":[["                                                                                                                                   ",{}]],"44":[["Y2R::AST::YCP::StmtBlock                                                                                                           ",{}]],"45":[["  #compile                                                                                                                         ",{}]],"46":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"47":[["                                                                                                                                   ",{}]],"48":[["Y2R::AST::YCP::Switch                                                                                                              ",{}]],"49":[["  #compile                                                                                                                         ",{}]],"50":[["    emits correct code for empty switch statements",{"fg":2}],["                                                                                 ",{}]],"51":[["    emits correct code for switch statements with one case and no default",{"fg":2}],["                                                          ",{}]],"52":[["    emits correct code for switch statements with multiple cases and no default",{"fg":2}],["                                                    ",{}]]}}],[0.016193,{"lines":{"0":[["    returns correct AST node for blocks with a constructor",{"fg":2}],["                                                                         ",{}]],"1":[["    raises an exception for blocks whose name isn't a Ruby class name",{"fg":2}],["                                                              ",{}]],"2":[["    in context with export_private == false                                                                                        ",{}]],"3":[["      does not export private symbols",{"fg":2}],["                                                                                              ",{}]],"4":[["    in context with export_private == true                                                                                         ",{}]],"5":[["      does exports private symbols",{"fg":2}],["                                                                                                 ",{}]],"6":[["                                                                                                                                   ",{}]],"7":[["Y2R::AST::YCP::Repeat                                                                                                              ",{}]],"8":[["  #compile                                                                                                                         ",{}]],"9":[["    returns correct AST node for repeat statements without do",{"fg":2}],["                                                                      ",{}]],"10":[["    returns correct AST node for repeat statements with do",{"fg":2}],["                                                                         ",{}]],"12":[["Y2R::AST::YCP::Return                                                                                                              ",{}]],"14":[["    for return statements at the client toplevel                                                                                   ",{}]],"15":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"16":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"17":[["    for return statements inside a function                                                                                        ",{}]],"18":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"19":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"20":[["    for return statements inside a function which is inside a client toplevel                                                      ",{}]],"21":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"22":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"23":[["    for return statements inside a function which is inside a block expression                                                     ",{}]],"24":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"25":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"26":[["    for return statements inside a block expression                                                                                ",{}]],"27":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"28":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"29":[["    for return statements inside a block expression which is inside a client toplevel                                              ",{}]],"30":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"31":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"32":[["    for return statements inside a block expression which is inside a function                                                     ",{}]],"33":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"34":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"35":[["    for return statements with variables as a value                                                                                ",{}]],"36":[["      returns correct AST node for a value that doesn't need copy",{"fg":2}],["                                                                  ",{}]],"37":[["      returns correct AST node for a value that needs copy",{"fg":2}],["                                                                         ",{}]],"38":[["                                                                                                                                   ",{}]],"39":[["Y2R::AST::YCP::StmtBlock                                                                                                           ",{}]],"40":[["  #compile                                                                                                                         ",{}]],"41":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"42":[["                                                                                                                                   ",{}]],"43":[["Y2R::AST::YCP::Switch                                                                                                              ",{}]],"44":[["  #compile                                                                                                                         ",{}]],"45":[["    emits correct code for empty switch statements",{"fg":2}],["                                                                                 ",{}]],"46":[["    emits correct code for switch statements with one case and no default",{"fg":2}],["                                                          ",{}]],"47":[["    emits correct code for switch statements with multiple cases and no default",{"fg":2}],["                                                    ",{}]],"48":[["    emits correct code for switch statements with one case and a default",{"fg":2}],["                                                           ",{}]],"49":[["    emits correct code for switch statements with multiple cases and a default",{"fg":2}],["                                                     ",{}]],"50":[["                                                                                                                                   ",{}]],"51":[["Y2R::AST::YCP::Symbol                                                                                                              ",{}]],"52":[["  #needs_copy?                                                                                                                     ",{}]]}}],[0.016653,{"lines":{"0":[["      does not export private symbols",{"fg":2}],["                                                                                              ",{}]],"1":[["    in context with export_private == true                                                                                         ",{}]],"2":[["      does exports private symbols",{"fg":2}],["                                                                                                 ",{}]],"3":[["                                                                                                                                   ",{}]],"4":[["Y2R::AST::YCP::Repeat                                                                                                              ",{}]],"5":[["  #compile                                                                                                                         ",{}]],"6":[["    returns correct AST node for repeat statements without do",{"fg":2}],["                                                                      ",{}]],"7":[["    returns correct AST node for repeat statements with do",{"fg":2}],["                                                                         ",{}]],"8":[["                                                                                                                                   ",{}]],"9":[["Y2R::AST::YCP::Return                                                                                                              ",{}]],"10":[["  #compile                                                                                                                         ",{}]],"11":[["    for return statements at the client toplevel                                                                                   ",{}]],"12":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"13":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"14":[["    for return statements inside a function                                                                                        ",{}]],"17":[["    for return statements inside a function which is inside a client toplevel                                                      ",{}]],"20":[["    for return statements inside a function which is inside a block expression                                                     ",{}]],"23":[["    for return statements inside a block expression                                                                                ",{}]],"26":[["    for return statements inside a block expression which is inside a client toplevel                                              ",{}]],"29":[["    for return statements inside a block expression which is inside a function                                                     ",{}]],"32":[["    for return statements with variables as a value                                                                                ",{}]],"33":[["      returns correct AST node for a value that doesn't need copy",{"fg":2}],["                                                                  ",{}]],"34":[["      returns correct AST node for a value that needs copy",{"fg":2}],["                                                                         ",{}]],"35":[["                                                                                                                                   ",{}]],"36":[["Y2R::AST::YCP::StmtBlock                                                                                                           ",{}]],"37":[["  #compile                                                                                                                         ",{}]],"38":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"39":[["                                                                                                                                   ",{}]],"40":[["Y2R::AST::YCP::Switch                                                                                                              ",{}]],"41":[["  #compile                                                                                                                         ",{}]],"42":[["    emits correct code for empty switch statements",{"fg":2}],["                                                                                 ",{}]],"43":[["    emits correct code for switch statements with one case and no default",{"fg":2}],["                                                          ",{}]],"44":[["    emits correct code for switch statements with multiple cases and no default",{"fg":2}],["                                                    ",{}]],"45":[["    emits correct code for switch statements with one case and a default",{"fg":2}],["                                                           ",{}]],"46":[["    emits correct code for switch statements with multiple cases and a default",{"fg":2}],["                                                     ",{}]],"47":[["                                                                                                                                   ",{}]],"48":[["Y2R::AST::YCP::Symbol                                                                                                              ",{}]],"49":[["  #needs_copy?                                                                                                                     ",{}]],"50":[["    returns false for booleans",{"fg":2}],["                                                                                                     ",{}]],"51":[["    returns false for integers",{"fg":2}],["                                                                                                     ",{}]],"52":[["    returns false for symbols",{"fg":2}],["                                                                                                      ",{}]]}}],[0.016523,{"lines":{"0":[["                                                                                                                                   ",{}]],"1":[["Y2R::AST::YCP::Repeat                                                                                                              ",{}]],"2":[["  #compile                                                                                                                         ",{}]],"3":[["    returns correct AST node for repeat statements without do",{"fg":2}],["                                                                      ",{}]],"4":[["    returns correct AST node for repeat statements with do",{"fg":2}],["                                                                         ",{}]],"5":[["                                                                                                                                   ",{}]],"6":[["Y2R::AST::YCP::Return                                                                                                              ",{}]],"7":[["  #compile                                                                                                                         ",{}]],"8":[["    for return statements at the client toplevel                                                                                   ",{}]],"9":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"10":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"11":[["    for return statements inside a function                                                                                        ",{}]],"14":[["    for return statements inside a function which is inside a client toplevel                                                      ",{}]],"17":[["    for return statements inside a function which is inside a block expression                                                     ",{}]],"20":[["    for return statements inside a block expression                                                                                ",{}]],"23":[["    for return statements inside a block expression which is inside a client toplevel                                              ",{}]],"26":[["    for return statements inside a block expression which is inside a function                                                     ",{}]],"29":[["    for return statements with variables as a value                                                                                ",{}]],"30":[["      returns correct AST node for a value that doesn't need copy",{"fg":2}],["                                                                  ",{}]],"31":[["      returns correct AST node for a value that needs copy",{"fg":2}],["                                                                         ",{}]],"32":[["                                                                                                                                   ",{}]],"33":[["Y2R::AST::YCP::StmtBlock                                                                                                           ",{}]],"34":[["  #compile                                                                                                                         ",{}]],"35":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"36":[["                                                                                                                                   ",{}]],"37":[["Y2R::AST::YCP::Switch                                                                                                              ",{}]],"38":[["  #compile                                                                                                                         ",{}]],"39":[["    emits correct code for empty switch statements",{"fg":2}],["                                                                                 ",{}]],"40":[["    emits correct code for switch statements with one case and no default",{"fg":2}],["                                                          ",{}]],"41":[["    emits correct code for switch statements with multiple cases and no default",{"fg":2}],["                                                    ",{}]],"42":[["    emits correct code for switch statements with one case and a default",{"fg":2}],["                                                           ",{}]],"43":[["    emits correct code for switch statements with multiple cases and a default",{"fg":2}],["                                                     ",{}]],"44":[["                                                                                                                                   ",{}]],"45":[["Y2R::AST::YCP::Symbol                                                                                                              ",{}]],"46":[["  #needs_copy?                                                                                                                     ",{}]],"47":[["    returns false for booleans",{"fg":2}],["                                                                                                     ",{}]],"48":[["    returns false for integers",{"fg":2}],["                                                                                                     ",{}]],"49":[["    returns false for symbols",{"fg":2}],["                                                                                                      ",{}]],"50":[["    returns false for strings",{"fg":2}],["                                                                                                      ",{}]],"51":[["    returns false for paths",{"fg":2}],["                                                                                                        ",{}]],"52":[["    returns false for references",{"fg":2}],["                                                                                                   ",{}]]}}],[0.012823,{"lines":{"1":[["Y2R::AST::YCP::Return                                                                                                              ",{}]],"3":[["    for return statements at the client toplevel                                                                                   ",{}]],"4":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"5":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"6":[["    for return statements inside a function                                                                                        ",{}]],"7":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"8":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"9":[["    for return statements inside a function which is inside a client toplevel                                                      ",{}]],"10":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"11":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"12":[["    for return statements inside a function which is inside a block expression                                                     ",{}]],"13":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"14":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"15":[["    for return statements inside a block expression                                                                                ",{}]],"16":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"17":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"18":[["    for return statements inside a block expression which is inside a client toplevel                                              ",{}]],"19":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"20":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"21":[["    for return statements inside a block expression which is inside a function                                                     ",{}]],"22":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"23":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"24":[["    for return statements with variables as a value                                                                                ",{}]],"25":[["      returns correct AST node for a value that doesn't need copy",{"fg":2}],["                                                                  ",{}]],"26":[["      returns correct AST node for a value that needs copy",{"fg":2}],["                                                                         ",{}]],"27":[["                                                                                                                                   ",{}]],"28":[["Y2R::AST::YCP::StmtBlock                                                                                                           ",{}]],"29":[["  #compile                                                                                                                         ",{}]],"30":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"31":[["                                                                                                                                   ",{}]],"32":[["Y2R::AST::YCP::Switch                                                                                                              ",{}]],"33":[["  #compile                                                                                                                         ",{}]],"34":[["    emits correct code for empty switch statements",{"fg":2}],["                                                                                 ",{}]],"35":[["    emits correct code for switch statements with one case and no default",{"fg":2}],["                                                          ",{}]],"36":[["    emits correct code for switch statements with multiple cases and no default",{"fg":2}],["                                                    ",{}]],"37":[["    emits correct code for switch statements with one case and a default",{"fg":2}],["                                                           ",{}]],"38":[["    emits correct code for switch statements with multiple cases and a default",{"fg":2}],["                                                     ",{}]],"39":[["                                                                                                                                   ",{}]],"40":[["Y2R::AST::YCP::Symbol                                                                                                              ",{}]],"41":[["  #needs_copy?                                                                                                                     ",{}]],"42":[["    returns false for booleans",{"fg":2}],["                                                                                                     ",{}]],"43":[["    returns false for integers",{"fg":2}],["                                                                                                     ",{}]],"44":[["    returns false for symbols",{"fg":2}],["                                                                                                      ",{}]],"45":[["    returns false for strings",{"fg":2}],["                                                                                                      ",{}]],"46":[["    returns false for paths",{"fg":2}],["                                                                                                        ",{}]],"47":[["    returns false for references",{"fg":2}],["                                                                                                   ",{}]],"48":[["    returns true for other types",{"fg":2}],["                                                                                                   ",{}]],"49":[["  #compile                                                                                                                         ",{}]],"50":[["    in local context that refer to local variables                                                                                 ",{}]],"51":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"52":[["    in nested local context that refer to inner variables                                                                          ",{}]]}}],[0.007762000000000001,{"lines":{"0":[["    for return statements at the client toplevel                                                                                   ",{}]],"1":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"2":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"3":[["    for return statements inside a function                                                                                        ",{}]],"6":[["    for return statements inside a function which is inside a client toplevel                                                      ",{}]],"9":[["    for return statements inside a function which is inside a block expression                                                     ",{}]],"12":[["    for return statements inside a block expression                                                                                ",{}]],"15":[["    for return statements inside a block expression which is inside a client toplevel                                              ",{}]],"18":[["    for return statements inside a block expression which is inside a function                                                     ",{}]],"21":[["    for return statements with variables as a value                                                                                ",{}]],"22":[["      returns correct AST node for a value that doesn't need copy",{"fg":2}],["                                                                  ",{}]],"23":[["      returns correct AST node for a value that needs copy",{"fg":2}],["                                                                         ",{}]],"24":[["                                                                                                                                   ",{}]],"25":[["Y2R::AST::YCP::StmtBlock                                                                                                           ",{}]],"26":[["  #compile                                                                                                                         ",{}]],"27":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"28":[["                                                                                                                                   ",{}]],"29":[["Y2R::AST::YCP::Switch                                                                                                              ",{}]],"30":[["  #compile                                                                                                                         ",{}]],"31":[["    emits correct code for empty switch statements",{"fg":2}],["                                                                                 ",{}]],"32":[["    emits correct code for switch statements with one case and no default",{"fg":2}],["                                                          ",{}]],"33":[["    emits correct code for switch statements with multiple cases and no default",{"fg":2}],["                                                    ",{}]],"34":[["    emits correct code for switch statements with one case and a default",{"fg":2}],["                                                           ",{}]],"35":[["    emits correct code for switch statements with multiple cases and a default",{"fg":2}],["                                                     ",{}]],"36":[["                                                                                                                                   ",{}]],"37":[["Y2R::AST::YCP::Symbol                                                                                                              ",{}]],"38":[["  #needs_copy?                                                                                                                     ",{}]],"39":[["    returns false for booleans",{"fg":2}],["                                                                                                     ",{}]],"40":[["    returns false for integers",{"fg":2}],["                                                                                                     ",{}]],"41":[["    returns false for symbols",{"fg":2}],["                                                                                                      ",{}]],"42":[["    returns false for strings",{"fg":2}],["                                                                                                      ",{}]],"43":[["    returns false for paths",{"fg":2}],["                                                                                                        ",{}]],"44":[["    returns false for references",{"fg":2}],["                                                                                                   ",{}]],"45":[["    returns true for other types",{"fg":2}],["                                                                                                   ",{}]],"46":[["  #compile                                                                                                                         ",{}]],"47":[["    in local context that refer to local variables                                                                                 ",{}]],"48":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"49":[["    in nested local context that refer to inner variables                                                                          ",{}]],"50":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"51":[["  #compile_as_copy_arg_call                                                                                                        ",{}]],"52":[["    in local context that refer to local variables                                                                                 ",{}]]}}],[0.009837,{"lines":{"0":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"1":[["    for return statements inside a function                                                                                        ",{}]],"2":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"3":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"4":[["    for return statements inside a function which is inside a client toplevel                                                      ",{}]],"5":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"6":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"7":[["    for return statements inside a function which is inside a block expression                                                     ",{}]],"8":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"9":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"10":[["    for return statements inside a block expression                                                                                ",{}]],"11":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"12":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"13":[["    for return statements inside a block expression which is inside a client toplevel                                              ",{}]],"14":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"15":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"16":[["    for return statements inside a block expression which is inside a function                                                     ",{}]],"17":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"18":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"19":[["    for return statements with variables as a value                                                                                ",{}]],"20":[["      returns correct AST node for a value that doesn't need copy",{"fg":2}],["                                                                  ",{}]],"21":[["      returns correct AST node for a value that needs copy",{"fg":2}],["                                                                         ",{}]],"22":[["                                                                                                                                   ",{}]],"23":[["Y2R::AST::YCP::StmtBlock                                                                                                           ",{}]],"24":[["  #compile                                                                                                                         ",{}]],"25":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"26":[["                                                                                                                                   ",{}]],"27":[["Y2R::AST::YCP::Switch                                                                                                              ",{}]],"28":[["  #compile                                                                                                                         ",{}]],"29":[["    emits correct code for empty switch statements",{"fg":2}],["                                                                                 ",{}]],"30":[["    emits correct code for switch statements with one case and no default",{"fg":2}],["                                                          ",{}]],"31":[["    emits correct code for switch statements with multiple cases and no default",{"fg":2}],["                                                    ",{}]],"32":[["    emits correct code for switch statements with one case and a default",{"fg":2}],["                                                           ",{}]],"33":[["    emits correct code for switch statements with multiple cases and a default",{"fg":2}],["                                                     ",{}]],"34":[["                                                                                                                                   ",{}]],"35":[["Y2R::AST::YCP::Symbol                                                                                                              ",{}]],"36":[["  #needs_copy?                                                                                                                     ",{}]],"37":[["    returns false for booleans",{"fg":2}],["                                                                                                     ",{}]],"38":[["    returns false for integers",{"fg":2}],["                                                                                                     ",{}]],"39":[["    returns false for symbols",{"fg":2}],["                                                                                                      ",{}]],"40":[["    returns false for strings",{"fg":2}],["                                                                                                      ",{}]],"41":[["    returns false for paths",{"fg":2}],["                                                                                                        ",{}]],"42":[["    returns false for references",{"fg":2}],["                                                                                                   ",{}]],"43":[["    returns true for other types",{"fg":2}],["                                                                                                   ",{}]],"44":[["  #compile                                                                                                                         ",{}]],"45":[["    in local context that refer to local variables                                                                                 ",{}]],"46":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"47":[["    in nested local context that refer to inner variables                                                                          ",{}]],"49":[["  #compile_as_copy_arg_call                                                                                                        ",{}]],"50":[["    in local context that refer to local variables                                                                                 ",{}]],"51":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"52":[["    in nested local context that refer to inner variables                                                                          ",{}]]}}],[0.015789,{"lines":{"1":[["    for return statements inside a function which is inside a client toplevel                                                      ",{}]],"4":[["    for return statements inside a function which is inside a block expression                                                     ",{}]],"7":[["    for return statements inside a block expression                                                                                ",{}]],"10":[["    for return statements inside a block expression which is inside a client toplevel                                              ",{}]],"13":[["    for return statements inside a block expression which is inside a function                                                     ",{}]],"16":[["    for return statements with variables as a value                                                                                ",{}]],"17":[["      returns correct AST node for a value that doesn't need copy",{"fg":2}],["                                                                  ",{}]],"18":[["      returns correct AST node for a value that needs copy",{"fg":2}],["                                                                         ",{}]],"19":[["                                                                                                                                   ",{}]],"20":[["Y2R::AST::YCP::StmtBlock                                                                                                           ",{}]],"21":[["  #compile                                                                                                                         ",{}]],"22":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"23":[["                                                                                                                                   ",{}]],"24":[["Y2R::AST::YCP::Switch                                                                                                              ",{}]],"25":[["  #compile                                                                                                                         ",{}]],"26":[["    emits correct code for empty switch statements",{"fg":2}],["                                                                                 ",{}]],"27":[["    emits correct code for switch statements with one case and no default",{"fg":2}],["                                                          ",{}]],"28":[["    emits correct code for switch statements with multiple cases and no default",{"fg":2}],["                                                    ",{}]],"29":[["    emits correct code for switch statements with one case and a default",{"fg":2}],["                                                           ",{}]],"30":[["    emits correct code for switch statements with multiple cases and a default",{"fg":2}],["                                                     ",{}]],"31":[["                                                                                                                                   ",{}]],"32":[["Y2R::AST::YCP::Symbol                                                                                                              ",{}]],"33":[["  #needs_copy?                                                                                                                     ",{}]],"34":[["    returns false for booleans",{"fg":2}],["                                                                                                     ",{}]],"35":[["    returns false for integers",{"fg":2}],["                                                                                                     ",{}]],"36":[["    returns false for symbols",{"fg":2}],["                                                                                                      ",{}]],"37":[["    returns false for strings",{"fg":2}],["                                                                                                      ",{}]],"38":[["    returns false for paths",{"fg":2}],["                                                                                                        ",{}]],"39":[["    returns false for references",{"fg":2}],["                                                                                                   ",{}]],"40":[["    returns true for other types",{"fg":2}],["                                                                                                   ",{}]],"41":[["  #compile                                                                                                                         ",{}]],"42":[["    in local context that refer to local variables                                                                                 ",{}]],"43":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"44":[["    in nested local context that refer to inner variables                                                                          ",{}]],"45":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"46":[["  #compile_as_copy_arg_call                                                                                                        ",{}]],"47":[["    in local context that refer to local variables                                                                                 ",{}]],"49":[["    in nested local context that refer to inner variables                                                                          ",{}]],"50":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"51":[["  #compile_as_publish_call                                                                                                         ",{}]],"52":[["    returns correct AST node for global symbols",{"fg":2}],["                                                                                    ",{}]]}}],[0.006172000000000001,{"lines":{"0":[["    for return statements inside a function which is inside a block expression                                                     ",{}]],"1":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"2":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"3":[["    for return statements inside a block expression                                                                                ",{}]],"4":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"5":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"6":[["    for return statements inside a block expression which is inside a client toplevel                                              ",{}]],"7":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"8":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"9":[["    for return statements inside a block expression which is inside a function                                                     ",{}]],"10":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"11":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"12":[["    for return statements with variables as a value                                                                                ",{}]],"13":[["      returns correct AST node for a value that doesn't need copy",{"fg":2}],["                                                                  ",{}]],"14":[["      returns correct AST node for a value that needs copy",{"fg":2}],["                                                                         ",{}]],"15":[["                                                                                                                                   ",{}]],"16":[["Y2R::AST::YCP::StmtBlock                                                                                                           ",{}]],"17":[["  #compile                                                                                                                         ",{}]],"18":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"20":[["Y2R::AST::YCP::Switch                                                                                                              ",{}]],"22":[["    emits correct code for empty switch statements",{"fg":2}],["                                                                                 ",{}]],"23":[["    emits correct code for switch statements with one case and no default",{"fg":2}],["                                                          ",{}]],"24":[["    emits correct code for switch statements with multiple cases and no default",{"fg":2}],["                                                    ",{}]],"25":[["    emits correct code for switch statements with one case and a default",{"fg":2}],["                                                           ",{}]],"26":[["    emits correct code for switch statements with multiple cases and a default",{"fg":2}],["                                                     ",{}]],"27":[["                                                                                                                                   ",{}]],"28":[["Y2R::AST::YCP::Symbol                                                                                                              ",{}]],"29":[["  #needs_copy?                                                                                                                     ",{}]],"30":[["    returns false for booleans",{"fg":2}],["                                                                                                     ",{}]],"31":[["    returns false for integers",{"fg":2}],["                                                                                                     ",{}]],"32":[["    returns false for symbols",{"fg":2}],["                                                                                                      ",{}]],"33":[["    returns false for strings",{"fg":2}],["                                                                                                      ",{}]],"34":[["    returns false for paths",{"fg":2}],["                                                                                                        ",{}]],"35":[["    returns false for references",{"fg":2}],["                                                                                                   ",{}]],"36":[["    returns true for other types",{"fg":2}],["                                                                                                   ",{}]],"37":[["  #compile                                                                                                                         ",{}]],"38":[["    in local context that refer to local variables                                                                                 ",{}]],"39":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"40":[["    in nested local context that refer to inner variables                                                                          ",{}]],"41":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"42":[["  #compile_as_copy_arg_call                                                                                                        ",{}]],"43":[["    in local context that refer to local variables                                                                                 ",{}]],"44":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"45":[["    in nested local context that refer to inner variables                                                                          ",{}]],"46":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"47":[["  #compile_as_publish_call                                                                                                         ",{}]],"48":[["    returns correct AST node for global symbols",{"fg":2}],["                                                                                    ",{}]],"49":[["    returns correct AST node for non-global symbols",{"fg":2}],["                                                                                ",{}]],"50":[["                                                                                                                                   ",{}]],"51":[["Y2R::AST::YCP::Textdomain                                                                                                          ",{}]],"52":[["  #compile                                                                                                                         ",{}]]}}],[0.022001,{"lines":{"0":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"1":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"2":[["    for return statements inside a block expression                                                                                ",{}]],"3":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"4":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"5":[["    for return statements inside a block expression which is inside a client toplevel                                              ",{}]],"6":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"7":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"8":[["    for return statements inside a block expression which is inside a function                                                     ",{}]],"9":[["      returns correct AST node for a return without a value",{"fg":2}],["                                                                        ",{}]],"10":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"11":[["    for return statements with variables as a value                                                                                ",{}]],"12":[["      returns correct AST node for a value that doesn't need copy",{"fg":2}],["                                                                  ",{}]],"13":[["      returns correct AST node for a value that needs copy",{"fg":2}],["                                                                         ",{}]],"14":[["                                                                                                                                   ",{}]],"15":[["Y2R::AST::YCP::StmtBlock                                                                                                           ",{}]],"16":[["  #compile                                                                                                                         ",{}]],"17":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"18":[["                                                                                                                                   ",{}]],"19":[["Y2R::AST::YCP::Switch                                                                                                              ",{}]],"20":[["  #compile                                                                                                                         ",{}]],"21":[["    emits correct code for empty switch statements",{"fg":2}],["                                                                                 ",{}]],"22":[["    emits correct code for switch statements with one case and no default",{"fg":2}],["                                                          ",{}]],"23":[["    emits correct code for switch statements with multiple cases and no default",{"fg":2}],["                                                    ",{}]],"24":[["    emits correct code for switch statements with one case and a default",{"fg":2}],["                                                           ",{}]],"25":[["    emits correct code for switch statements with multiple cases and a default",{"fg":2}],["                                                     ",{}]],"26":[["                                                                                                                                   ",{}]],"27":[["Y2R::AST::YCP::Symbol                                                                                                              ",{}]],"28":[["  #needs_copy?                                                                                                                     ",{}]],"29":[["    returns false for booleans",{"fg":2}],["                                                                                                     ",{}]],"30":[["    returns false for integers",{"fg":2}],["                                                                                                     ",{}]],"31":[["    returns false for symbols",{"fg":2}],["                                                                                                      ",{}]],"32":[["    returns false for strings",{"fg":2}],["                                                                                                      ",{}]],"33":[["    returns false for paths",{"fg":2}],["                                                                                                        ",{}]],"34":[["    returns false for references",{"fg":2}],["                                                                                                   ",{}]],"35":[["    returns true for other types",{"fg":2}],["                                                                                                   ",{}]],"36":[["  #compile                                                                                                                         ",{}]],"37":[["    in local context that refer to local variables                                                                                 ",{}]],"38":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"39":[["    in nested local context that refer to inner variables                                                                          ",{}]],"40":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"41":[["  #compile_as_copy_arg_call                                                                                                        ",{}]],"42":[["    in local context that refer to local variables                                                                                 ",{}]],"43":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"44":[["    in nested local context that refer to inner variables                                                                          ",{}]],"45":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"46":[["  #compile_as_publish_call                                                                                                         ",{}]],"47":[["    returns correct AST node for global symbols",{"fg":2}],["                                                                                    ",{}]],"48":[["    returns correct AST node for non-global symbols",{"fg":2}],["                                                                                ",{}]],"49":[["                                                                                                                                   ",{}]],"50":[["Y2R::AST::YCP::Textdomain                                                                                                          ",{}]],"51":[["  #compile                                                                                                                         ",{}]],"52":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]]}}],[0.013739,{"lines":{"2":[["    for return statements with variables as a value                                                                                ",{}]],"3":[["      returns correct AST node for a value that doesn't need copy",{"fg":2}],["                                                                  ",{}]],"4":[["      returns correct AST node for a value that needs copy",{"fg":2}],["                                                                         ",{}]],"5":[["                                                                                                                                   ",{}]],"6":[["Y2R::AST::YCP::StmtBlock                                                                                                           ",{}]],"7":[["  #compile                                                                                                                         ",{}]],"8":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"9":[["                                                                                                                                   ",{}]],"10":[["Y2R::AST::YCP::Switch                                                                                                              ",{}]],"11":[["  #compile                                                                                                                         ",{}]],"12":[["    emits correct code for empty switch statements",{"fg":2}],["                                                                                 ",{}]],"13":[["    emits correct code for switch statements with one case and no default",{"fg":2}],["                                                          ",{}]],"14":[["    emits correct code for switch statements with multiple cases and no default",{"fg":2}],["                                                    ",{}]],"15":[["    emits correct code for switch statements with one case and a default",{"fg":2}],["                                                           ",{}]],"16":[["    emits correct code for switch statements with multiple cases and a default",{"fg":2}],["                                                     ",{}]],"17":[["                                                                                                                                   ",{}]],"18":[["Y2R::AST::YCP::Symbol                                                                                                              ",{}]],"19":[["  #needs_copy?                                                                                                                     ",{}]],"20":[["    returns false for booleans",{"fg":2}],["                                                                                                     ",{}]],"21":[["    returns false for integers",{"fg":2}],["                                                                                                     ",{}]],"22":[["    returns false for symbols",{"fg":2}],["                                                                                                      ",{}]],"23":[["    returns false for strings",{"fg":2}],["                                                                                                      ",{}]],"24":[["    returns false for paths",{"fg":2}],["                                                                                                        ",{}]],"25":[["    returns false for references",{"fg":2}],["                                                                                                   ",{}]],"26":[["    returns true for other types",{"fg":2}],["                                                                                                   ",{}]],"27":[["  #compile                                                                                                                         ",{}]],"28":[["    in local context that refer to local variables                                                                                 ",{}]],"29":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"30":[["    in nested local context that refer to inner variables                                                                          ",{}]],"31":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"32":[["  #compile_as_copy_arg_call                                                                                                        ",{}]],"33":[["    in local context that refer to local variables                                                                                 ",{}]],"34":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"35":[["    in nested local context that refer to inner variables                                                                          ",{}]],"36":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"37":[["  #compile_as_publish_call                                                                                                         ",{}]],"38":[["    returns correct AST node for global symbols",{"fg":2}],["                                                                                    ",{}]],"39":[["    returns correct AST node for non-global symbols",{"fg":2}],["                                                                                ",{}]],"40":[["                                                                                                                                   ",{}]],"41":[["Y2R::AST::YCP::Textdomain                                                                                                          ",{}]],"42":[["  #compile                                                                                                                         ",{}]],"43":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"44":[["                                                                                                                                   ",{}]],"45":[["Y2R::AST::YCP::Typedef                                                                                                             ",{}]],"46":[["  #compile                                                                                                                         ",{}]],"47":[["    returns nil",{"fg":2}],["                                                                                                                    ",{}]],"48":[["                                                                                                                                   ",{}]],"49":[["Y2R::AST::YCP::UnspecBlock                                                                                                         ",{}]],"50":[["  #compile                                                                                                                         ",{}]],"51":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"52":[["  #compile_as_block                                                                                                                ",{}]]}}],[0.007075,{"lines":{"0":[["      returns correct AST node for a return with a value",{"fg":2}],["                                                                           ",{}]],"1":[["    for return statements with variables as a value                                                                                ",{}]],"2":[["      returns correct AST node for a value that doesn't need copy",{"fg":2}],["                                                                  ",{}]],"3":[["      returns correct AST node for a value that needs copy",{"fg":2}],["                                                                         ",{}]],"4":[["                                                                                                                                   ",{}]],"5":[["Y2R::AST::YCP::StmtBlock                                                                                                           ",{}]],"6":[["  #compile                                                                                                                         ",{}]],"7":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"8":[["                                                                                                                                   ",{}]],"9":[["Y2R::AST::YCP::Switch                                                                                                              ",{}]],"10":[["  #compile                                                                                                                         ",{}]],"11":[["    emits correct code for empty switch statements",{"fg":2}],["                                                                                 ",{}]],"12":[["    emits correct code for switch statements with one case and no default",{"fg":2}],["                                                          ",{}]],"13":[["    emits correct code for switch statements with multiple cases and no default",{"fg":2}],["                                                    ",{}]],"14":[["    emits correct code for switch statements with one case and a default",{"fg":2}],["                                                           ",{}]],"15":[["    emits correct code for switch statements with multiple cases and a default",{"fg":2}],["                                                     ",{}]],"16":[["                                                                                                                                   ",{}]],"17":[["Y2R::AST::YCP::Symbol                                                                                                              ",{}]],"18":[["  #needs_copy?                                                                                                                     ",{}]],"19":[["    returns false for booleans",{"fg":2}],["                                                                                                     ",{}]],"20":[["    returns false for integers",{"fg":2}],["                                                                                                     ",{}]],"21":[["    returns false for symbols",{"fg":2}],["                                                                                                      ",{}]],"22":[["    returns false for strings",{"fg":2}],["                                                                                                      ",{}]],"23":[["    returns false for paths",{"fg":2}],["                                                                                                        ",{}]],"24":[["    returns false for references",{"fg":2}],["                                                                                                   ",{}]],"25":[["    returns true for other types",{"fg":2}],["                                                                                                   ",{}]],"26":[["  #compile                                                                                                                         ",{}]],"27":[["    in local context that refer to local variables                                                                                 ",{}]],"28":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"29":[["    in nested local context that refer to inner variables                                                                          ",{}]],"30":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"31":[["  #compile_as_copy_arg_call                                                                                                        ",{}]],"32":[["    in local context that refer to local variables                                                                                 ",{}]],"33":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"34":[["    in nested local context that refer to inner variables                                                                          ",{}]],"35":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"36":[["  #compile_as_publish_call                                                                                                         ",{}]],"37":[["    returns correct AST node for global symbols",{"fg":2}],["                                                                                    ",{}]],"38":[["    returns correct AST node for non-global symbols",{"fg":2}],["                                                                                ",{}]],"39":[["                                                                                                                                   ",{}]],"40":[["Y2R::AST::YCP::Textdomain                                                                                                          ",{}]],"41":[["  #compile                                                                                                                         ",{}]],"42":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"43":[["                                                                                                                                   ",{}]],"44":[["Y2R::AST::YCP::Typedef                                                                                                             ",{}]],"45":[["  #compile                                                                                                                         ",{}]],"46":[["    returns nil",{"fg":2}],["                                                                                                                    ",{}]],"47":[["                                                                                                                                   ",{}]],"48":[["Y2R::AST::YCP::UnspecBlock                                                                                                         ",{}]],"49":[["  #compile                                                                                                                         ",{}]],"50":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"51":[["  #compile_as_block                                                                                                                ",{}]],"52":[["    returns correct AST node without arguments",{"fg":2}],["                                                                                     ",{}]]}}],[0.058468,{"lines":{"0":[["    for return statements with variables as a value                                                                                ",{}]],"1":[["      returns correct AST node for a value that doesn't need copy",{"fg":2}],["                                                                  ",{}]],"2":[["      returns correct AST node for a value that needs copy",{"fg":2}],["                                                                         ",{}]],"3":[["                                                                                                                                   ",{}]],"4":[["Y2R::AST::YCP::StmtBlock                                                                                                           ",{}]],"5":[["  #compile                                                                                                                         ",{}]],"6":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"7":[["                                                                                                                                   ",{}]],"8":[["Y2R::AST::YCP::Switch                                                                                                              ",{}]],"9":[["  #compile                                                                                                                         ",{}]],"10":[["    emits correct code for empty switch statements",{"fg":2}],["                                                                                 ",{}]],"11":[["    emits correct code for switch statements with one case and no default",{"fg":2}],["                                                          ",{}]],"12":[["    emits correct code for switch statements with multiple cases and no default",{"fg":2}],["                                                    ",{}]],"13":[["    emits correct code for switch statements with one case and a default",{"fg":2}],["                                                           ",{}]],"14":[["    emits correct code for switch statements with multiple cases and a default",{"fg":2}],["                                                     ",{}]],"15":[["                                                                                                                                   ",{}]],"16":[["Y2R::AST::YCP::Symbol                                                                                                              ",{}]],"17":[["  #needs_copy?                                                                                                                     ",{}]],"18":[["    returns false for booleans",{"fg":2}],["                                                                                                     ",{}]],"19":[["    returns false for integers",{"fg":2}],["                                                                                                     ",{}]],"20":[["    returns false for symbols",{"fg":2}],["                                                                                                      ",{}]],"21":[["    returns false for strings",{"fg":2}],["                                                                                                      ",{}]],"22":[["    returns false for paths",{"fg":2}],["                                                                                                        ",{}]],"23":[["    returns false for references",{"fg":2}],["                                                                                                   ",{}]],"24":[["    returns true for other types",{"fg":2}],["                                                                                                   ",{}]],"25":[["  #compile                                                                                                                         ",{}]],"26":[["    in local context that refer to local variables                                                                                 ",{}]],"27":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"28":[["    in nested local context that refer to inner variables                                                                          ",{}]],"29":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"30":[["  #compile_as_copy_arg_call                                                                                                        ",{}]],"31":[["    in local context that refer to local variables                                                                                 ",{}]],"32":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"33":[["    in nested local context that refer to inner variables                                                                          ",{}]],"34":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"35":[["  #compile_as_publish_call                                                                                                         ",{}]],"36":[["    returns correct AST node for global symbols",{"fg":2}],["                                                                                    ",{}]],"37":[["    returns correct AST node for non-global symbols",{"fg":2}],["                                                                                ",{}]],"38":[["                                                                                                                                   ",{}]],"39":[["Y2R::AST::YCP::Textdomain                                                                                                          ",{}]],"40":[["  #compile                                                                                                                         ",{}]],"41":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"42":[["                                                                                                                                   ",{}]],"43":[["Y2R::AST::YCP::Typedef                                                                                                             ",{}]],"44":[["  #compile                                                                                                                         ",{}]],"45":[["    returns nil",{"fg":2}],["                                                                                                                    ",{}]],"46":[["                                                                                                                                   ",{}]],"47":[["Y2R::AST::YCP::UnspecBlock                                                                                                         ",{}]],"48":[["  #compile                                                                                                                         ",{}]],"49":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"50":[["  #compile_as_block                                                                                                                ",{}]],"51":[["    returns correct AST node without arguments",{"fg":2}],["                                                                                     ",{}]],"52":[["    returns correct AST node with arguments",{"fg":2}],["                                                                                        ",{}]]}}],[0.014355,{"lines":{"0":[["    emits correct code for empty switch statements",{"fg":2}],["                                                                                 ",{}]],"1":[["    emits correct code for switch statements with one case and no default",{"fg":2}],["                                                          ",{}]],"2":[["    emits correct code for switch statements with multiple cases and no default",{"fg":2}],["                                                    ",{}]],"3":[["    emits correct code for switch statements with one case and a default",{"fg":2}],["                                                           ",{}]],"4":[["    emits correct code for switch statements with multiple cases and a default",{"fg":2}],["                                                     ",{}]],"5":[["                                                                                                                                   ",{}]],"6":[["Y2R::AST::YCP::Symbol                                                                                                              ",{}]],"7":[["  #needs_copy?                                                                                                                     ",{}]],"8":[["    returns false for booleans",{"fg":2}],["                                                                                                     ",{}]],"9":[["    returns false for integers",{"fg":2}],["                                                                                                     ",{}]],"10":[["    returns false for symbols",{"fg":2}],["                                                                                                      ",{}]],"11":[["    returns false for strings",{"fg":2}],["                                                                                                      ",{}]],"12":[["    returns false for paths",{"fg":2}],["                                                                                                        ",{}]],"13":[["    returns false for references",{"fg":2}],["                                                                                                   ",{}]],"14":[["    returns true for other types",{"fg":2}],["                                                                                                   ",{}]],"15":[["  #compile                                                                                                                         ",{}]],"16":[["    in local context that refer to local variables                                                                                 ",{}]],"17":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"18":[["    in nested local context that refer to inner variables                                                                          ",{}]],"19":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"20":[["  #compile_as_copy_arg_call                                                                                                        ",{}]],"21":[["    in local context that refer to local variables                                                                                 ",{}]],"22":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"23":[["    in nested local context that refer to inner variables                                                                          ",{}]],"24":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"25":[["  #compile_as_publish_call                                                                                                         ",{}]],"26":[["    returns correct AST node for global symbols",{"fg":2}],["                                                                                    ",{}]],"27":[["    returns correct AST node for non-global symbols",{"fg":2}],["                                                                                ",{}]],"28":[["                                                                                                                                   ",{}]],"29":[["Y2R::AST::YCP::Textdomain                                                                                                          ",{}]],"30":[["  #compile                                                                                                                         ",{}]],"31":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"32":[["                                                                                                                                   ",{}]],"33":[["Y2R::AST::YCP::Typedef                                                                                                             ",{}]],"34":[["  #compile                                                                                                                         ",{}]],"35":[["    returns nil",{"fg":2}],["                                                                                                                    ",{}]],"36":[["                                                                                                                                   ",{}]],"37":[["Y2R::AST::YCP::UnspecBlock                                                                                                         ",{}]],"38":[["  #compile                                                                                                                         ",{}]],"39":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"40":[["  #compile_as_block                                                                                                                ",{}]],"41":[["    returns correct AST node without arguments",{"fg":2}],["                                                                                     ",{}]],"42":[["    returns correct AST node with arguments",{"fg":2}],["                                                                                        ",{}]],"43":[["                                                                                                                                   ",{}]],"44":[["Y2R::AST::YCP::Variable                                                                                                            ",{}]],"45":[["  #compile                                                                                                                         ",{}]],"46":[["    for calls with category == \"variable\"                                                                                          ",{}]],"47":[["      that are qualified                                                                                                           ",{}]],"48":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"49":[["      that are unqualified                                                                                                         ",{}]],"50":[["        in global context that refer to global variables                                                                           ",{}]],"51":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"52":[["        in local context that refer to global variables                                                                            ",{}]]}}],[0.016661,{"lines":{"0":[["    emits correct code for switch statements with multiple cases and a default",{"fg":2}],["                                                     ",{}]],"1":[["                                                                                                                                   ",{}]],"2":[["Y2R::AST::YCP::Symbol                                                                                                              ",{}]],"3":[["  #needs_copy?                                                                                                                     ",{}]],"4":[["    returns false for booleans",{"fg":2}],["                                                                                                     ",{}]],"5":[["    returns false for integers",{"fg":2}],["                                                                                                     ",{}]],"6":[["    returns false for symbols",{"fg":2}],["                                                                                                      ",{}]],"7":[["    returns false for strings",{"fg":2}],["                                                                                                      ",{}]],"8":[["    returns false for paths",{"fg":2}],["                                                                                                        ",{}]],"9":[["    returns false for references",{"fg":2}],["                                                                                                   ",{}]],"10":[["    returns true for other types",{"fg":2}],["                                                                                                   ",{}]],"11":[["  #compile                                                                                                                         ",{}]],"12":[["    in local context that refer to local variables                                                                                 ",{}]],"13":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"14":[["    in nested local context that refer to inner variables                                                                          ",{}]],"15":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"16":[["  #compile_as_copy_arg_call                                                                                                        ",{}]],"17":[["    in local context that refer to local variables                                                                                 ",{}]],"18":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"19":[["    in nested local context that refer to inner variables                                                                          ",{}]],"20":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"21":[["  #compile_as_publish_call                                                                                                         ",{}]],"22":[["    returns correct AST node for global symbols",{"fg":2}],["                                                                                    ",{}]],"23":[["    returns correct AST node for non-global symbols",{"fg":2}],["                                                                                ",{}]],"24":[["                                                                                                                                   ",{}]],"25":[["Y2R::AST::YCP::Textdomain                                                                                                          ",{}]],"26":[["  #compile                                                                                                                         ",{}]],"27":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"29":[["Y2R::AST::YCP::Typedef                                                                                                             ",{}]],"31":[["    returns nil",{"fg":2}],["                                                                                                                    ",{}]],"33":[["Y2R::AST::YCP::UnspecBlock                                                                                                         ",{}]],"35":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"36":[["  #compile_as_block                                                                                                                ",{}]],"37":[["    returns correct AST node without arguments",{"fg":2}],["                                                                                     ",{}]],"38":[["    returns correct AST node with arguments",{"fg":2}],["                                                                                        ",{}]],"39":[["                                                                                                                                   ",{}]],"40":[["Y2R::AST::YCP::Variable                                                                                                            ",{}]],"41":[["  #compile                                                                                                                         ",{}]],"42":[["    for calls with category == \"variable\"                                                                                          ",{}]],"43":[["      that are qualified                                                                                                           ",{}]],"44":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"45":[["      that are unqualified                                                                                                         ",{}]],"46":[["        in global context that refer to global variables                                                                           ",{}]],"47":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"48":[["        in local context that refer to global variables                                                                            ",{}]],"49":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"50":[["        in local context that refer to local variables                                                                             ",{}]],"52":[["        in nested local context that refer to inner variables                                                                      ",{}]]}}],[0.011729,{"lines":{"0":[["    returns false for symbols",{"fg":2}],["                                                                                                      ",{}]],"1":[["    returns false for strings",{"fg":2}],["                                                                                                      ",{}]],"2":[["    returns false for paths",{"fg":2}],["                                                                                                        ",{}]],"3":[["    returns false for references",{"fg":2}],["                                                                                                   ",{}]],"4":[["    returns true for other types",{"fg":2}],["                                                                                                   ",{}]],"5":[["  #compile                                                                                                                         ",{}]],"6":[["    in local context that refer to local variables                                                                                 ",{}]],"7":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"8":[["    in nested local context that refer to inner variables                                                                          ",{}]],"9":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"10":[["  #compile_as_copy_arg_call                                                                                                        ",{}]],"11":[["    in local context that refer to local variables                                                                                 ",{}]],"12":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"13":[["    in nested local context that refer to inner variables                                                                          ",{}]],"14":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"15":[["  #compile_as_publish_call                                                                                                         ",{}]],"16":[["    returns correct AST node for global symbols",{"fg":2}],["                                                                                    ",{}]],"17":[["    returns correct AST node for non-global symbols",{"fg":2}],["                                                                                ",{}]],"18":[["                                                                                                                                   ",{}]],"19":[["Y2R::AST::YCP::Textdomain                                                                                                          ",{}]],"20":[["  #compile                                                                                                                         ",{}]],"21":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"22":[["                                                                                                                                   ",{}]],"23":[["Y2R::AST::YCP::Typedef                                                                                                             ",{}]],"24":[["  #compile                                                                                                                         ",{}]],"25":[["    returns nil",{"fg":2}],["                                                                                                                    ",{}]],"26":[["                                                                                                                                   ",{}]],"27":[["Y2R::AST::YCP::UnspecBlock                                                                                                         ",{}]],"28":[["  #compile                                                                                                                         ",{}]],"29":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"30":[["  #compile_as_block                                                                                                                ",{}]],"31":[["    returns correct AST node without arguments",{"fg":2}],["                                                                                     ",{}]],"32":[["    returns correct AST node with arguments",{"fg":2}],["                                                                                        ",{}]],"33":[["                                                                                                                                   ",{}]],"34":[["Y2R::AST::YCP::Variable                                                                                                            ",{}]],"35":[["  #compile                                                                                                                         ",{}]],"36":[["    for calls with category == \"variable\"                                                                                          ",{}]],"37":[["      that are qualified                                                                                                           ",{}]],"38":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"39":[["      that are unqualified                                                                                                         ",{}]],"40":[["        in global context that refer to global variables                                                                           ",{}]],"41":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"42":[["        in local context that refer to global variables                                                                            ",{}]],"43":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"44":[["        in local context that refer to local variables                                                                             ",{}]],"45":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"46":[["        in nested local context that refer to inner variables                                                                      ",{}]],"48":[["    for calls with category == \"reference\"                                                                                         ",{}]],"49":[["      that are qualified                                                                                                           ",{}]],"50":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"51":[["      that are unqualified                                                                                                         ",{}]],"52":[["        in global context that refer to global variables                                                                           ",{}]]}}],[0.012851,{"lines":{"0":[["    returns true for other types",{"fg":2}],["                                                                                                   ",{}]],"1":[["  #compile                                                                                                                         ",{}]],"2":[["    in local context that refer to local variables                                                                                 ",{}]],"3":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"4":[["    in nested local context that refer to inner variables                                                                          ",{}]],"5":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"6":[["  #compile_as_copy_arg_call                                                                                                        ",{}]],"7":[["    in local context that refer to local variables                                                                                 ",{}]],"8":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"9":[["    in nested local context that refer to inner variables                                                                          ",{}]],"10":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"11":[["  #compile_as_publish_call                                                                                                         ",{}]],"12":[["    returns correct AST node for global symbols",{"fg":2}],["                                                                                    ",{}]],"13":[["    returns correct AST node for non-global symbols",{"fg":2}],["                                                                                ",{}]],"14":[["                                                                                                                                   ",{}]],"15":[["Y2R::AST::YCP::Textdomain                                                                                                          ",{}]],"16":[["  #compile                                                                                                                         ",{}]],"17":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"19":[["Y2R::AST::YCP::Typedef                                                                                                             ",{}]],"21":[["    returns nil",{"fg":2}],["                                                                                                                    ",{}]],"23":[["Y2R::AST::YCP::UnspecBlock                                                                                                         ",{}]],"25":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"26":[["  #compile_as_block                                                                                                                ",{}]],"27":[["    returns correct AST node without arguments",{"fg":2}],["                                                                                     ",{}]],"28":[["    returns correct AST node with arguments",{"fg":2}],["                                                                                        ",{}]],"29":[["                                                                                                                                   ",{}]],"30":[["Y2R::AST::YCP::Variable                                                                                                            ",{}]],"31":[["  #compile                                                                                                                         ",{}]],"32":[["    for calls with category == \"variable\"                                                                                          ",{}]],"33":[["      that are qualified                                                                                                           ",{}]],"34":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"35":[["      that are unqualified                                                                                                         ",{}]],"36":[["        in global context that refer to global variables                                                                           ",{}]],"37":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"38":[["        in local context that refer to global variables                                                                            ",{}]],"39":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"40":[["        in local context that refer to local variables                                                                             ",{}]],"42":[["        in nested local context that refer to inner variables                                                                      ",{}]],"44":[["    for calls with category == \"reference\"                                                                                         ",{}]],"45":[["      that are qualified                                                                                                           ",{}]],"46":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"47":[["      that are unqualified                                                                                                         ",{}]],"48":[["        in global context that refer to global variables                                                                           ",{}]],"49":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"50":[["        in local context that refer to global variables                                                                            ",{}]],"51":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"52":[["        in local context that refer to local variables                                                                             ",{}]]}}],[0.015535,{"lines":{"0":[["    in nested local context that refer to inner variables                                                                          ",{}]],"1":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"2":[["  #compile_as_copy_arg_call                                                                                                        ",{}]],"3":[["    in local context that refer to local variables                                                                                 ",{}]],"4":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"5":[["    in nested local context that refer to inner variables                                                                          ",{}]],"6":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"7":[["  #compile_as_publish_call                                                                                                         ",{}]],"8":[["    returns correct AST node for global symbols",{"fg":2}],["                                                                                    ",{}]],"9":[["    returns correct AST node for non-global symbols",{"fg":2}],["                                                                                ",{}]],"10":[["                                                                                                                                   ",{}]],"11":[["Y2R::AST::YCP::Textdomain                                                                                                          ",{}]],"12":[["  #compile                                                                                                                         ",{}]],"13":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"15":[["Y2R::AST::YCP::Typedef                                                                                                             ",{}]],"17":[["    returns nil",{"fg":2}],["                                                                                                                    ",{}]],"19":[["Y2R::AST::YCP::UnspecBlock                                                                                                         ",{}]],"21":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"22":[["  #compile_as_block                                                                                                                ",{}]],"23":[["    returns correct AST node without arguments",{"fg":2}],["                                                                                     ",{}]],"24":[["    returns correct AST node with arguments",{"fg":2}],["                                                                                        ",{}]],"25":[["                                                                                                                                   ",{}]],"26":[["Y2R::AST::YCP::Variable                                                                                                            ",{}]],"27":[["  #compile                                                                                                                         ",{}]],"28":[["    for calls with category == \"variable\"                                                                                          ",{}]],"29":[["      that are qualified                                                                                                           ",{}]],"30":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"31":[["      that are unqualified                                                                                                         ",{}]],"32":[["        in global context that refer to global variables                                                                           ",{}]],"33":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"34":[["        in local context that refer to global variables                                                                            ",{}]],"35":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"36":[["        in local context that refer to local variables                                                                             ",{}]],"38":[["        in nested local context that refer to inner variables                                                                      ",{}]],"40":[["    for calls with category == \"reference\"                                                                                         ",{}]],"41":[["      that are qualified                                                                                                           ",{}]],"42":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"43":[["      that are unqualified                                                                                                         ",{}]],"44":[["        in global context that refer to global variables                                                                           ",{}]],"45":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"46":[["        in local context that refer to global variables                                                                            ",{}]],"47":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"48":[["        in local context that refer to local variables                                                                             ",{}]],"50":[["        in nested local context that refer to inner variables                                                                      ",{}]],"52":[["    for calls to toplevel functions with category == \"function\"                                                                    ",{}]]}}],[0.012179,{"lines":{"0":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"1":[["    in nested local context that refer to inner variables                                                                          ",{}]],"2":[["      returns correct AST node",{"fg":2}],["                                                                                                     ",{}]],"3":[["  #compile_as_publish_call                                                                                                         ",{}]],"4":[["    returns correct AST node for global symbols",{"fg":2}],["                                                                                    ",{}]],"5":[["    returns correct AST node for non-global symbols",{"fg":2}],["                                                                                ",{}]],"6":[["                                                                                                                                   ",{}]],"7":[["Y2R::AST::YCP::Textdomain                                                                                                          ",{}]],"8":[["  #compile                                                                                                                         ",{}]],"9":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"11":[["Y2R::AST::YCP::Typedef                                                                                                             ",{}]],"13":[["    returns nil",{"fg":2}],["                                                                                                                    ",{}]],"15":[["Y2R::AST::YCP::UnspecBlock                                                                                                         ",{}]],"17":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"18":[["  #compile_as_block                                                                                                                ",{}]],"19":[["    returns correct AST node without arguments",{"fg":2}],["                                                                                     ",{}]],"20":[["    returns correct AST node with arguments",{"fg":2}],["                                                                                        ",{}]],"21":[["                                                                                                                                   ",{}]],"22":[["Y2R::AST::YCP::Variable                                                                                                            ",{}]],"23":[["  #compile                                                                                                                         ",{}]],"24":[["    for calls with category == \"variable\"                                                                                          ",{}]],"25":[["      that are qualified                                                                                                           ",{}]],"26":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"27":[["      that are unqualified                                                                                                         ",{}]],"28":[["        in global context that refer to global variables                                                                           ",{}]],"29":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"30":[["        in local context that refer to global variables                                                                            ",{}]],"31":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"32":[["        in local context that refer to local variables                                                                             ",{}]],"34":[["        in nested local context that refer to inner variables                                                                      ",{}]],"36":[["    for calls with category == \"reference\"                                                                                         ",{}]],"37":[["      that are qualified                                                                                                           ",{}]],"38":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"39":[["      that are unqualified                                                                                                         ",{}]],"40":[["        in global context that refer to global variables                                                                           ",{}]],"41":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"42":[["        in local context that refer to global variables                                                                            ",{}]],"43":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"44":[["        in local context that refer to local variables                                                                             ",{}]],"46":[["        in nested local context that refer to inner variables                                                                      ",{}]],"48":[["    for calls to toplevel functions with category == \"function\"                                                                    ",{}]],"49":[["      returns correct AST node for unqualified variables",{"fg":2}],["                                                                           ",{}]],"50":[["      returns correct AST node for qualified variables",{"fg":2}],["                                                                             ",{}]],"51":[["    for calls to nested functions with category == \"function\"                                                                      ",{}]],"52":[["      in local context that refer to local variables                                                                               ",{}]]}}],[0.008416999999999999,{"lines":{"1":[["  #compile_as_publish_call                                                                                                         ",{}]],"2":[["    returns correct AST node for global symbols",{"fg":2}],["                                                                                    ",{}]],"3":[["    returns correct AST node for non-global symbols",{"fg":2}],["                                                                                ",{}]],"4":[["                                                                                                                                   ",{}]],"5":[["Y2R::AST::YCP::Textdomain                                                                                                          ",{}]],"6":[["  #compile                                                                                                                         ",{}]],"7":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"8":[["                                                                                                                                   ",{}]],"9":[["Y2R::AST::YCP::Typedef                                                                                                             ",{}]],"10":[["  #compile                                                                                                                         ",{}]],"11":[["    returns nil",{"fg":2}],["                                                                                                                    ",{}]],"12":[["                                                                                                                                   ",{}]],"13":[["Y2R::AST::YCP::UnspecBlock                                                                                                         ",{}]],"14":[["  #compile                                                                                                                         ",{}]],"15":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"16":[["  #compile_as_block                                                                                                                ",{}]],"17":[["    returns correct AST node without arguments",{"fg":2}],["                                                                                     ",{}]],"18":[["    returns correct AST node with arguments",{"fg":2}],["                                                                                        ",{}]],"19":[["                                                                                                                                   ",{}]],"20":[["Y2R::AST::YCP::Variable                                                                                                            ",{}]],"21":[["  #compile                                                                                                                         ",{}]],"22":[["    for calls with category == \"variable\"                                                                                          ",{}]],"23":[["      that are qualified                                                                                                           ",{}]],"24":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"25":[["      that are unqualified                                                                                                         ",{}]],"26":[["        in global context that refer to global variables                                                                           ",{}]],"27":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"28":[["        in local context that refer to global variables                                                                            ",{}]],"30":[["        in local context that refer to local variables                                                                             ",{}]],"32":[["        in nested local context that refer to inner variables                                                                      ",{}]],"34":[["    for calls with category == \"reference\"                                                                                         ",{}]],"35":[["      that are qualified                                                                                                           ",{}]],"36":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"37":[["      that are unqualified                                                                                                         ",{}]],"38":[["        in global context that refer to global variables                                                                           ",{}]],"39":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"40":[["        in local context that refer to global variables                                                                            ",{}]],"42":[["        in local context that refer to local variables                                                                             ",{}]],"44":[["        in nested local context that refer to inner variables                                                                      ",{}]],"46":[["    for calls to toplevel functions with category == \"function\"                                                                    ",{}]],"47":[["      returns correct AST node for unqualified variables",{"fg":2}],["                                                                           ",{}]],"48":[["      returns correct AST node for qualified variables",{"fg":2}],["                                                                             ",{}]],"49":[["    for calls to nested functions with category == \"function\"                                                                      ",{}]],"50":[["      in local context that refer to local variables                                                                               ",{}]],"51":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"52":[["      in nested local context that refer to inner variables                                                                        ",{}]]}}],[0.014289,{"lines":{"0":[["Y2R::AST::YCP::Textdomain                                                                                                          ",{}]],"1":[["  #compile                                                                                                                         ",{}]],"2":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"3":[["                                                                                                                                   ",{}]],"4":[["Y2R::AST::YCP::Typedef                                                                                                             ",{}]],"5":[["  #compile                                                                                                                         ",{}]],"6":[["    returns nil",{"fg":2}],["                                                                                                                    ",{}]],"7":[["                                                                                                                                   ",{}]],"8":[["Y2R::AST::YCP::UnspecBlock                                                                                                         ",{}]],"9":[["  #compile                                                                                                                         ",{}]],"10":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"11":[["  #compile_as_block                                                                                                                ",{}]],"12":[["    returns correct AST node without arguments",{"fg":2}],["                                                                                     ",{}]],"13":[["    returns correct AST node with arguments",{"fg":2}],["                                                                                        ",{}]],"14":[["                                                                                                                                   ",{}]],"15":[["Y2R::AST::YCP::Variable                                                                                                            ",{}]],"16":[["  #compile                                                                                                                         ",{}]],"17":[["    for calls with category == \"variable\"                                                                                          ",{}]],"18":[["      that are qualified                                                                                                           ",{}]],"19":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"20":[["      that are unqualified                                                                                                         ",{}]],"21":[["        in global context that refer to global variables                                                                           ",{}]],"22":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"23":[["        in local context that refer to global variables                                                                            ",{}]],"24":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"25":[["        in local context that refer to local variables                                                                             ",{}]],"26":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"27":[["        in nested local context that refer to inner variables                                                                      ",{}]],"28":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"29":[["    for calls with category == \"reference\"                                                                                         ",{}]],"30":[["      that are qualified                                                                                                           ",{}]],"31":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"32":[["      that are unqualified                                                                                                         ",{}]],"33":[["        in global context that refer to global variables                                                                           ",{}]],"34":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"35":[["        in local context that refer to global variables                                                                            ",{}]],"36":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"37":[["        in local context that refer to local variables                                                                             ",{}]],"38":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"39":[["        in nested local context that refer to inner variables                                                                      ",{}]],"40":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"41":[["    for calls to toplevel functions with category == \"function\"                                                                    ",{}]],"42":[["      returns correct AST node for unqualified variables",{"fg":2}],["                                                                           ",{}]],"43":[["      returns correct AST node for qualified variables",{"fg":2}],["                                                                             ",{}]],"44":[["    for calls to nested functions with category == \"function\"                                                                      ",{}]],"45":[["      in local context that refer to local variables                                                                               ",{}]],"46":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"47":[["      in nested local context that refer to inner variables                                                                        ",{}]],"48":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"49":[["                                                                                                                                   ",{}]],"50":[["Y2R::AST::YCP::While                                                                                                               ",{}]],"51":[["  #compile                                                                                                                         ",{}]],"52":[["    returns correct AST node for while statements without do",{"fg":2}],["                                                                       ",{}]]}}],[0.011605,{"lines":{"0":[["    returns nil",{"fg":2}],["                                                                                                                    ",{}]],"1":[["                                                                                                                                   ",{}]],"2":[["Y2R::AST::YCP::UnspecBlock                                                                                                         ",{}]],"3":[["  #compile                                                                                                                         ",{}]],"4":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"5":[["  #compile_as_block                                                                                                                ",{}]],"6":[["    returns correct AST node without arguments",{"fg":2}],["                                                                                     ",{}]],"7":[["    returns correct AST node with arguments",{"fg":2}],["                                                                                        ",{}]],"8":[["                                                                                                                                   ",{}]],"9":[["Y2R::AST::YCP::Variable                                                                                                            ",{}]],"10":[["  #compile                                                                                                                         ",{}]],"11":[["    for calls with category == \"variable\"                                                                                          ",{}]],"12":[["      that are qualified                                                                                                           ",{}]],"13":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"14":[["      that are unqualified                                                                                                         ",{}]],"15":[["        in global context that refer to global variables                                                                           ",{}]],"16":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"17":[["        in local context that refer to global variables                                                                            ",{}]],"18":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"19":[["        in local context that refer to local variables                                                                             ",{}]],"20":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"21":[["        in nested local context that refer to inner variables                                                                      ",{}]],"23":[["    for calls with category == \"reference\"                                                                                         ",{}]],"24":[["      that are qualified                                                                                                           ",{}]],"25":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"26":[["      that are unqualified                                                                                                         ",{}]],"27":[["        in global context that refer to global variables                                                                           ",{}]],"29":[["        in local context that refer to global variables                                                                            ",{}]],"30":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"31":[["        in local context that refer to local variables                                                                             ",{}]],"32":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"33":[["        in nested local context that refer to inner variables                                                                      ",{}]],"35":[["    for calls to toplevel functions with category == \"function\"                                                                    ",{}]],"36":[["      returns correct AST node for unqualified variables",{"fg":2}],["                                                                           ",{}]],"37":[["      returns correct AST node for qualified variables",{"fg":2}],["                                                                             ",{}]],"38":[["    for calls to nested functions with category == \"function\"                                                                      ",{}]],"39":[["      in local context that refer to local variables                                                                               ",{}]],"40":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"41":[["      in nested local context that refer to inner variables                                                                        ",{}]],"42":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"43":[["                                                                                                                                   ",{}]],"44":[["Y2R::AST::YCP::While                                                                                                               ",{}]],"45":[["  #compile                                                                                                                         ",{}]],"46":[["    returns correct AST node for while statements without do",{"fg":2}],["                                                                       ",{}]],"47":[["    returns correct AST node for while statements with do",{"fg":2}],["                                                                          ",{}]],"48":[["                                                                                                                                   ",{}]],"49":[["Y2R::AST::YCP::YCPCode                                                                                                             ",{}]],"50":[["  #compile                                                                                                                         ",{}]],"51":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"52":[["  #compile_as_block                                                                                                                ",{}]]}}],[0.011751,{"lines":{"0":[["  #compile_as_block                                                                                                                ",{}]],"1":[["    returns correct AST node without arguments",{"fg":2}],["                                                                                     ",{}]],"2":[["    returns correct AST node with arguments",{"fg":2}],["                                                                                        ",{}]],"3":[["                                                                                                                                   ",{}]],"4":[["Y2R::AST::YCP::Variable                                                                                                            ",{}]],"5":[["  #compile                                                                                                                         ",{}]],"6":[["    for calls with category == \"variable\"                                                                                          ",{}]],"7":[["      that are qualified                                                                                                           ",{}]],"8":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"9":[["      that are unqualified                                                                                                         ",{}]],"10":[["        in global context that refer to global variables                                                                           ",{}]],"11":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"12":[["        in local context that refer to global variables                                                                            ",{}]],"13":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"14":[["        in local context that refer to local variables                                                                             ",{}]],"15":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"16":[["        in nested local context that refer to inner variables                                                                      ",{}]],"17":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"18":[["    for calls with category == \"reference\"                                                                                         ",{}]],"19":[["      that are qualified                                                                                                           ",{}]],"20":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"21":[["      that are unqualified                                                                                                         ",{}]],"22":[["        in global context that refer to global variables                                                                           ",{}]],"23":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"24":[["        in local context that refer to global variables                                                                            ",{}]],"25":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"26":[["        in local context that refer to local variables                                                                             ",{}]],"27":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"28":[["        in nested local context that refer to inner variables                                                                      ",{}]],"29":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"30":[["    for calls to toplevel functions with category == \"function\"                                                                    ",{}]],"31":[["      returns correct AST node for unqualified variables",{"fg":2}],["                                                                           ",{}]],"32":[["      returns correct AST node for qualified variables",{"fg":2}],["                                                                             ",{}]],"33":[["    for calls to nested functions with category == \"function\"                                                                      ",{}]],"34":[["      in local context that refer to local variables                                                                               ",{}]],"35":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"36":[["      in nested local context that refer to inner variables                                                                        ",{}]],"37":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"38":[["                                                                                                                                   ",{}]],"39":[["Y2R::AST::YCP::While                                                                                                               ",{}]],"40":[["  #compile                                                                                                                         ",{}]],"41":[["    returns correct AST node for while statements without do",{"fg":2}],["                                                                       ",{}]],"42":[["    returns correct AST node for while statements with do",{"fg":2}],["                                                                          ",{}]],"44":[["Y2R::AST::YCP::YCPCode                                                                                                             ",{}]],"46":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"47":[["  #compile_as_block                                                                                                                ",{}]],"48":[["    returns correct AST node without arguments",{"fg":2}],["                                                                                     ",{}]],"49":[["    returns correct AST node with arguments",{"fg":2}],["                                                                                        ",{}]],"50":[["                                                                                                                                   ",{}]],"51":[["Y2R::AST::YCP::YEBinary                                                                                                            ",{}]],"52":[["  #compile                                                                                                                         ",{}]]}}],[0.025198,{"lines":{"0":[["    returns correct AST node without arguments",{"fg":2}],["                                                                                     ",{}]],"1":[["    returns correct AST node with arguments",{"fg":2}],["                                                                                        ",{}]],"2":[["                                                                                                                                   ",{}]],"3":[["Y2R::AST::YCP::Variable                                                                                                            ",{}]],"4":[["  #compile                                                                                                                         ",{}]],"5":[["    for calls with category == \"variable\"                                                                                          ",{}]],"6":[["      that are qualified                                                                                                           ",{}]],"7":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"8":[["      that are unqualified                                                                                                         ",{}]],"9":[["        in global context that refer to global variables                                                                           ",{}]],"10":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"11":[["        in local context that refer to global variables                                                                            ",{}]],"12":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"13":[["        in local context that refer to local variables                                                                             ",{}]],"14":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"15":[["        in nested local context that refer to inner variables                                                                      ",{}]],"16":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"17":[["    for calls with category == \"reference\"                                                                                         ",{}]],"18":[["      that are qualified                                                                                                           ",{}]],"19":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"20":[["      that are unqualified                                                                                                         ",{}]],"21":[["        in global context that refer to global variables                                                                           ",{}]],"22":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"23":[["        in local context that refer to global variables                                                                            ",{}]],"24":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"25":[["        in local context that refer to local variables                                                                             ",{}]],"26":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"27":[["        in nested local context that refer to inner variables                                                                      ",{}]],"28":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"29":[["    for calls to toplevel functions with category == \"function\"                                                                    ",{}]],"30":[["      returns correct AST node for unqualified variables",{"fg":2}],["                                                                           ",{}]],"31":[["      returns correct AST node for qualified variables",{"fg":2}],["                                                                             ",{}]],"32":[["    for calls to nested functions with category == \"function\"                                                                      ",{}]],"33":[["      in local context that refer to local variables                                                                               ",{}]],"34":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"35":[["      in nested local context that refer to inner variables                                                                        ",{}]],"36":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"37":[["                                                                                                                                   ",{}]],"38":[["Y2R::AST::YCP::While                                                                                                               ",{}]],"39":[["  #compile                                                                                                                         ",{}]],"40":[["    returns correct AST node for while statements without do",{"fg":2}],["                                                                       ",{}]],"41":[["    returns correct AST node for while statements with do",{"fg":2}],["                                                                          ",{}]],"42":[["                                                                                                                                   ",{}]],"43":[["Y2R::AST::YCP::YCPCode                                                                                                             ",{}]],"44":[["  #compile                                                                                                                         ",{}]],"45":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"46":[["  #compile_as_block                                                                                                                ",{}]],"47":[["    returns correct AST node without arguments",{"fg":2}],["                                                                                     ",{}]],"48":[["    returns correct AST node with arguments",{"fg":2}],["                                                                                        ",{}]],"49":[["                                                                                                                                   ",{}]],"50":[["Y2R::AST::YCP::YEBinary                                                                                                            ",{}]],"51":[["  #compile                                                                                                                         ",{}]],"52":[["    returns correct AST node when both sides are constant",{"fg":2}],["                                                                          ",{}]]}}],[0.012563,{"lines":{"0":[["  #compile                                                                                                                         ",{}]],"1":[["    for calls with category == \"variable\"                                                                                          ",{}]],"2":[["      that are qualified                                                                                                           ",{}]],"3":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"4":[["      that are unqualified                                                                                                         ",{}]],"5":[["        in global context that refer to global variables                                                                           ",{}]],"6":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"7":[["        in local context that refer to global variables                                                                            ",{}]],"8":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"9":[["        in local context that refer to local variables                                                                             ",{}]],"11":[["        in nested local context that refer to inner variables                                                                      ",{}]],"13":[["    for calls with category == \"reference\"                                                                                         ",{}]],"14":[["      that are qualified                                                                                                           ",{}]],"15":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"16":[["      that are unqualified                                                                                                         ",{}]],"17":[["        in global context that refer to global variables                                                                           ",{}]],"18":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"19":[["        in local context that refer to global variables                                                                            ",{}]],"20":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"21":[["        in local context that refer to local variables                                                                             ",{}]],"23":[["        in nested local context that refer to inner variables                                                                      ",{}]],"25":[["    for calls to toplevel functions with category == \"function\"                                                                    ",{}]],"26":[["      returns correct AST node for unqualified variables",{"fg":2}],["                                                                           ",{}]],"27":[["      returns correct AST node for qualified variables",{"fg":2}],["                                                                             ",{}]],"28":[["    for calls to nested functions with category == \"function\"                                                                      ",{}]],"29":[["      in local context that refer to local variables                                                                               ",{}]],"30":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"31":[["      in nested local context that refer to inner variables                                                                        ",{}]],"32":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"33":[["                                                                                                                                   ",{}]],"34":[["Y2R::AST::YCP::While                                                                                                               ",{}]],"35":[["  #compile                                                                                                                         ",{}]],"36":[["    returns correct AST node for while statements without do",{"fg":2}],["                                                                       ",{}]],"37":[["    returns correct AST node for while statements with do",{"fg":2}],["                                                                          ",{}]],"38":[["                                                                                                                                   ",{}]],"39":[["Y2R::AST::YCP::YCPCode                                                                                                             ",{}]],"40":[["  #compile                                                                                                                         ",{}]],"41":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"42":[["  #compile_as_block                                                                                                                ",{}]],"43":[["    returns correct AST node without arguments",{"fg":2}],["                                                                                     ",{}]],"44":[["    returns correct AST node with arguments",{"fg":2}],["                                                                                        ",{}]],"45":[["                                                                                                                                   ",{}]],"46":[["Y2R::AST::YCP::YEBinary                                                                                                            ",{}]],"47":[["  #compile                                                                                                                         ",{}]],"48":[["    returns correct AST node when both sides are constant",{"fg":2}],["                                                                          ",{}]],"49":[["    returns correct AST node when at least one side is not constant",{"fg":2}],["                                                                ",{}]],"50":[["                                                                                                                                   ",{}]],"51":[["Y2R::AST::YCP::YEBracket                                                                                                           ",{}]],"52":[["  #compile                                                                                                                         ",{}]]}}],[0.006831,{"lines":{"0":[["    for calls with category == \"variable\"                                                                                          ",{}]],"1":[["      that are qualified                                                                                                           ",{}]],"2":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"3":[["      that are unqualified                                                                                                         ",{}]],"4":[["        in global context that refer to global variables                                                                           ",{}]],"5":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"6":[["        in local context that refer to global variables                                                                            ",{}]],"7":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"8":[["        in local context that refer to local variables                                                                             ",{}]],"9":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"10":[["        in nested local context that refer to inner variables                                                                      ",{}]],"11":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"12":[["    for calls with category == \"reference\"                                                                                         ",{}]],"13":[["      that are qualified                                                                                                           ",{}]],"14":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"15":[["      that are unqualified                                                                                                         ",{}]],"16":[["        in global context that refer to global variables                                                                           ",{}]],"17":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"18":[["        in local context that refer to global variables                                                                            ",{}]],"19":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"20":[["        in local context that refer to local variables                                                                             ",{}]],"21":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"22":[["        in nested local context that refer to inner variables                                                                      ",{}]],"23":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"24":[["    for calls to toplevel functions with category == \"function\"                                                                    ",{}]],"25":[["      returns correct AST node for unqualified variables",{"fg":2}],["                                                                           ",{}]],"26":[["      returns correct AST node for qualified variables",{"fg":2}],["                                                                             ",{}]],"27":[["    for calls to nested functions with category == \"function\"                                                                      ",{}]],"28":[["      in local context that refer to local variables                                                                               ",{}]],"29":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"30":[["      in nested local context that refer to inner variables                                                                        ",{}]],"31":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"32":[["                                                                                                                                   ",{}]],"33":[["Y2R::AST::YCP::While                                                                                                               ",{}]],"34":[["  #compile                                                                                                                         ",{}]],"35":[["    returns correct AST node for while statements without do",{"fg":2}],["                                                                       ",{}]],"36":[["    returns correct AST node for while statements with do",{"fg":2}],["                                                                          ",{}]],"37":[["                                                                                                                                   ",{}]],"38":[["Y2R::AST::YCP::YCPCode                                                                                                             ",{}]],"39":[["  #compile                                                                                                                         ",{}]],"40":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"41":[["  #compile_as_block                                                                                                                ",{}]],"42":[["    returns correct AST node without arguments",{"fg":2}],["                                                                                     ",{}]],"43":[["    returns correct AST node with arguments",{"fg":2}],["                                                                                        ",{}]],"44":[["                                                                                                                                   ",{}]],"45":[["Y2R::AST::YCP::YEBinary                                                                                                            ",{}]],"46":[["  #compile                                                                                                                         ",{}]],"47":[["    returns correct AST node when both sides are constant",{"fg":2}],["                                                                          ",{}]],"48":[["    returns correct AST node when at least one side is not constant",{"fg":2}],["                                                                ",{}]],"49":[["                                                                                                                                   ",{}]],"50":[["Y2R::AST::YCP::YEBracket                                                                                                           ",{}]],"51":[["  #compile                                                                                                                         ",{}]],"52":[["    returns correct AST node when the default is nil",{"fg":2}],["                                                                               ",{}]]}}],[0.057525,{"lines":{"0":[["      that are qualified                                                                                                           ",{}]],"1":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"2":[["      that are unqualified                                                                                                         ",{}]],"3":[["        in global context that refer to global variables                                                                           ",{}]],"4":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"5":[["        in local context that refer to global variables                                                                            ",{}]],"6":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"7":[["        in local context that refer to local variables                                                                             ",{}]],"8":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"9":[["        in nested local context that refer to inner variables                                                                      ",{}]],"10":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"11":[["    for calls with category == \"reference\"                                                                                         ",{}]],"12":[["      that are qualified                                                                                                           ",{}]],"13":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"14":[["      that are unqualified                                                                                                         ",{}]],"15":[["        in global context that refer to global variables                                                                           ",{}]],"16":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"17":[["        in local context that refer to global variables                                                                            ",{}]],"18":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"19":[["        in local context that refer to local variables                                                                             ",{}]],"20":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"21":[["        in nested local context that refer to inner variables                                                                      ",{}]],"22":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"23":[["    for calls to toplevel functions with category == \"function\"                                                                    ",{}]],"24":[["      returns correct AST node for unqualified variables",{"fg":2}],["                                                                           ",{}]],"25":[["      returns correct AST node for qualified variables",{"fg":2}],["                                                                             ",{}]],"26":[["    for calls to nested functions with category == \"function\"                                                                      ",{}]],"27":[["      in local context that refer to local variables                                                                               ",{}]],"28":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"29":[["      in nested local context that refer to inner variables                                                                        ",{}]],"30":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"31":[["                                                                                                                                   ",{}]],"32":[["Y2R::AST::YCP::While                                                                                                               ",{}]],"33":[["  #compile                                                                                                                         ",{}]],"34":[["    returns correct AST node for while statements without do",{"fg":2}],["                                                                       ",{}]],"35":[["    returns correct AST node for while statements with do",{"fg":2}],["                                                                          ",{}]],"36":[["                                                                                                                                   ",{}]],"37":[["Y2R::AST::YCP::YCPCode                                                                                                             ",{}]],"38":[["  #compile                                                                                                                         ",{}]],"39":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"40":[["  #compile_as_block                                                                                                                ",{}]],"41":[["    returns correct AST node without arguments",{"fg":2}],["                                                                                     ",{}]],"42":[["    returns correct AST node with arguments",{"fg":2}],["                                                                                        ",{}]],"43":[["                                                                                                                                   ",{}]],"44":[["Y2R::AST::YCP::YEBinary                                                                                                            ",{}]],"45":[["  #compile                                                                                                                         ",{}]],"46":[["    returns correct AST node when both sides are constant",{"fg":2}],["                                                                          ",{}]],"47":[["    returns correct AST node when at least one side is not constant",{"fg":2}],["                                                                ",{}]],"48":[["                                                                                                                                   ",{}]],"49":[["Y2R::AST::YCP::YEBracket                                                                                                           ",{}]],"50":[["  #compile                                                                                                                         ",{}]],"51":[["    returns correct AST node when the default is nil",{"fg":2}],["                                                                               ",{}]],"52":[["    returns correct AST node when the default is not nil",{"fg":2}],["                                                                           ",{}]]}}],[0.014265,{"lines":{"0":[["      that are unqualified                                                                                                         ",{}]],"1":[["        in global context that refer to global variables                                                                           ",{}]],"2":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"3":[["        in local context that refer to global variables                                                                            ",{}]],"5":[["        in local context that refer to local variables                                                                             ",{}]],"7":[["        in nested local context that refer to inner variables                                                                      ",{}]],"9":[["    for calls with category == \"reference\"                                                                                         ",{}]],"10":[["      that are qualified                                                                                                           ",{}]],"11":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"12":[["      that are unqualified                                                                                                         ",{}]],"13":[["        in global context that refer to global variables                                                                           ",{}]],"14":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"15":[["        in local context that refer to global variables                                                                            ",{}]],"17":[["        in local context that refer to local variables                                                                             ",{}]],"19":[["        in nested local context that refer to inner variables                                                                      ",{}]],"21":[["    for calls to toplevel functions with category == \"function\"                                                                    ",{}]],"22":[["      returns correct AST node for unqualified variables",{"fg":2}],["                                                                           ",{}]],"23":[["      returns correct AST node for qualified variables",{"fg":2}],["                                                                             ",{}]],"24":[["    for calls to nested functions with category == \"function\"                                                                      ",{}]],"25":[["      in local context that refer to local variables                                                                               ",{}]],"26":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"27":[["      in nested local context that refer to inner variables                                                                        ",{}]],"29":[["                                                                                                                                   ",{}]],"30":[["Y2R::AST::YCP::While                                                                                                               ",{}]],"31":[["  #compile                                                                                                                         ",{}]],"32":[["    returns correct AST node for while statements without do",{"fg":2}],["                                                                       ",{}]],"33":[["    returns correct AST node for while statements with do",{"fg":2}],["                                                                          ",{}]],"34":[["                                                                                                                                   ",{}]],"35":[["Y2R::AST::YCP::YCPCode                                                                                                             ",{}]],"36":[["  #compile                                                                                                                         ",{}]],"37":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"38":[["  #compile_as_block                                                                                                                ",{}]],"39":[["    returns correct AST node without arguments",{"fg":2}],["                                                                                     ",{}]],"40":[["    returns correct AST node with arguments",{"fg":2}],["                                                                                        ",{}]],"41":[["                                                                                                                                   ",{}]],"42":[["Y2R::AST::YCP::YEBinary                                                                                                            ",{}]],"43":[["  #compile                                                                                                                         ",{}]],"44":[["    returns correct AST node when both sides are constant",{"fg":2}],["                                                                          ",{}]],"45":[["    returns correct AST node when at least one side is not constant",{"fg":2}],["                                                                ",{}]],"46":[["                                                                                                                                   ",{}]],"47":[["Y2R::AST::YCP::YEBracket                                                                                                           ",{}]],"48":[["  #compile                                                                                                                         ",{}]],"49":[["    returns correct AST node when the default is nil",{"fg":2}],["                                                                               ",{}]],"50":[["    returns correct AST node when the default is not nil",{"fg":2}],["                                                                           ",{}]],"51":[["    returns correct AST node when the default is a call",{"fg":2}],["                                                                            ",{}]],"52":[["    returns correct AST node when the index has one element",{"fg":2}],["                                                                        ",{}]]}}],[0.012599,{"lines":{"0":[["        in local context that refer to global variables                                                                            ",{}]],"1":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"2":[["        in local context that refer to local variables                                                                             ",{}]],"3":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"4":[["        in nested local context that refer to inner variables                                                                      ",{}]],"5":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"6":[["    for calls with category == \"reference\"                                                                                         ",{}]],"7":[["      that are qualified                                                                                                           ",{}]],"8":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"9":[["      that are unqualified                                                                                                         ",{}]],"10":[["        in global context that refer to global variables                                                                           ",{}]],"11":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"12":[["        in local context that refer to global variables                                                                            ",{}]],"13":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"14":[["        in local context that refer to local variables                                                                             ",{}]],"15":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"16":[["        in nested local context that refer to inner variables                                                                      ",{}]],"17":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"18":[["    for calls to toplevel functions with category == \"function\"                                                                    ",{}]],"19":[["      returns correct AST node for unqualified variables",{"fg":2}],["                                                                           ",{}]],"20":[["      returns correct AST node for qualified variables",{"fg":2}],["                                                                             ",{}]],"21":[["    for calls to nested functions with category == \"function\"                                                                      ",{}]],"22":[["      in local context that refer to local variables                                                                               ",{}]],"23":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"24":[["      in nested local context that refer to inner variables                                                                        ",{}]],"25":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"26":[["                                                                                                                                   ",{}]],"27":[["Y2R::AST::YCP::While                                                                                                               ",{}]],"28":[["  #compile                                                                                                                         ",{}]],"29":[["    returns correct AST node for while statements without do",{"fg":2}],["                                                                       ",{}]],"30":[["    returns correct AST node for while statements with do",{"fg":2}],["                                                                          ",{}]],"31":[["                                                                                                                                   ",{}]],"32":[["Y2R::AST::YCP::YCPCode                                                                                                             ",{}]],"33":[["  #compile                                                                                                                         ",{}]],"34":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"35":[["  #compile_as_block                                                                                                                ",{}]],"36":[["    returns correct AST node without arguments",{"fg":2}],["                                                                                     ",{}]],"37":[["    returns correct AST node with arguments",{"fg":2}],["                                                                                        ",{}]],"38":[["                                                                                                                                   ",{}]],"39":[["Y2R::AST::YCP::YEBinary                                                                                                            ",{}]],"40":[["  #compile                                                                                                                         ",{}]],"41":[["    returns correct AST node when both sides are constant",{"fg":2}],["                                                                          ",{}]],"42":[["    returns correct AST node when at least one side is not constant",{"fg":2}],["                                                                ",{}]],"43":[["                                                                                                                                   ",{}]],"44":[["Y2R::AST::YCP::YEBracket                                                                                                           ",{}]],"45":[["  #compile                                                                                                                         ",{}]],"46":[["    returns correct AST node when the default is nil",{"fg":2}],["                                                                               ",{}]],"47":[["    returns correct AST node when the default is not nil",{"fg":2}],["                                                                           ",{}]],"48":[["    returns correct AST node when the default is a call",{"fg":2}],["                                                                            ",{}]],"49":[["    returns correct AST node when the index has one element",{"fg":2}],["                                                                        ",{}]],"50":[["    returns correct AST node when index has multiple elements",{"fg":2}],["                                                                      ",{}]],"51":[["  #compile_as_shortcut                                                                                                             ",{}]],"52":[["    returns correct AST node when the default is nil",{"fg":2}],["                                                                               ",{}]]}}],[0.01302,{"lines":{"0":[["        in local context that refer to local variables                                                                             ",{}]],"2":[["        in nested local context that refer to inner variables                                                                      ",{}]],"4":[["    for calls with category == \"reference\"                                                                                         ",{}]],"5":[["      that are qualified                                                                                                           ",{}]],"6":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"7":[["      that are unqualified                                                                                                         ",{}]],"8":[["        in global context that refer to global variables                                                                           ",{}]],"9":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"10":[["        in local context that refer to global variables                                                                            ",{}]],"12":[["        in local context that refer to local variables                                                                             ",{}]],"14":[["        in nested local context that refer to inner variables                                                                      ",{}]],"16":[["    for calls to toplevel functions with category == \"function\"                                                                    ",{}]],"17":[["      returns correct AST node for unqualified variables",{"fg":2}],["                                                                           ",{}]],"18":[["      returns correct AST node for qualified variables",{"fg":2}],["                                                                             ",{}]],"19":[["    for calls to nested functions with category == \"function\"                                                                      ",{}]],"20":[["      in local context that refer to local variables                                                                               ",{}]],"21":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"22":[["      in nested local context that refer to inner variables                                                                        ",{}]],"24":[["                                                                                                                                   ",{}]],"25":[["Y2R::AST::YCP::While                                                                                                               ",{}]],"26":[["  #compile                                                                                                                         ",{}]],"27":[["    returns correct AST node for while statements without do",{"fg":2}],["                                                                       ",{}]],"28":[["    returns correct AST node for while statements with do",{"fg":2}],["                                                                          ",{}]],"29":[["                                                                                                                                   ",{}]],"30":[["Y2R::AST::YCP::YCPCode                                                                                                             ",{}]],"31":[["  #compile                                                                                                                         ",{}]],"32":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"33":[["  #compile_as_block                                                                                                                ",{}]],"34":[["    returns correct AST node without arguments",{"fg":2}],["                                                                                     ",{}]],"35":[["    returns correct AST node with arguments",{"fg":2}],["                                                                                        ",{}]],"36":[["                                                                                                                                   ",{}]],"37":[["Y2R::AST::YCP::YEBinary                                                                                                            ",{}]],"38":[["  #compile                                                                                                                         ",{}]],"39":[["    returns correct AST node when both sides are constant",{"fg":2}],["                                                                          ",{}]],"40":[["    returns correct AST node when at least one side is not constant",{"fg":2}],["                                                                ",{}]],"41":[["                                                                                                                                   ",{}]],"42":[["Y2R::AST::YCP::YEBracket                                                                                                           ",{}]],"43":[["  #compile                                                                                                                         ",{}]],"44":[["    returns correct AST node when the default is nil",{"fg":2}],["                                                                               ",{}]],"45":[["    returns correct AST node when the default is not nil",{"fg":2}],["                                                                           ",{}]],"46":[["    returns correct AST node when the default is a call",{"fg":2}],["                                                                            ",{}]],"47":[["    returns correct AST node when the index has one element",{"fg":2}],["                                                                        ",{}]],"48":[["    returns correct AST node when index has multiple elements",{"fg":2}],["                                                                      ",{}]],"49":[["  #compile_as_shortcut                                                                                                             ",{}]],"50":[["    returns correct AST node when the default is nil",{"fg":2}],["                                                                               ",{}]],"51":[["    returns correct AST node when the default is not nil",{"fg":2}],["                                                                           ",{}]],"52":[["    returns correct AST node when the default is a call",{"fg":2}],["                                                                            ",{}]]}}],[0.012466,{"lines":{"0":[["      that are qualified                                                                                                           ",{}]],"1":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"2":[["      that are unqualified                                                                                                         ",{}]],"3":[["        in global context that refer to global variables                                                                           ",{}]],"4":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"5":[["        in local context that refer to global variables                                                                            ",{}]],"6":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"7":[["        in local context that refer to local variables                                                                             ",{}]],"8":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"9":[["        in nested local context that refer to inner variables                                                                      ",{}]],"10":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"11":[["    for calls to toplevel functions with category == \"function\"                                                                    ",{}]],"12":[["      returns correct AST node for unqualified variables",{"fg":2}],["                                                                           ",{}]],"13":[["      returns correct AST node for qualified variables",{"fg":2}],["                                                                             ",{}]],"14":[["    for calls to nested functions with category == \"function\"                                                                      ",{}]],"15":[["      in local context that refer to local variables                                                                               ",{}]],"16":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"17":[["      in nested local context that refer to inner variables                                                                        ",{}]],"18":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"19":[["                                                                                                                                   ",{}]],"20":[["Y2R::AST::YCP::While                                                                                                               ",{}]],"21":[["  #compile                                                                                                                         ",{}]],"22":[["    returns correct AST node for while statements without do",{"fg":2}],["                                                                       ",{}]],"23":[["    returns correct AST node for while statements with do",{"fg":2}],["                                                                          ",{}]],"25":[["Y2R::AST::YCP::YCPCode                                                                                                             ",{}]],"27":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"28":[["  #compile_as_block                                                                                                                ",{}]],"29":[["    returns correct AST node without arguments",{"fg":2}],["                                                                                     ",{}]],"30":[["    returns correct AST node with arguments",{"fg":2}],["                                                                                        ",{}]],"31":[["                                                                                                                                   ",{}]],"32":[["Y2R::AST::YCP::YEBinary                                                                                                            ",{}]],"33":[["  #compile                                                                                                                         ",{}]],"34":[["    returns correct AST node when both sides are constant",{"fg":2}],["                                                                          ",{}]],"35":[["    returns correct AST node when at least one side is not constant",{"fg":2}],["                                                                ",{}]],"37":[["Y2R::AST::YCP::YEBracket                                                                                                           ",{}]],"39":[["    returns correct AST node when the default is nil",{"fg":2}],["                                                                               ",{}]],"40":[["    returns correct AST node when the default is not nil",{"fg":2}],["                                                                           ",{}]],"41":[["    returns correct AST node when the default is a call",{"fg":2}],["                                                                            ",{}]],"42":[["    returns correct AST node when the index has one element",{"fg":2}],["                                                                        ",{}]],"43":[["    returns correct AST node when index has multiple elements",{"fg":2}],["                                                                      ",{}]],"44":[["  #compile_as_shortcut                                                                                                             ",{}]],"45":[["    returns correct AST node when the default is nil",{"fg":2}],["                                                                               ",{}]],"46":[["    returns correct AST node when the default is not nil",{"fg":2}],["                                                                           ",{}]],"47":[["    returns correct AST node when the default is a call",{"fg":2}],["                                                                            ",{}]],"48":[["    returns correct AST node when the index has one element",{"fg":2}],["                                                                        ",{}]],"49":[["    returns correct AST node when index has multiple elements",{"fg":2}],["                                                                      ",{}]],"50":[["                                                                                                                                   ",{}]],"51":[["Y2R::AST::YCP::YEIs                                                                                                                ",{}]],"52":[["  #compile                                                                                                                         ",{}]]}}],[0.011269,{"lines":{"0":[["        in local context that refer to global variables                                                                            ",{}]],"1":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"2":[["        in local context that refer to local variables                                                                             ",{}]],"3":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"4":[["        in nested local context that refer to inner variables                                                                      ",{}]],"5":[["          returns correct AST node",{"fg":2}],["                                                                                                 ",{}]],"6":[["    for calls to toplevel functions with category == \"function\"                                                                    ",{}]],"7":[["      returns correct AST node for unqualified variables",{"fg":2}],["                                                                           ",{}]],"8":[["      returns correct AST node for qualified variables",{"fg":2}],["                                                                             ",{}]],"9":[["    for calls to nested functions with category == \"function\"                                                                      ",{}]],"10":[["      in local context that refer to local variables                                                                               ",{}]],"11":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"12":[["      in nested local context that refer to inner variables                                                                        ",{}]],"13":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"14":[["                                                                                                                                   ",{}]],"15":[["Y2R::AST::YCP::While                                                                                                               ",{}]],"16":[["  #compile                                                                                                                         ",{}]],"17":[["    returns correct AST node for while statements without do",{"fg":2}],["                                                                       ",{}]],"18":[["    returns correct AST node for while statements with do",{"fg":2}],["                                                                          ",{}]],"20":[["Y2R::AST::YCP::YCPCode                                                                                                             ",{}]],"22":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"23":[["  #compile_as_block                                                                                                                ",{}]],"24":[["    returns correct AST node without arguments",{"fg":2}],["                                                                                     ",{}]],"25":[["    returns correct AST node with arguments",{"fg":2}],["                                                                                        ",{}]],"26":[["                                                                                                                                   ",{}]],"27":[["Y2R::AST::YCP::YEBinary                                                                                                            ",{}]],"28":[["  #compile                                                                                                                         ",{}]],"29":[["    returns correct AST node when both sides are constant",{"fg":2}],["                                                                          ",{}]],"30":[["    returns correct AST node when at least one side is not constant",{"fg":2}],["                                                                ",{}]],"32":[["Y2R::AST::YCP::YEBracket                                                                                                           ",{}]],"34":[["    returns correct AST node when the default is nil",{"fg":2}],["                                                                               ",{}]],"35":[["    returns correct AST node when the default is not nil",{"fg":2}],["                                                                           ",{}]],"36":[["    returns correct AST node when the default is a call",{"fg":2}],["                                                                            ",{}]],"37":[["    returns correct AST node when the index has one element",{"fg":2}],["                                                                        ",{}]],"38":[["    returns correct AST node when index has multiple elements",{"fg":2}],["                                                                      ",{}]],"39":[["  #compile_as_shortcut                                                                                                             ",{}]],"40":[["    returns correct AST node when the default is nil",{"fg":2}],["                                                                               ",{}]],"41":[["    returns correct AST node when the default is not nil",{"fg":2}],["                                                                           ",{}]],"42":[["    returns correct AST node when the default is a call",{"fg":2}],["                                                                            ",{}]],"43":[["    returns correct AST node when the index has one element",{"fg":2}],["                                                                        ",{}]],"44":[["    returns correct AST node when index has multiple elements",{"fg":2}],["                                                                      ",{}]],"45":[["                                                                                                                                   ",{}]],"46":[["Y2R::AST::YCP::YEIs                                                                                                                ",{}]],"47":[["  #compile                                                                                                                         ",{}]],"48":[["    returns correct AST node for generic type",{"fg":2}],["                                                                                      ",{}]],"49":[["    returns correct AST node when shortcut is known",{"fg":2}],["                                                                                ",{}]],"51":[["Y2R::AST::YCP::YEPropagate                                                                                                         ",{}]]}}],[0.011118,{"lines":{"0":[["        in local context that refer to local variables                                                                             ",{}]],"2":[["        in nested local context that refer to inner variables                                                                      ",{}]],"4":[["    for calls to toplevel functions with category == \"function\"                                                                    ",{}]],"5":[["      returns correct AST node for unqualified variables",{"fg":2}],["                                                                           ",{}]],"6":[["      returns correct AST node for qualified variables",{"fg":2}],["                                                                             ",{}]],"7":[["    for calls to nested functions with category == \"function\"                                                                      ",{}]],"8":[["      in local context that refer to local variables                                                                               ",{}]],"9":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"10":[["      in nested local context that refer to inner variables                                                                        ",{}]],"12":[["                                                                                                                                   ",{}]],"13":[["Y2R::AST::YCP::While                                                                                                               ",{}]],"14":[["  #compile                                                                                                                         ",{}]],"15":[["    returns correct AST node for while statements without do",{"fg":2}],["                                                                       ",{}]],"16":[["    returns correct AST node for while statements with do",{"fg":2}],["                                                                          ",{}]],"17":[["                                                                                                                                   ",{}]],"18":[["Y2R::AST::YCP::YCPCode                                                                                                             ",{}]],"19":[["  #compile                                                                                                                         ",{}]],"20":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"21":[["  #compile_as_block                                                                                                                ",{}]],"22":[["    returns correct AST node without arguments",{"fg":2}],["                                                                                     ",{}]],"23":[["    returns correct AST node with arguments",{"fg":2}],["                                                                                        ",{}]],"24":[["                                                                                                                                   ",{}]],"25":[["Y2R::AST::YCP::YEBinary                                                                                                            ",{}]],"26":[["  #compile                                                                                                                         ",{}]],"27":[["    returns correct AST node when both sides are constant",{"fg":2}],["                                                                          ",{}]],"28":[["    returns correct AST node when at least one side is not constant",{"fg":2}],["                                                                ",{}]],"29":[["                                                                                                                                   ",{}]],"30":[["Y2R::AST::YCP::YEBracket                                                                                                           ",{}]],"31":[["  #compile                                                                                                                         ",{}]],"32":[["    returns correct AST node when the default is nil",{"fg":2}],["                                                                               ",{}]],"33":[["    returns correct AST node when the default is not nil",{"fg":2}],["                                                                           ",{}]],"34":[["    returns correct AST node when the default is a call",{"fg":2}],["                                                                            ",{}]],"35":[["    returns correct AST node when the index has one element",{"fg":2}],["                                                                        ",{}]],"36":[["    returns correct AST node when index has multiple elements",{"fg":2}],["                                                                      ",{}]],"37":[["  #compile_as_shortcut                                                                                                             ",{}]],"38":[["    returns correct AST node when the default is nil",{"fg":2}],["                                                                               ",{}]],"39":[["    returns correct AST node when the default is not nil",{"fg":2}],["                                                                           ",{}]],"40":[["    returns correct AST node when the default is a call",{"fg":2}],["                                                                            ",{}]],"41":[["    returns correct AST node when the index has one element",{"fg":2}],["                                                                        ",{}]],"42":[["    returns correct AST node when index has multiple elements",{"fg":2}],["                                                                      ",{}]],"43":[["                                                                                                                                   ",{}]],"44":[["Y2R::AST::YCP::YEIs                                                                                                                ",{}]],"45":[["  #compile                                                                                                                         ",{}]],"46":[["    returns correct AST node for generic type",{"fg":2}],["                                                                                      ",{}]],"47":[["    returns correct AST node when shortcut is known",{"fg":2}],["                                                                                ",{}]],"48":[["                                                                                                                                   ",{}]],"49":[["Y2R::AST::YCP::YEPropagate                                                                                                         ",{}]],"50":[["  #compile                                                                                                                         ",{}]],"51":[["    returns correct AST node when the types are the same",{"fg":2}],["                                                                           ",{}]],"52":[["    returns correct AST node when the types are the same but their constness is different",{"fg":2}],["                                          ",{}]]}}],[0.011871,{"lines":{"0":[["        in nested local context that refer to inner variables                                                                      ",{}]],"2":[["    for calls to toplevel functions with category == \"function\"                                                                    ",{}]],"3":[["      returns correct AST node for unqualified variables",{"fg":2}],["                                                                           ",{}]],"4":[["      returns correct AST node for qualified variables",{"fg":2}],["                                                                             ",{}]],"5":[["    for calls to nested functions with category == \"function\"                                                                      ",{}]],"6":[["      in local context that refer to local variables                                                                               ",{}]],"7":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"8":[["      in nested local context that refer to inner variables                                                                        ",{}]],"10":[["                                                                                                                                   ",{}]],"11":[["Y2R::AST::YCP::While                                                                                                               ",{}]],"12":[["  #compile                                                                                                                         ",{}]],"13":[["    returns correct AST node for while statements without do",{"fg":2}],["                                                                       ",{}]],"14":[["    returns correct AST node for while statements with do",{"fg":2}],["                                                                          ",{}]],"15":[["                                                                                                                                   ",{}]],"16":[["Y2R::AST::YCP::YCPCode                                                                                                             ",{}]],"17":[["  #compile                                                                                                                         ",{}]],"18":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"19":[["  #compile_as_block                                                                                                                ",{}]],"20":[["    returns correct AST node without arguments",{"fg":2}],["                                                                                     ",{}]],"21":[["    returns correct AST node with arguments",{"fg":2}],["                                                                                        ",{}]],"22":[["                                                                                                                                   ",{}]],"23":[["Y2R::AST::YCP::YEBinary                                                                                                            ",{}]],"24":[["  #compile                                                                                                                         ",{}]],"25":[["    returns correct AST node when both sides are constant",{"fg":2}],["                                                                          ",{}]],"26":[["    returns correct AST node when at least one side is not constant",{"fg":2}],["                                                                ",{}]],"27":[["                                                                                                                                   ",{}]],"28":[["Y2R::AST::YCP::YEBracket                                                                                                           ",{}]],"29":[["  #compile                                                                                                                         ",{}]],"30":[["    returns correct AST node when the default is nil",{"fg":2}],["                                                                               ",{}]],"31":[["    returns correct AST node when the default is not nil",{"fg":2}],["                                                                           ",{}]],"32":[["    returns correct AST node when the default is a call",{"fg":2}],["                                                                            ",{}]],"33":[["    returns correct AST node when the index has one element",{"fg":2}],["                                                                        ",{}]],"34":[["    returns correct AST node when index has multiple elements",{"fg":2}],["                                                                      ",{}]],"35":[["  #compile_as_shortcut                                                                                                             ",{}]],"36":[["    returns correct AST node when the default is nil",{"fg":2}],["                                                                               ",{}]],"37":[["    returns correct AST node when the default is not nil",{"fg":2}],["                                                                           ",{}]],"38":[["    returns correct AST node when the default is a call",{"fg":2}],["                                                                            ",{}]],"39":[["    returns correct AST node when the index has one element",{"fg":2}],["                                                                        ",{}]],"40":[["    returns correct AST node when index has multiple elements",{"fg":2}],["                                                                      ",{}]],"41":[["                                                                                                                                   ",{}]],"42":[["Y2R::AST::YCP::YEIs                                                                                                                ",{}]],"43":[["  #compile                                                                                                                         ",{}]],"44":[["    returns correct AST node for generic type",{"fg":2}],["                                                                                      ",{}]],"45":[["    returns correct AST node when shortcut is known",{"fg":2}],["                                                                                ",{}]],"46":[["                                                                                                                                   ",{}]],"47":[["Y2R::AST::YCP::YEPropagate                                                                                                         ",{}]],"48":[["  #compile                                                                                                                         ",{}]],"49":[["    returns correct AST node when the types are the same",{"fg":2}],["                                                                           ",{}]],"50":[["    returns correct AST node when the types are the same but their constness is different",{"fg":2}],["                                          ",{}]],"51":[["    returns correct AST node when the types are different and there is no shortcut",{"fg":2}],["                                                 ",{}]],"52":[["    returns correct AST node when the types are different and there is shortcut",{"fg":2}],["                                                    ",{}]]}}],[0.011939,{"lines":{"0":[["    for calls to toplevel functions with category == \"function\"                                                                    ",{}]],"1":[["      returns correct AST node for unqualified variables",{"fg":2}],["                                                                           ",{}]],"2":[["      returns correct AST node for qualified variables",{"fg":2}],["                                                                             ",{}]],"3":[["    for calls to nested functions with category == \"function\"                                                                      ",{}]],"4":[["      in local context that refer to local variables                                                                               ",{}]],"5":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"6":[["      in nested local context that refer to inner variables                                                                        ",{}]],"8":[["                                                                                                                                   ",{}]],"9":[["Y2R::AST::YCP::While                                                                                                               ",{}]],"10":[["  #compile                                                                                                                         ",{}]],"11":[["    returns correct AST node for while statements without do",{"fg":2}],["                                                                       ",{}]],"12":[["    returns correct AST node for while statements with do",{"fg":2}],["                                                                          ",{}]],"13":[["                                                                                                                                   ",{}]],"14":[["Y2R::AST::YCP::YCPCode                                                                                                             ",{}]],"15":[["  #compile                                                                                                                         ",{}]],"16":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"17":[["  #compile_as_block                                                                                                                ",{}]],"18":[["    returns correct AST node without arguments",{"fg":2}],["                                                                                     ",{}]],"19":[["    returns correct AST node with arguments",{"fg":2}],["                                                                                        ",{}]],"20":[["                                                                                                                                   ",{}]],"21":[["Y2R::AST::YCP::YEBinary                                                                                                            ",{}]],"22":[["  #compile                                                                                                                         ",{}]],"23":[["    returns correct AST node when both sides are constant",{"fg":2}],["                                                                          ",{}]],"24":[["    returns correct AST node when at least one side is not constant",{"fg":2}],["                                                                ",{}]],"25":[["                                                                                                                                   ",{}]],"26":[["Y2R::AST::YCP::YEBracket                                                                                                           ",{}]],"27":[["  #compile                                                                                                                         ",{}]],"28":[["    returns correct AST node when the default is nil",{"fg":2}],["                                                                               ",{}]],"29":[["    returns correct AST node when the default is not nil",{"fg":2}],["                                                                           ",{}]],"30":[["    returns correct AST node when the default is a call",{"fg":2}],["                                                                            ",{}]],"31":[["    returns correct AST node when the index has one element",{"fg":2}],["                                                                        ",{}]],"32":[["    returns correct AST node when index has multiple elements",{"fg":2}],["                                                                      ",{}]],"33":[["  #compile_as_shortcut                                                                                                             ",{}]],"34":[["    returns correct AST node when the default is nil",{"fg":2}],["                                                                               ",{}]],"35":[["    returns correct AST node when the default is not nil",{"fg":2}],["                                                                           ",{}]],"36":[["    returns correct AST node when the default is a call",{"fg":2}],["                                                                            ",{}]],"37":[["    returns correct AST node when the index has one element",{"fg":2}],["                                                                        ",{}]],"38":[["    returns correct AST node when index has multiple elements",{"fg":2}],["                                                                      ",{}]],"39":[["                                                                                                                                   ",{}]],"40":[["Y2R::AST::YCP::YEIs                                                                                                                ",{}]],"41":[["  #compile                                                                                                                         ",{}]],"42":[["    returns correct AST node for generic type",{"fg":2}],["                                                                                      ",{}]],"43":[["    returns correct AST node when shortcut is known",{"fg":2}],["                                                                                ",{}]],"44":[["                                                                                                                                   ",{}]],"45":[["Y2R::AST::YCP::YEPropagate                                                                                                         ",{}]],"46":[["  #compile                                                                                                                         ",{}]],"47":[["    returns correct AST node when the types are the same",{"fg":2}],["                                                                           ",{}]],"48":[["    returns correct AST node when the types are the same but their constness is different",{"fg":2}],["                                          ",{}]],"49":[["    returns correct AST node when the types are different and there is no shortcut",{"fg":2}],["                                                 ",{}]],"50":[["    returns correct AST node when the types are different and there is shortcut",{"fg":2}],["                                                    ",{}]],"51":[["    returns correct AST node when the types are different, their constness differ and there is shortcut",{"fg":2}],["                            ",{}]],"52":[["    returns correct AST node when when both the types and their constness are different",{"fg":2}],["                                            ",{}]]}}],[0.012085,{"lines":{"0":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"1":[["      in nested local context that refer to inner variables                                                                        ",{}]],"2":[["        returns correct AST node",{"fg":2}],["                                                                                                   ",{}]],"3":[["                                                                                                                                   ",{}]],"4":[["Y2R::AST::YCP::While                                                                                                               ",{}]],"5":[["  #compile                                                                                                                         ",{}]],"6":[["    returns correct AST node for while statements without do",{"fg":2}],["                                                                       ",{}]],"7":[["    returns correct AST node for while statements with do",{"fg":2}],["                                                                          ",{}]],"9":[["Y2R::AST::YCP::YCPCode                                                                                                             ",{}]],"11":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"12":[["  #compile_as_block                                                                                                                ",{}]],"13":[["    returns correct AST node without arguments",{"fg":2}],["                                                                                     ",{}]],"14":[["    returns correct AST node with arguments",{"fg":2}],["                                                                                        ",{}]],"15":[["                                                                                                                                   ",{}]],"16":[["Y2R::AST::YCP::YEBinary                                                                                                            ",{}]],"17":[["  #compile                                                                                                                         ",{}]],"18":[["    returns correct AST node when both sides are constant",{"fg":2}],["                                                                          ",{}]],"19":[["    returns correct AST node when at least one side is not constant",{"fg":2}],["                                                                ",{}]],"21":[["Y2R::AST::YCP::YEBracket                                                                                                           ",{}]],"23":[["    returns correct AST node when the default is nil",{"fg":2}],["                                                                               ",{}]],"24":[["    returns correct AST node when the default is not nil",{"fg":2}],["                                                                           ",{}]],"25":[["    returns correct AST node when the default is a call",{"fg":2}],["                                                                            ",{}]],"26":[["    returns correct AST node when the index has one element",{"fg":2}],["                                                                        ",{}]],"27":[["    returns correct AST node when index has multiple elements",{"fg":2}],["                                                                      ",{}]],"28":[["  #compile_as_shortcut                                                                                                             ",{}]],"29":[["    returns correct AST node when the default is nil",{"fg":2}],["                                                                               ",{}]],"30":[["    returns correct AST node when the default is not nil",{"fg":2}],["                                                                           ",{}]],"31":[["    returns correct AST node when the default is a call",{"fg":2}],["                                                                            ",{}]],"32":[["    returns correct AST node when the index has one element",{"fg":2}],["                                                                        ",{}]],"33":[["    returns correct AST node when index has multiple elements",{"fg":2}],["                                                                      ",{}]],"34":[["                                                                                                                                   ",{}]],"35":[["Y2R::AST::YCP::YEIs                                                                                                                ",{}]],"36":[["  #compile                                                                                                                         ",{}]],"37":[["    returns correct AST node for generic type",{"fg":2}],["                                                                                      ",{}]],"38":[["    returns correct AST node when shortcut is known",{"fg":2}],["                                                                                ",{}]],"40":[["Y2R::AST::YCP::YEPropagate                                                                                                         ",{}]],"42":[["    returns correct AST node when the types are the same",{"fg":2}],["                                                                           ",{}]],"43":[["    returns correct AST node when the types are the same but their constness is different",{"fg":2}],["                                          ",{}]],"44":[["    returns correct AST node when the types are different and there is no shortcut",{"fg":2}],["                                                 ",{}]],"45":[["    returns correct AST node when the types are different and there is shortcut",{"fg":2}],["                                                    ",{}]],"46":[["    returns correct AST node when the types are different, their constness differ and there is shortcut",{"fg":2}],["                            ",{}]],"47":[["    returns correct AST node when when both the types and their constness are different",{"fg":2}],["                                            ",{}]],"48":[["    returns correct AST node when child is an indexed access and there is shortcut",{"fg":2}],["                                                 ",{}]],"49":[["    returns correct AST node when child is an indexed access and there is no shortcut",{"fg":2}],["                                              ",{}]],"50":[["                                                                                                                                   ",{}]],"51":[["Y2R::AST::YCP::YEReference                                                                                                         ",{}]],"52":[["  #compile                                                                                                                         ",{}]]}}],[0.01077,{"lines":{"0":[["Y2R::AST::YCP::While                                                                                                               ",{}]],"1":[["  #compile                                                                                                                         ",{}]],"2":[["    returns correct AST node for while statements without do",{"fg":2}],["                                                                       ",{}]],"3":[["    returns correct AST node for while statements with do",{"fg":2}],["                                                                          ",{}]],"4":[["                                                                                                                                   ",{}]],"5":[["Y2R::AST::YCP::YCPCode                                                                                                             ",{}]],"6":[["  #compile                                                                                                                         ",{}]],"7":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"8":[["  #compile_as_block                                                                                                                ",{}]],"9":[["    returns correct AST node without arguments",{"fg":2}],["                                                                                     ",{}]],"10":[["    returns correct AST node with arguments",{"fg":2}],["                                                                                        ",{}]],"11":[["                                                                                                                                   ",{}]],"12":[["Y2R::AST::YCP::YEBinary                                                                                                            ",{}]],"13":[["  #compile                                                                                                                         ",{}]],"14":[["    returns correct AST node when both sides are constant",{"fg":2}],["                                                                          ",{}]],"15":[["    returns correct AST node when at least one side is not constant",{"fg":2}],["                                                                ",{}]],"16":[["                                                                                                                                   ",{}]],"17":[["Y2R::AST::YCP::YEBracket                                                                                                           ",{}]],"18":[["  #compile                                                                                                                         ",{}]],"19":[["    returns correct AST node when the default is nil",{"fg":2}],["                                                                               ",{}]],"20":[["    returns correct AST node when the default is not nil",{"fg":2}],["                                                                           ",{}]],"21":[["    returns correct AST node when the default is a call",{"fg":2}],["                                                                            ",{}]],"22":[["    returns correct AST node when the index has one element",{"fg":2}],["                                                                        ",{}]],"23":[["    returns correct AST node when index has multiple elements",{"fg":2}],["                                                                      ",{}]],"24":[["  #compile_as_shortcut                                                                                                             ",{}]],"25":[["    returns correct AST node when the default is nil",{"fg":2}],["                                                                               ",{}]],"26":[["    returns correct AST node when the default is not nil",{"fg":2}],["                                                                           ",{}]],"27":[["    returns correct AST node when the default is a call",{"fg":2}],["                                                                            ",{}]],"28":[["    returns correct AST node when the index has one element",{"fg":2}],["                                                                        ",{}]],"29":[["    returns correct AST node when index has multiple elements",{"fg":2}],["                                                                      ",{}]],"30":[["                                                                                                                                   ",{}]],"31":[["Y2R::AST::YCP::YEIs                                                                                                                ",{}]],"32":[["  #compile                                                                                                                         ",{}]],"33":[["    returns correct AST node for generic type",{"fg":2}],["                                                                                      ",{}]],"34":[["    returns correct AST node when shortcut is known",{"fg":2}],["                                                                                ",{}]],"35":[["                                                                                                                                   ",{}]],"36":[["Y2R::AST::YCP::YEPropagate                                                                                                         ",{}]],"37":[["  #compile                                                                                                                         ",{}]],"38":[["    returns correct AST node when the types are the same",{"fg":2}],["                                                                           ",{}]],"39":[["    returns correct AST node when the types are the same but their constness is different",{"fg":2}],["                                          ",{}]],"40":[["    returns correct AST node when the types are different and there is no shortcut",{"fg":2}],["                                                 ",{}]],"41":[["    returns correct AST node when the types are different and there is shortcut",{"fg":2}],["                                                    ",{}]],"42":[["    returns correct AST node when the types are different, their constness differ and there is shortcut",{"fg":2}],["                            ",{}]],"43":[["    returns correct AST node when when both the types and their constness are different",{"fg":2}],["                                            ",{}]],"44":[["    returns correct AST node when child is an indexed access and there is shortcut",{"fg":2}],["                                                 ",{}]],"45":[["    returns correct AST node when child is an indexed access and there is no shortcut",{"fg":2}],["                                              ",{}]],"46":[["                                                                                                                                   ",{}]],"47":[["Y2R::AST::YCP::YEReference                                                                                                         ",{}]],"48":[["  #compile                                                                                                                         ",{}]],"49":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"50":[["  #compile_as_setter                                                                                                               ",{}]],"51":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"52":[["  #compile_as_getter                                                                                                               ",{}]]}}],[0.023131,{"lines":{"0":[["  #compile                                                                                                                         ",{}]],"1":[["    returns correct AST node for while statements without do",{"fg":2}],["                                                                       ",{}]],"2":[["    returns correct AST node for while statements with do",{"fg":2}],["                                                                          ",{}]],"3":[["                                                                                                                                   ",{}]],"4":[["Y2R::AST::YCP::YCPCode                                                                                                             ",{}]],"5":[["  #compile                                                                                                                         ",{}]],"6":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"7":[["  #compile_as_block                                                                                                                ",{}]],"8":[["    returns correct AST node without arguments",{"fg":2}],["                                                                                     ",{}]],"9":[["    returns correct AST node with arguments",{"fg":2}],["                                                                                        ",{}]],"10":[["                                                                                                                                   ",{}]],"11":[["Y2R::AST::YCP::YEBinary                                                                                                            ",{}]],"12":[["  #compile                                                                                                                         ",{}]],"13":[["    returns correct AST node when both sides are constant",{"fg":2}],["                                                                          ",{}]],"14":[["    returns correct AST node when at least one side is not constant",{"fg":2}],["                                                                ",{}]],"15":[["                                                                                                                                   ",{}]],"16":[["Y2R::AST::YCP::YEBracket                                                                                                           ",{}]],"17":[["  #compile                                                                                                                         ",{}]],"18":[["    returns correct AST node when the default is nil",{"fg":2}],["                                                                               ",{}]],"19":[["    returns correct AST node when the default is not nil",{"fg":2}],["                                                                           ",{}]],"20":[["    returns correct AST node when the default is a call",{"fg":2}],["                                                                            ",{}]],"21":[["    returns correct AST node when the index has one element",{"fg":2}],["                                                                        ",{}]],"22":[["    returns correct AST node when index has multiple elements",{"fg":2}],["                                                                      ",{}]],"23":[["  #compile_as_shortcut                                                                                                             ",{}]],"24":[["    returns correct AST node when the default is nil",{"fg":2}],["                                                                               ",{}]],"25":[["    returns correct AST node when the default is not nil",{"fg":2}],["                                                                           ",{}]],"26":[["    returns correct AST node when the default is a call",{"fg":2}],["                                                                            ",{}]],"27":[["    returns correct AST node when the index has one element",{"fg":2}],["                                                                        ",{}]],"28":[["    returns correct AST node when index has multiple elements",{"fg":2}],["                                                                      ",{}]],"29":[["                                                                                                                                   ",{}]],"30":[["Y2R::AST::YCP::YEIs                                                                                                                ",{}]],"31":[["  #compile                                                                                                                         ",{}]],"32":[["    returns correct AST node for generic type",{"fg":2}],["                                                                                      ",{}]],"33":[["    returns correct AST node when shortcut is known",{"fg":2}],["                                                                                ",{}]],"34":[["                                                                                                                                   ",{}]],"35":[["Y2R::AST::YCP::YEPropagate                                                                                                         ",{}]],"36":[["  #compile                                                                                                                         ",{}]],"37":[["    returns correct AST node when the types are the same",{"fg":2}],["                                                                           ",{}]],"38":[["    returns correct AST node when the types are the same but their constness is different",{"fg":2}],["                                          ",{}]],"39":[["    returns correct AST node when the types are different and there is no shortcut",{"fg":2}],["                                                 ",{}]],"40":[["    returns correct AST node when the types are different and there is shortcut",{"fg":2}],["                                                    ",{}]],"41":[["    returns correct AST node when the types are different, their constness differ and there is shortcut",{"fg":2}],["                            ",{}]],"42":[["    returns correct AST node when when both the types and their constness are different",{"fg":2}],["                                            ",{}]],"43":[["    returns correct AST node when child is an indexed access and there is shortcut",{"fg":2}],["                                                 ",{}]],"44":[["    returns correct AST node when child is an indexed access and there is no shortcut",{"fg":2}],["                                              ",{}]],"45":[["                                                                                                                                   ",{}]],"46":[["Y2R::AST::YCP::YEReference                                                                                                         ",{}]],"47":[["  #compile                                                                                                                         ",{}]],"48":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"49":[["  #compile_as_setter                                                                                                               ",{}]],"50":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"51":[["  #compile_as_getter                                                                                                               ",{}]],"52":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]]}}],[0.01394,{"lines":{"0":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"1":[["  #compile_as_block                                                                                                                ",{}]],"2":[["    returns correct AST node without arguments",{"fg":2}],["                                                                                     ",{}]],"3":[["    returns correct AST node with arguments",{"fg":2}],["                                                                                        ",{}]],"4":[["                                                                                                                                   ",{}]],"5":[["Y2R::AST::YCP::YEBinary                                                                                                            ",{}]],"6":[["  #compile                                                                                                                         ",{}]],"7":[["    returns correct AST node when both sides are constant",{"fg":2}],["                                                                          ",{}]],"8":[["    returns correct AST node when at least one side is not constant",{"fg":2}],["                                                                ",{}]],"9":[["                                                                                                                                   ",{}]],"10":[["Y2R::AST::YCP::YEBracket                                                                                                           ",{}]],"11":[["  #compile                                                                                                                         ",{}]],"12":[["    returns correct AST node when the default is nil",{"fg":2}],["                                                                               ",{}]],"13":[["    returns correct AST node when the default is not nil",{"fg":2}],["                                                                           ",{}]],"14":[["    returns correct AST node when the default is a call",{"fg":2}],["                                                                            ",{}]],"15":[["    returns correct AST node when the index has one element",{"fg":2}],["                                                                        ",{}]],"16":[["    returns correct AST node when index has multiple elements",{"fg":2}],["                                                                      ",{}]],"17":[["  #compile_as_shortcut                                                                                                             ",{}]],"23":[["                                                                                                                                   ",{}]],"24":[["Y2R::AST::YCP::YEIs                                                                                                                ",{}]],"25":[["  #compile                                                                                                                         ",{}]],"26":[["    returns correct AST node for generic type",{"fg":2}],["                                                                                      ",{}]],"27":[["    returns correct AST node when shortcut is known",{"fg":2}],["                                                                                ",{}]],"28":[["                                                                                                                                   ",{}]],"29":[["Y2R::AST::YCP::YEPropagate                                                                                                         ",{}]],"30":[["  #compile                                                                                                                         ",{}]],"31":[["    returns correct AST node when the types are the same",{"fg":2}],["                                                                           ",{}]],"32":[["    returns correct AST node when the types are the same but their constness is different",{"fg":2}],["                                          ",{}]],"33":[["    returns correct AST node when the types are different and there is no shortcut",{"fg":2}],["                                                 ",{}]],"34":[["    returns correct AST node when the types are different and there is shortcut",{"fg":2}],["                                                    ",{}]],"35":[["    returns correct AST node when the types are different, their constness differ and there is shortcut",{"fg":2}],["                            ",{}]],"36":[["    returns correct AST node when when both the types and their constness are different",{"fg":2}],["                                            ",{}]],"37":[["    returns correct AST node when child is an indexed access and there is shortcut",{"fg":2}],["                                                 ",{}]],"38":[["    returns correct AST node when child is an indexed access and there is no shortcut",{"fg":2}],["                                              ",{}]],"39":[["                                                                                                                                   ",{}]],"40":[["Y2R::AST::YCP::YEReference                                                                                                         ",{}]],"41":[["  #compile                                                                                                                         ",{}]],"42":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"43":[["  #compile_as_setter                                                                                                               ",{}]],"44":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"45":[["  #compile_as_getter                                                                                                               ",{}]],"46":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"47":[["                                                                                                                                   ",{}]],"48":[["Y2R::AST::YCP::YEReturn                                                                                                            ",{}]],"49":[["  #compile                                                                                                                         ",{}]],"51":[["  #compile_as_block                                                                                                                ",{}]],"52":[["    returns correct AST node without arguments",{"fg":2}],["                                                                                     ",{}]]}}],[0.014084,{"lines":{"0":[["Y2R::AST::YCP::YEBinary                                                                                                            ",{}]],"1":[["  #compile                                                                                                                         ",{}]],"2":[["    returns correct AST node when both sides are constant",{"fg":2}],["                                                                          ",{}]],"3":[["    returns correct AST node when at least one side is not constant",{"fg":2}],["                                                                ",{}]],"5":[["Y2R::AST::YCP::YEBracket                                                                                                           ",{}]],"7":[["    returns correct AST node when the default is nil",{"fg":2}],["                                                                               ",{}]],"8":[["    returns correct AST node when the default is not nil",{"fg":2}],["                                                                           ",{}]],"9":[["    returns correct AST node when the default is a call",{"fg":2}],["                                                                            ",{}]],"10":[["    returns correct AST node when the index has one element",{"fg":2}],["                                                                        ",{}]],"11":[["    returns correct AST node when index has multiple elements",{"fg":2}],["                                                                      ",{}]],"12":[["  #compile_as_shortcut                                                                                                             ",{}]],"13":[["    returns correct AST node when the default is nil",{"fg":2}],["                                                                               ",{}]],"14":[["    returns correct AST node when the default is not nil",{"fg":2}],["                                                                           ",{}]],"15":[["    returns correct AST node when the default is a call",{"fg":2}],["                                                                            ",{}]],"16":[["    returns correct AST node when the index has one element",{"fg":2}],["                                                                        ",{}]],"17":[["    returns correct AST node when index has multiple elements",{"fg":2}],["                                                                      ",{}]],"18":[["                                                                                                                                   ",{}]],"19":[["Y2R::AST::YCP::YEIs                                                                                                                ",{}]],"20":[["  #compile                                                                                                                         ",{}]],"21":[["    returns correct AST node for generic type",{"fg":2}],["                                                                                      ",{}]],"22":[["    returns correct AST node when shortcut is known",{"fg":2}],["                                                                                ",{}]],"24":[["Y2R::AST::YCP::YEPropagate                                                                                                         ",{}]],"26":[["    returns correct AST node when the types are the same",{"fg":2}],["                                                                           ",{}]],"27":[["    returns correct AST node when the types are the same but their constness is different",{"fg":2}],["                                          ",{}]],"28":[["    returns correct AST node when the types are different and there is no shortcut",{"fg":2}],["                                                 ",{}]],"29":[["    returns correct AST node when the types are different and there is shortcut",{"fg":2}],["                                                    ",{}]],"30":[["    returns correct AST node when the types are different, their constness differ and there is shortcut",{"fg":2}],["                            ",{}]],"31":[["    returns correct AST node when when both the types and their constness are different",{"fg":2}],["                                            ",{}]],"32":[["    returns correct AST node when child is an indexed access and there is shortcut",{"fg":2}],["                                                 ",{}]],"33":[["    returns correct AST node when child is an indexed access and there is no shortcut",{"fg":2}],["                                              ",{}]],"34":[["                                                                                                                                   ",{}]],"35":[["Y2R::AST::YCP::YEReference                                                                                                         ",{}]],"36":[["  #compile                                                                                                                         ",{}]],"37":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"38":[["  #compile_as_setter                                                                                                               ",{}]],"39":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"40":[["  #compile_as_getter                                                                                                               ",{}]],"41":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"42":[["                                                                                                                                   ",{}]],"43":[["Y2R::AST::YCP::YEReturn                                                                                                            ",{}]],"44":[["  #compile                                                                                                                         ",{}]],"45":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"46":[["  #compile_as_block                                                                                                                ",{}]],"47":[["    returns correct AST node without arguments",{"fg":2}],["                                                                                     ",{}]],"48":[["    returns correct AST node with arguments",{"fg":2}],["                                                                                        ",{}]],"49":[["                                                                                                                                   ",{}]],"50":[["Y2R::AST::YCP::YETerm                                                                                                              ",{}]],"51":[["  #compile                                                                                                                         ",{}]],"52":[["    returns correct AST node for non-UI terms",{"fg":2}],["                                                                                      ",{}]]}}],[0.056868,{"lines":{"0":[["  #compile                                                                                                                         ",{}]],"1":[["    returns correct AST node when both sides are constant",{"fg":2}],["                                                                          ",{}]],"2":[["    returns correct AST node when at least one side is not constant",{"fg":2}],["                                                                ",{}]],"3":[["                                                                                                                                   ",{}]],"4":[["Y2R::AST::YCP::YEBracket                                                                                                           ",{}]],"5":[["  #compile                                                                                                                         ",{}]],"6":[["    returns correct AST node when the default is nil",{"fg":2}],["                                                                               ",{}]],"7":[["    returns correct AST node when the default is not nil",{"fg":2}],["                                                                           ",{}]],"8":[["    returns correct AST node when the default is a call",{"fg":2}],["                                                                            ",{}]],"9":[["    returns correct AST node when the index has one element",{"fg":2}],["                                                                        ",{}]],"10":[["    returns correct AST node when index has multiple elements",{"fg":2}],["                                                                      ",{}]],"11":[["  #compile_as_shortcut                                                                                                             ",{}]],"12":[["    returns correct AST node when the default is nil",{"fg":2}],["                                                                               ",{}]],"13":[["    returns correct AST node when the default is not nil",{"fg":2}],["                                                                           ",{}]],"14":[["    returns correct AST node when the default is a call",{"fg":2}],["                                                                            ",{}]],"15":[["    returns correct AST node when the index has one element",{"fg":2}],["                                                                        ",{}]],"16":[["    returns correct AST node when index has multiple elements",{"fg":2}],["                                                                      ",{}]],"17":[["                                                                                                                                   ",{}]],"18":[["Y2R::AST::YCP::YEIs                                                                                                                ",{}]],"19":[["  #compile                                                                                                                         ",{}]],"20":[["    returns correct AST node for generic type",{"fg":2}],["                                                                                      ",{}]],"21":[["    returns correct AST node when shortcut is known",{"fg":2}],["                                                                                ",{}]],"22":[["                                                                                                                                   ",{}]],"23":[["Y2R::AST::YCP::YEPropagate                                                                                                         ",{}]],"24":[["  #compile                                                                                                                         ",{}]],"25":[["    returns correct AST node when the types are the same",{"fg":2}],["                                                                           ",{}]],"26":[["    returns correct AST node when the types are the same but their constness is different",{"fg":2}],["                                          ",{}]],"27":[["    returns correct AST node when the types are different and there is no shortcut",{"fg":2}],["                                                 ",{}]],"28":[["    returns correct AST node when the types are different and there is shortcut",{"fg":2}],["                                                    ",{}]],"29":[["    returns correct AST node when the types are different, their constness differ and there is shortcut",{"fg":2}],["                            ",{}]],"30":[["    returns correct AST node when when both the types and their constness are different",{"fg":2}],["                                            ",{}]],"31":[["    returns correct AST node when child is an indexed access and there is shortcut",{"fg":2}],["                                                 ",{}]],"32":[["    returns correct AST node when child is an indexed access and there is no shortcut",{"fg":2}],["                                              ",{}]],"33":[["                                                                                                                                   ",{}]],"34":[["Y2R::AST::YCP::YEReference                                                                                                         ",{}]],"35":[["  #compile                                                                                                                         ",{}]],"36":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"37":[["  #compile_as_setter                                                                                                               ",{}]],"38":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"39":[["  #compile_as_getter                                                                                                               ",{}]],"40":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"41":[["                                                                                                                                   ",{}]],"42":[["Y2R::AST::YCP::YEReturn                                                                                                            ",{}]],"43":[["  #compile                                                                                                                         ",{}]],"44":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"45":[["  #compile_as_block                                                                                                                ",{}]],"46":[["    returns correct AST node without arguments",{"fg":2}],["                                                                                     ",{}]],"47":[["    returns correct AST node with arguments",{"fg":2}],["                                                                                        ",{}]],"48":[["                                                                                                                                   ",{}]],"49":[["Y2R::AST::YCP::YETerm                                                                                                              ",{}]],"50":[["  #compile                                                                                                                         ",{}]],"51":[["    returns correct AST node for non-UI terms",{"fg":2}],["                                                                                      ",{}]],"52":[["    returns correct AST node for UI terms",{"fg":2}],["                                                                                          ",{}]]}}],[0.014469,{"lines":{"0":[["    returns correct AST node when the default is a call",{"fg":2}],["                                                                            ",{}]],"1":[["    returns correct AST node when the index has one element",{"fg":2}],["                                                                        ",{}]],"2":[["    returns correct AST node when index has multiple elements",{"fg":2}],["                                                                      ",{}]],"3":[["  #compile_as_shortcut                                                                                                             ",{}]],"4":[["    returns correct AST node when the default is nil",{"fg":2}],["                                                                               ",{}]],"5":[["    returns correct AST node when the default is not nil",{"fg":2}],["                                                                           ",{}]],"6":[["    returns correct AST node when the default is a call",{"fg":2}],["                                                                            ",{}]],"7":[["    returns correct AST node when the index has one element",{"fg":2}],["                                                                        ",{}]],"8":[["    returns correct AST node when index has multiple elements",{"fg":2}],["                                                                      ",{}]],"9":[["                                                                                                                                   ",{}]],"10":[["Y2R::AST::YCP::YEIs                                                                                                                ",{}]],"11":[["  #compile                                                                                                                         ",{}]],"12":[["    returns correct AST node for generic type",{"fg":2}],["                                                                                      ",{}]],"13":[["    returns correct AST node when shortcut is known",{"fg":2}],["                                                                                ",{}]],"14":[["                                                                                                                                   ",{}]],"15":[["Y2R::AST::YCP::YEPropagate                                                                                                         ",{}]],"16":[["  #compile                                                                                                                         ",{}]],"17":[["    returns correct AST node when the types are the same",{"fg":2}],["                                                                           ",{}]],"18":[["    returns correct AST node when the types are the same but their constness is different",{"fg":2}],["                                          ",{}]],"19":[["    returns correct AST node when the types are different and there is no shortcut",{"fg":2}],["                                                 ",{}]],"20":[["    returns correct AST node when the types are different and there is shortcut",{"fg":2}],["                                                    ",{}]],"21":[["    returns correct AST node when the types are different, their constness differ and there is shortcut",{"fg":2}],["                            ",{}]],"22":[["    returns correct AST node when when both the types and their constness are different",{"fg":2}],["                                            ",{}]],"23":[["    returns correct AST node when child is an indexed access and there is shortcut",{"fg":2}],["                                                 ",{}]],"24":[["    returns correct AST node when child is an indexed access and there is no shortcut",{"fg":2}],["                                              ",{}]],"25":[["                                                                                                                                   ",{}]],"26":[["Y2R::AST::YCP::YEReference                                                                                                         ",{}]],"27":[["  #compile                                                                                                                         ",{}]],"28":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"29":[["  #compile_as_setter                                                                                                               ",{}]],"30":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"31":[["  #compile_as_getter                                                                                                               ",{}]],"32":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"34":[["Y2R::AST::YCP::YEReturn                                                                                                            ",{}]],"37":[["  #compile_as_block                                                                                                                ",{}]],"38":[["    returns correct AST node without arguments",{"fg":2}],["                                                                                     ",{}]],"39":[["    returns correct AST node with arguments",{"fg":2}],["                                                                                        ",{}]],"40":[["                                                                                                                                   ",{}]],"41":[["Y2R::AST::YCP::YETerm                                                                                                              ",{}]],"42":[["  #compile                                                                                                                         ",{}]],"43":[["    returns correct AST node for non-UI terms",{"fg":2}],["                                                                                      ",{}]],"44":[["    returns correct AST node for UI terms",{"fg":2}],["                                                                                          ",{}]],"45":[["    returns correct AST node for UI terms starting with lowercase",{"fg":2}],["                                                                  ",{}]],"46":[["                                                                                                                                   ",{}]],"47":[["Y2R::AST::YCP::YETriple                                                                                                            ",{}]],"48":[["  #compile                                                                                                                         ",{}]],"49":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"50":[["                                                                                                                                   ",{}]],"51":[["Y2R::AST::YCP::YEUnary                                                                                                             ",{}]],"52":[["  #compile                                                                                                                         ",{}]]}}],[0.012881,{"lines":{"0":[["    returns correct AST node when the default is not nil",{"fg":2}],["                                                                           ",{}]],"1":[["    returns correct AST node when the default is a call",{"fg":2}],["                                                                            ",{}]],"2":[["    returns correct AST node when the index has one element",{"fg":2}],["                                                                        ",{}]],"3":[["    returns correct AST node when index has multiple elements",{"fg":2}],["                                                                      ",{}]],"4":[["                                                                                                                                   ",{}]],"5":[["Y2R::AST::YCP::YEIs                                                                                                                ",{}]],"6":[["  #compile                                                                                                                         ",{}]],"7":[["    returns correct AST node for generic type",{"fg":2}],["                                                                                      ",{}]],"8":[["    returns correct AST node when shortcut is known",{"fg":2}],["                                                                                ",{}]],"10":[["Y2R::AST::YCP::YEPropagate                                                                                                         ",{}]],"12":[["    returns correct AST node when the types are the same",{"fg":2}],["                                                                           ",{}]],"13":[["    returns correct AST node when the types are the same but their constness is different",{"fg":2}],["                                          ",{}]],"14":[["    returns correct AST node when the types are different and there is no shortcut",{"fg":2}],["                                                 ",{}]],"15":[["    returns correct AST node when the types are different and there is shortcut",{"fg":2}],["                                                    ",{}]],"16":[["    returns correct AST node when the types are different, their constness differ and there is shortcut",{"fg":2}],["                            ",{}]],"17":[["    returns correct AST node when when both the types and their constness are different",{"fg":2}],["                                            ",{}]],"18":[["    returns correct AST node when child is an indexed access and there is shortcut",{"fg":2}],["                                                 ",{}]],"19":[["    returns correct AST node when child is an indexed access and there is no shortcut",{"fg":2}],["                                              ",{}]],"20":[["                                                                                                                                   ",{}]],"21":[["Y2R::AST::YCP::YEReference                                                                                                         ",{}]],"22":[["  #compile                                                                                                                         ",{}]],"23":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"24":[["  #compile_as_setter                                                                                                               ",{}]],"25":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"26":[["  #compile_as_getter                                                                                                               ",{}]],"27":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"28":[["                                                                                                                                   ",{}]],"29":[["Y2R::AST::YCP::YEReturn                                                                                                            ",{}]],"30":[["  #compile                                                                                                                         ",{}]],"31":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"32":[["  #compile_as_block                                                                                                                ",{}]],"33":[["    returns correct AST node without arguments",{"fg":2}],["                                                                                     ",{}]],"34":[["    returns correct AST node with arguments",{"fg":2}],["                                                                                        ",{}]],"35":[["                                                                                                                                   ",{}]],"36":[["Y2R::AST::YCP::YETerm                                                                                                              ",{}]],"37":[["  #compile                                                                                                                         ",{}]],"38":[["    returns correct AST node for non-UI terms",{"fg":2}],["                                                                                      ",{}]],"39":[["    returns correct AST node for UI terms",{"fg":2}],["                                                                                          ",{}]],"40":[["    returns correct AST node for UI terms starting with lowercase",{"fg":2}],["                                                                  ",{}]],"41":[["                                                                                                                                   ",{}]],"42":[["Y2R::AST::YCP::YETriple                                                                                                            ",{}]],"43":[["  #compile                                                                                                                         ",{}]],"44":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"45":[["                                                                                                                                   ",{}]],"46":[["Y2R::AST::YCP::YEUnary                                                                                                             ",{}]],"47":[["  #compile                                                                                                                         ",{}]],"48":[["    returns correct AST node when child is not constant",{"fg":2}],["                                                                            ",{}]],"49":[["    returns correct AST node when child is constant",{"fg":2}],["                                                                                ",{}]],"51":[["Y2R::Parser                                                                                                                        ",{}]],"52":[["  #parse                                                                                                                           ",{}]]}}],[0.0468,{"lines":{"0":[["    returns correct AST node when the default is a call",{"fg":2}],["                                                                            ",{}]],"1":[["    returns correct AST node when the index has one element",{"fg":2}],["                                                                        ",{}]],"2":[["    returns correct AST node when index has multiple elements",{"fg":2}],["                                                                      ",{}]],"3":[["                                                                                                                                   ",{}]],"4":[["Y2R::AST::YCP::YEIs                                                                                                                ",{}]],"5":[["  #compile                                                                                                                         ",{}]],"6":[["    returns correct AST node for generic type",{"fg":2}],["                                                                                      ",{}]],"7":[["    returns correct AST node when shortcut is known",{"fg":2}],["                                                                                ",{}]],"8":[["                                                                                                                                   ",{}]],"9":[["Y2R::AST::YCP::YEPropagate                                                                                                         ",{}]],"10":[["  #compile                                                                                                                         ",{}]],"11":[["    returns correct AST node when the types are the same",{"fg":2}],["                                                                           ",{}]],"12":[["    returns correct AST node when the types are the same but their constness is different",{"fg":2}],["                                          ",{}]],"13":[["    returns correct AST node when the types are different and there is no shortcut",{"fg":2}],["                                                 ",{}]],"14":[["    returns correct AST node when the types are different and there is shortcut",{"fg":2}],["                                                    ",{}]],"15":[["    returns correct AST node when the types are different, their constness differ and there is shortcut",{"fg":2}],["                            ",{}]],"16":[["    returns correct AST node when when both the types and their constness are different",{"fg":2}],["                                            ",{}]],"17":[["    returns correct AST node when child is an indexed access and there is shortcut",{"fg":2}],["                                                 ",{}]],"18":[["    returns correct AST node when child is an indexed access and there is no shortcut",{"fg":2}],["                                              ",{}]],"19":[["                                                                                                                                   ",{}]],"20":[["Y2R::AST::YCP::YEReference                                                                                                         ",{}]],"21":[["  #compile                                                                                                                         ",{}]],"22":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"23":[["  #compile_as_setter                                                                                                               ",{}]],"24":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"25":[["  #compile_as_getter                                                                                                               ",{}]],"26":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"27":[["                                                                                                                                   ",{}]],"28":[["Y2R::AST::YCP::YEReturn                                                                                                            ",{}]],"29":[["  #compile                                                                                                                         ",{}]],"30":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"31":[["  #compile_as_block                                                                                                                ",{}]],"32":[["    returns correct AST node without arguments",{"fg":2}],["                                                                                     ",{}]],"33":[["    returns correct AST node with arguments",{"fg":2}],["                                                                                        ",{}]],"34":[["                                                                                                                                   ",{}]],"35":[["Y2R::AST::YCP::YETerm                                                                                                              ",{}]],"36":[["  #compile                                                                                                                         ",{}]],"37":[["    returns correct AST node for non-UI terms",{"fg":2}],["                                                                                      ",{}]],"38":[["    returns correct AST node for UI terms",{"fg":2}],["                                                                                          ",{}]],"39":[["    returns correct AST node for UI terms starting with lowercase",{"fg":2}],["                                                                  ",{}]],"40":[["                                                                                                                                   ",{}]],"41":[["Y2R::AST::YCP::YETriple                                                                                                            ",{}]],"42":[["  #compile                                                                                                                         ",{}]],"43":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"44":[["                                                                                                                                   ",{}]],"45":[["Y2R::AST::YCP::YEUnary                                                                                                             ",{}]],"46":[["  #compile                                                                                                                         ",{}]],"47":[["    returns correct AST node when child is not constant",{"fg":2}],["                                                                            ",{}]],"48":[["    returns correct AST node when child is constant",{"fg":2}],["                                                                                ",{}]],"49":[["                                                                                                                                   ",{}]],"50":[["Y2R::Parser                                                                                                                        ",{}]],"51":[["  #parse                                                                                                                           ",{}]],"52":[["    parses a simple program",{"fg":2}],["                                                                                                        ",{}]]}}],[0.046992,{"lines":{"0":[["    returns correct AST node when the index has one element",{"fg":2}],["                                                                        ",{}]],"1":[["    returns correct AST node when index has multiple elements",{"fg":2}],["                                                                      ",{}]],"2":[["                                                                                                                                   ",{}]],"3":[["Y2R::AST::YCP::YEIs                                                                                                                ",{}]],"4":[["  #compile                                                                                                                         ",{}]],"5":[["    returns correct AST node for generic type",{"fg":2}],["                                                                                      ",{}]],"6":[["    returns correct AST node when shortcut is known",{"fg":2}],["                                                                                ",{}]],"7":[["                                                                                                                                   ",{}]],"8":[["Y2R::AST::YCP::YEPropagate                                                                                                         ",{}]],"9":[["  #compile                                                                                                                         ",{}]],"10":[["    returns correct AST node when the types are the same",{"fg":2}],["                                                                           ",{}]],"11":[["    returns correct AST node when the types are the same but their constness is different",{"fg":2}],["                                          ",{}]],"12":[["    returns correct AST node when the types are different and there is no shortcut",{"fg":2}],["                                                 ",{}]],"13":[["    returns correct AST node when the types are different and there is shortcut",{"fg":2}],["                                                    ",{}]],"14":[["    returns correct AST node when the types are different, their constness differ and there is shortcut",{"fg":2}],["                            ",{}]],"15":[["    returns correct AST node when when both the types and their constness are different",{"fg":2}],["                                            ",{}]],"16":[["    returns correct AST node when child is an indexed access and there is shortcut",{"fg":2}],["                                                 ",{}]],"17":[["    returns correct AST node when child is an indexed access and there is no shortcut",{"fg":2}],["                                              ",{}]],"18":[["                                                                                                                                   ",{}]],"19":[["Y2R::AST::YCP::YEReference                                                                                                         ",{}]],"20":[["  #compile                                                                                                                         ",{}]],"21":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"22":[["  #compile_as_setter                                                                                                               ",{}]],"23":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"24":[["  #compile_as_getter                                                                                                               ",{}]],"25":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"26":[["                                                                                                                                   ",{}]],"27":[["Y2R::AST::YCP::YEReturn                                                                                                            ",{}]],"28":[["  #compile                                                                                                                         ",{}]],"29":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"30":[["  #compile_as_block                                                                                                                ",{}]],"31":[["    returns correct AST node without arguments",{"fg":2}],["                                                                                     ",{}]],"32":[["    returns correct AST node with arguments",{"fg":2}],["                                                                                        ",{}]],"33":[["                                                                                                                                   ",{}]],"34":[["Y2R::AST::YCP::YETerm                                                                                                              ",{}]],"35":[["  #compile                                                                                                                         ",{}]],"36":[["    returns correct AST node for non-UI terms",{"fg":2}],["                                                                                      ",{}]],"37":[["    returns correct AST node for UI terms",{"fg":2}],["                                                                                          ",{}]],"38":[["    returns correct AST node for UI terms starting with lowercase",{"fg":2}],["                                                                  ",{}]],"39":[["                                                                                                                                   ",{}]],"40":[["Y2R::AST::YCP::YETriple                                                                                                            ",{}]],"41":[["  #compile                                                                                                                         ",{}]],"42":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"43":[["                                                                                                                                   ",{}]],"44":[["Y2R::AST::YCP::YEUnary                                                                                                             ",{}]],"45":[["  #compile                                                                                                                         ",{}]],"46":[["    returns correct AST node when child is not constant",{"fg":2}],["                                                                            ",{}]],"47":[["    returns correct AST node when child is constant",{"fg":2}],["                                                                                ",{}]],"48":[["                                                                                                                                   ",{}]],"49":[["Y2R::Parser                                                                                                                        ",{}]],"50":[["  #parse                                                                                                                           ",{}]],"51":[["    parses a simple program",{"fg":2}],["                                                                                                        ",{}]],"52":[["    parses a more complex program",{"fg":2}],["                                                                                                  ",{}]]}}],[0.038931,{"lines":{"0":[["    returns correct AST node when shortcut is known",{"fg":2}],["                                                                                ",{}]],"1":[["                                                                                                                                   ",{}]],"2":[["Y2R::AST::YCP::YEPropagate                                                                                                         ",{}]],"3":[["  #compile                                                                                                                         ",{}]],"4":[["    returns correct AST node when the types are the same",{"fg":2}],["                                                                           ",{}]],"5":[["    returns correct AST node when the types are the same but their constness is different",{"fg":2}],["                                          ",{}]],"6":[["    returns correct AST node when the types are different and there is no shortcut",{"fg":2}],["                                                 ",{}]],"7":[["    returns correct AST node when the types are different and there is shortcut",{"fg":2}],["                                                    ",{}]],"8":[["    returns correct AST node when the types are different, their constness differ and there is shortcut",{"fg":2}],["                            ",{}]],"9":[["    returns correct AST node when when both the types and their constness are different",{"fg":2}],["                                            ",{}]],"10":[["    returns correct AST node when child is an indexed access and there is shortcut",{"fg":2}],["                                                 ",{}]],"11":[["    returns correct AST node when child is an indexed access and there is no shortcut",{"fg":2}],["                                              ",{}]],"12":[["                                                                                                                                   ",{}]],"13":[["Y2R::AST::YCP::YEReference                                                                                                         ",{}]],"14":[["  #compile                                                                                                                         ",{}]],"15":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"16":[["  #compile_as_setter                                                                                                               ",{}]],"17":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"18":[["  #compile_as_getter                                                                                                               ",{}]],"19":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"20":[["                                                                                                                                   ",{}]],"21":[["Y2R::AST::YCP::YEReturn                                                                                                            ",{}]],"22":[["  #compile                                                                                                                         ",{}]],"24":[["  #compile_as_block                                                                                                                ",{}]],"25":[["    returns correct AST node without arguments",{"fg":2}],["                                                                                     ",{}]],"26":[["    returns correct AST node with arguments",{"fg":2}],["                                                                                        ",{}]],"27":[["                                                                                                                                   ",{}]],"28":[["Y2R::AST::YCP::YETerm                                                                                                              ",{}]],"29":[["  #compile                                                                                                                         ",{}]],"30":[["    returns correct AST node for non-UI terms",{"fg":2}],["                                                                                      ",{}]],"31":[["    returns correct AST node for UI terms",{"fg":2}],["                                                                                          ",{}]],"32":[["    returns correct AST node for UI terms starting with lowercase",{"fg":2}],["                                                                  ",{}]],"34":[["Y2R::AST::YCP::YETriple                                                                                                            ",{}]],"36":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"37":[["                                                                                                                                   ",{}]],"38":[["Y2R::AST::YCP::YEUnary                                                                                                             ",{}]],"39":[["  #compile                                                                                                                         ",{}]],"40":[["    returns correct AST node when child is not constant",{"fg":2}],["                                                                            ",{}]],"41":[["    returns correct AST node when child is constant",{"fg":2}],["                                                                                ",{}]],"42":[["                                                                                                                                   ",{}]],"43":[["Y2R::Parser                                                                                                                        ",{}]],"44":[["  #parse                                                                                                                           ",{}]],"45":[["    parses a simple program",{"fg":2}],["                                                                                                        ",{}]],"46":[["    parses a more complex program",{"fg":2}],["                                                                                                  ",{}]],"47":[["    raises an exception on syntax error",{"fg":2}],["                                                                                            ",{}]],"49":[["Y2R                                                                                                                                ",{}]],"50":[["  .compile                                                                                                                         ",{}]],"51":[["    values                                                                                                                         ",{}]],"52":[["      voids                                                                                                                        ",{}]]}}],[0.049082,{"lines":{"0":[["                                                                                                                                   ",{}]],"1":[["Y2R::AST::YCP::YEPropagate                                                                                                         ",{}]],"2":[["  #compile                                                                                                                         ",{}]],"3":[["    returns correct AST node when the types are the same",{"fg":2}],["                                                                           ",{}]],"4":[["    returns correct AST node when the types are the same but their constness is different",{"fg":2}],["                                          ",{}]],"5":[["    returns correct AST node when the types are different and there is no shortcut",{"fg":2}],["                                                 ",{}]],"6":[["    returns correct AST node when the types are different and there is shortcut",{"fg":2}],["                                                    ",{}]],"7":[["    returns correct AST node when the types are different, their constness differ and there is shortcut",{"fg":2}],["                            ",{}]],"8":[["    returns correct AST node when when both the types and their constness are different",{"fg":2}],["                                            ",{}]],"9":[["    returns correct AST node when child is an indexed access and there is shortcut",{"fg":2}],["                                                 ",{}]],"10":[["    returns correct AST node when child is an indexed access and there is no shortcut",{"fg":2}],["                                              ",{}]],"11":[["                                                                                                                                   ",{}]],"12":[["Y2R::AST::YCP::YEReference                                                                                                         ",{}]],"13":[["  #compile                                                                                                                         ",{}]],"14":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"15":[["  #compile_as_setter                                                                                                               ",{}]],"16":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"17":[["  #compile_as_getter                                                                                                               ",{}]],"18":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"19":[["                                                                                                                                   ",{}]],"20":[["Y2R::AST::YCP::YEReturn                                                                                                            ",{}]],"21":[["  #compile                                                                                                                         ",{}]],"22":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"23":[["  #compile_as_block                                                                                                                ",{}]],"24":[["    returns correct AST node without arguments",{"fg":2}],["                                                                                     ",{}]],"25":[["    returns correct AST node with arguments",{"fg":2}],["                                                                                        ",{}]],"26":[["                                                                                                                                   ",{}]],"27":[["Y2R::AST::YCP::YETerm                                                                                                              ",{}]],"28":[["  #compile                                                                                                                         ",{}]],"29":[["    returns correct AST node for non-UI terms",{"fg":2}],["                                                                                      ",{}]],"30":[["    returns correct AST node for UI terms",{"fg":2}],["                                                                                          ",{}]],"31":[["    returns correct AST node for UI terms starting with lowercase",{"fg":2}],["                                                                  ",{}]],"32":[["                                                                                                                                   ",{}]],"33":[["Y2R::AST::YCP::YETriple                                                                                                            ",{}]],"34":[["  #compile                                                                                                                         ",{}]],"35":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"36":[["                                                                                                                                   ",{}]],"37":[["Y2R::AST::YCP::YEUnary                                                                                                             ",{}]],"38":[["  #compile                                                                                                                         ",{}]],"39":[["    returns correct AST node when child is not constant",{"fg":2}],["                                                                            ",{}]],"40":[["    returns correct AST node when child is constant",{"fg":2}],["                                                                                ",{}]],"41":[["                                                                                                                                   ",{}]],"42":[["Y2R::Parser                                                                                                                        ",{}]],"43":[["  #parse                                                                                                                           ",{}]],"44":[["    parses a simple program",{"fg":2}],["                                                                                                        ",{}]],"45":[["    parses a more complex program",{"fg":2}],["                                                                                                  ",{}]],"46":[["    raises an exception on syntax error",{"fg":2}],["                                                                                            ",{}]],"47":[["                                                                                                                                   ",{}]],"48":[["Y2R                                                                                                                                ",{}]],"49":[["  .compile                                                                                                                         ",{}]],"50":[["    values                                                                                                                         ",{}]],"51":[["      voids                                                                                                                        ",{}]],"52":[["        translates YCP `nil`s as Ruby `nil`s",{"fg":2}],["                                                                                       ",{}]]}}],[0.000128,{"lines":{"0":[["Y2R::AST::YCP::YEPropagate                                                                                                         ",{}]],"1":[["  #compile                                                                                                                         ",{}]],"2":[["    returns correct AST node when the types are the same",{"fg":2}],["                                                                           ",{}]],"3":[["    returns correct AST node when the types are the same but their constness is different",{"fg":2}],["                                          ",{}]],"4":[["    returns correct AST node when the types are different and there is no shortcut",{"fg":2}],["                                                 ",{}]],"5":[["    returns correct AST node when the types are different and there is shortcut",{"fg":2}],["                                                    ",{}]],"6":[["    returns correct AST node when the types are different, their constness differ and there is shortcut",{"fg":2}],["                            ",{}]],"7":[["    returns correct AST node when when both the types and their constness are different",{"fg":2}],["                                            ",{}]],"8":[["    returns correct AST node when child is an indexed access and there is shortcut",{"fg":2}],["                                                 ",{}]],"9":[["    returns correct AST node when child is an indexed access and there is no shortcut",{"fg":2}],["                                              ",{}]],"10":[["                                                                                                                                   ",{}]],"11":[["Y2R::AST::YCP::YEReference                                                                                                         ",{}]],"12":[["  #compile                                                                                                                         ",{}]],"13":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"14":[["  #compile_as_setter                                                                                                               ",{}]],"15":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"16":[["  #compile_as_getter                                                                                                               ",{}]],"17":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"18":[["                                                                                                                                   ",{}]],"19":[["Y2R::AST::YCP::YEReturn                                                                                                            ",{}]],"20":[["  #compile                                                                                                                         ",{}]],"21":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"22":[["  #compile_as_block                                                                                                                ",{}]],"23":[["    returns correct AST node without arguments",{"fg":2}],["                                                                                     ",{}]],"24":[["    returns correct AST node with arguments",{"fg":2}],["                                                                                        ",{}]],"25":[["                                                                                                                                   ",{}]],"26":[["Y2R::AST::YCP::YETerm                                                                                                              ",{}]],"27":[["  #compile                                                                                                                         ",{}]],"28":[["    returns correct AST node for non-UI terms",{"fg":2}],["                                                                                      ",{}]],"29":[["    returns correct AST node for UI terms",{"fg":2}],["                                                                                          ",{}]],"30":[["    returns correct AST node for UI terms starting with lowercase",{"fg":2}],["                                                                  ",{}]],"31":[["                                                                                                                                   ",{}]],"32":[["Y2R::AST::YCP::YETriple                                                                                                            ",{}]],"33":[["  #compile                                                                                                                         ",{}]],"34":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"35":[["                                                                                                                                   ",{}]],"36":[["Y2R::AST::YCP::YEUnary                                                                                                             ",{}]],"37":[["  #compile                                                                                                                         ",{}]],"38":[["    returns correct AST node when child is not constant",{"fg":2}],["                                                                            ",{}]],"39":[["    returns correct AST node when child is constant",{"fg":2}],["                                                                                ",{}]],"40":[["                                                                                                                                   ",{}]],"41":[["Y2R::Parser                                                                                                                        ",{}]],"42":[["  #parse                                                                                                                           ",{}]],"43":[["    parses a simple program",{"fg":2}],["                                                                                                        ",{}]],"44":[["    parses a more complex program",{"fg":2}],["                                                                                                  ",{}]],"45":[["    raises an exception on syntax error",{"fg":2}],["                                                                                            ",{}]],"46":[["                                                                                                                                   ",{}]],"47":[["Y2R                                                                                                                                ",{}]],"48":[["  .compile                                                                                                                         ",{}]],"49":[["    values                                                                                                                         ",{}]],"50":[["      voids                                                                                                                        ",{}]],"51":[["        translates YCP `nil`s as Ruby `nil`s",{"fg":2}],["                                                                                       ",{}]],"52":[["      booleans                                                                                                                     ",{}]]}}],[0.047136,{"lines":{"0":[["  #compile                                                                                                                         ",{}]],"1":[["    returns correct AST node when the types are the same",{"fg":2}],["                                                                           ",{}]],"2":[["    returns correct AST node when the types are the same but their constness is different",{"fg":2}],["                                          ",{}]],"3":[["    returns correct AST node when the types are different and there is no shortcut",{"fg":2}],["                                                 ",{}]],"4":[["    returns correct AST node when the types are different and there is shortcut",{"fg":2}],["                                                    ",{}]],"5":[["    returns correct AST node when the types are different, their constness differ and there is shortcut",{"fg":2}],["                            ",{}]],"6":[["    returns correct AST node when when both the types and their constness are different",{"fg":2}],["                                            ",{}]],"7":[["    returns correct AST node when child is an indexed access and there is shortcut",{"fg":2}],["                                                 ",{}]],"8":[["    returns correct AST node when child is an indexed access and there is no shortcut",{"fg":2}],["                                              ",{}]],"9":[["                                                                                                                                   ",{}]],"10":[["Y2R::AST::YCP::YEReference                                                                                                         ",{}]],"11":[["  #compile                                                                                                                         ",{}]],"12":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"13":[["  #compile_as_setter                                                                                                               ",{}]],"14":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"15":[["  #compile_as_getter                                                                                                               ",{}]],"16":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"17":[["                                                                                                                                   ",{}]],"18":[["Y2R::AST::YCP::YEReturn                                                                                                            ",{}]],"19":[["  #compile                                                                                                                         ",{}]],"20":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"21":[["  #compile_as_block                                                                                                                ",{}]],"22":[["    returns correct AST node without arguments",{"fg":2}],["                                                                                     ",{}]],"23":[["    returns correct AST node with arguments",{"fg":2}],["                                                                                        ",{}]],"24":[["                                                                                                                                   ",{}]],"25":[["Y2R::AST::YCP::YETerm                                                                                                              ",{}]],"26":[["  #compile                                                                                                                         ",{}]],"27":[["    returns correct AST node for non-UI terms",{"fg":2}],["                                                                                      ",{}]],"28":[["    returns correct AST node for UI terms",{"fg":2}],["                                                                                          ",{}]],"29":[["    returns correct AST node for UI terms starting with lowercase",{"fg":2}],["                                                                  ",{}]],"30":[["                                                                                                                                   ",{}]],"31":[["Y2R::AST::YCP::YETriple                                                                                                            ",{}]],"32":[["  #compile                                                                                                                         ",{}]],"33":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"34":[["                                                                                                                                   ",{}]],"35":[["Y2R::AST::YCP::YEUnary                                                                                                             ",{}]],"36":[["  #compile                                                                                                                         ",{}]],"37":[["    returns correct AST node when child is not constant",{"fg":2}],["                                                                            ",{}]],"38":[["    returns correct AST node when child is constant",{"fg":2}],["                                                                                ",{}]],"39":[["                                                                                                                                   ",{}]],"40":[["Y2R::Parser                                                                                                                        ",{}]],"41":[["  #parse                                                                                                                           ",{}]],"42":[["    parses a simple program",{"fg":2}],["                                                                                                        ",{}]],"43":[["    parses a more complex program",{"fg":2}],["                                                                                                  ",{}]],"44":[["    raises an exception on syntax error",{"fg":2}],["                                                                                            ",{}]],"45":[["                                                                                                                                   ",{}]],"46":[["Y2R                                                                                                                                ",{}]],"47":[["  .compile                                                                                                                         ",{}]],"48":[["    values                                                                                                                         ",{}]],"49":[["      voids                                                                                                                        ",{}]],"50":[["        translates YCP `nil`s as Ruby `nil`s",{"fg":2}],["                                                                                       ",{}]],"51":[["      booleans                                                                                                                     ",{}]],"52":[["        translates YCP booleans as Ruby booleans",{"fg":2}],["                                                                                   ",{}]]}}],[0.000105,{"lines":{"0":[["    returns correct AST node when the types are the same",{"fg":2}],["                                                                           ",{}]],"1":[["    returns correct AST node when the types are the same but their constness is different",{"fg":2}],["                                          ",{}]],"2":[["    returns correct AST node when the types are different and there is no shortcut",{"fg":2}],["                                                 ",{}]],"3":[["    returns correct AST node when the types are different and there is shortcut",{"fg":2}],["                                                    ",{}]],"4":[["    returns correct AST node when the types are different, their constness differ and there is shortcut",{"fg":2}],["                            ",{}]],"5":[["    returns correct AST node when when both the types and their constness are different",{"fg":2}],["                                            ",{}]],"6":[["    returns correct AST node when child is an indexed access and there is shortcut",{"fg":2}],["                                                 ",{}]],"7":[["    returns correct AST node when child is an indexed access and there is no shortcut",{"fg":2}],["                                              ",{}]],"8":[["                                                                                                                                   ",{}]],"9":[["Y2R::AST::YCP::YEReference                                                                                                         ",{}]],"10":[["  #compile                                                                                                                         ",{}]],"11":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"12":[["  #compile_as_setter                                                                                                               ",{}]],"13":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"14":[["  #compile_as_getter                                                                                                               ",{}]],"15":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"16":[["                                                                                                                                   ",{}]],"17":[["Y2R::AST::YCP::YEReturn                                                                                                            ",{}]],"18":[["  #compile                                                                                                                         ",{}]],"19":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"20":[["  #compile_as_block                                                                                                                ",{}]],"21":[["    returns correct AST node without arguments",{"fg":2}],["                                                                                     ",{}]],"22":[["    returns correct AST node with arguments",{"fg":2}],["                                                                                        ",{}]],"23":[["                                                                                                                                   ",{}]],"24":[["Y2R::AST::YCP::YETerm                                                                                                              ",{}]],"25":[["  #compile                                                                                                                         ",{}]],"26":[["    returns correct AST node for non-UI terms",{"fg":2}],["                                                                                      ",{}]],"27":[["    returns correct AST node for UI terms",{"fg":2}],["                                                                                          ",{}]],"28":[["    returns correct AST node for UI terms starting with lowercase",{"fg":2}],["                                                                  ",{}]],"29":[["                                                                                                                                   ",{}]],"30":[["Y2R::AST::YCP::YETriple                                                                                                            ",{}]],"31":[["  #compile                                                                                                                         ",{}]],"32":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"33":[["                                                                                                                                   ",{}]],"34":[["Y2R::AST::YCP::YEUnary                                                                                                             ",{}]],"35":[["  #compile                                                                                                                         ",{}]],"36":[["    returns correct AST node when child is not constant",{"fg":2}],["                                                                            ",{}]],"37":[["    returns correct AST node when child is constant",{"fg":2}],["                                                                                ",{}]],"38":[["                                                                                                                                   ",{}]],"39":[["Y2R::Parser                                                                                                                        ",{}]],"40":[["  #parse                                                                                                                           ",{}]],"41":[["    parses a simple program",{"fg":2}],["                                                                                                        ",{}]],"42":[["    parses a more complex program",{"fg":2}],["                                                                                                  ",{}]],"43":[["    raises an exception on syntax error",{"fg":2}],["                                                                                            ",{}]],"44":[["                                                                                                                                   ",{}]],"45":[["Y2R                                                                                                                                ",{}]],"46":[["  .compile                                                                                                                         ",{}]],"47":[["    values                                                                                                                         ",{}]],"48":[["      voids                                                                                                                        ",{}]],"49":[["        translates YCP `nil`s as Ruby `nil`s",{"fg":2}],["                                                                                       ",{}]],"50":[["      booleans                                                                                                                     ",{}]],"51":[["        translates YCP booleans as Ruby booleans",{"fg":2}],["                                                                                   ",{}]],"52":[["      integers                                                                                                                     ",{}]]}}],[0.045569,{"lines":{"0":[["    returns correct AST node when the types are the same but their constness is different",{"fg":2}],["                                          ",{}]],"1":[["    returns correct AST node when the types are different and there is no shortcut",{"fg":2}],["                                                 ",{}]],"2":[["    returns correct AST node when the types are different and there is shortcut",{"fg":2}],["                                                    ",{}]],"3":[["    returns correct AST node when the types are different, their constness differ and there is shortcut",{"fg":2}],["                            ",{}]],"4":[["    returns correct AST node when when both the types and their constness are different",{"fg":2}],["                                            ",{}]],"5":[["    returns correct AST node when child is an indexed access and there is shortcut",{"fg":2}],["                                                 ",{}]],"6":[["    returns correct AST node when child is an indexed access and there is no shortcut",{"fg":2}],["                                              ",{}]],"7":[["                                                                                                                                   ",{}]],"8":[["Y2R::AST::YCP::YEReference                                                                                                         ",{}]],"9":[["  #compile                                                                                                                         ",{}]],"10":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"11":[["  #compile_as_setter                                                                                                               ",{}]],"12":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"13":[["  #compile_as_getter                                                                                                               ",{}]],"14":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"15":[["                                                                                                                                   ",{}]],"16":[["Y2R::AST::YCP::YEReturn                                                                                                            ",{}]],"17":[["  #compile                                                                                                                         ",{}]],"18":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"19":[["  #compile_as_block                                                                                                                ",{}]],"20":[["    returns correct AST node without arguments",{"fg":2}],["                                                                                     ",{}]],"21":[["    returns correct AST node with arguments",{"fg":2}],["                                                                                        ",{}]],"22":[["                                                                                                                                   ",{}]],"23":[["Y2R::AST::YCP::YETerm                                                                                                              ",{}]],"24":[["  #compile                                                                                                                         ",{}]],"25":[["    returns correct AST node for non-UI terms",{"fg":2}],["                                                                                      ",{}]],"26":[["    returns correct AST node for UI terms",{"fg":2}],["                                                                                          ",{}]],"27":[["    returns correct AST node for UI terms starting with lowercase",{"fg":2}],["                                                                  ",{}]],"28":[["                                                                                                                                   ",{}]],"29":[["Y2R::AST::YCP::YETriple                                                                                                            ",{}]],"30":[["  #compile                                                                                                                         ",{}]],"31":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"32":[["                                                                                                                                   ",{}]],"33":[["Y2R::AST::YCP::YEUnary                                                                                                             ",{}]],"34":[["  #compile                                                                                                                         ",{}]],"35":[["    returns correct AST node when child is not constant",{"fg":2}],["                                                                            ",{}]],"36":[["    returns correct AST node when child is constant",{"fg":2}],["                                                                                ",{}]],"37":[["                                                                                                                                   ",{}]],"38":[["Y2R::Parser                                                                                                                        ",{}]],"39":[["  #parse                                                                                                                           ",{}]],"40":[["    parses a simple program",{"fg":2}],["                                                                                                        ",{}]],"41":[["    parses a more complex program",{"fg":2}],["                                                                                                  ",{}]],"42":[["    raises an exception on syntax error",{"fg":2}],["                                                                                            ",{}]],"43":[["                                                                                                                                   ",{}]],"44":[["Y2R                                                                                                                                ",{}]],"45":[["  .compile                                                                                                                         ",{}]],"46":[["    values                                                                                                                         ",{}]],"47":[["      voids                                                                                                                        ",{}]],"48":[["        translates YCP `nil`s as Ruby `nil`s",{"fg":2}],["                                                                                       ",{}]],"49":[["      booleans                                                                                                                     ",{}]],"50":[["        translates YCP booleans as Ruby booleans",{"fg":2}],["                                                                                   ",{}]],"51":[["      integers                                                                                                                     ",{}]],"52":[["        translates YCP integers as `Fixnum`s",{"fg":2}],["                                                                                       ",{}]]}}],[0.000128,{"lines":{"0":[["    returns correct AST node when the types are different and there is no shortcut",{"fg":2}],["                                                 ",{}]],"1":[["    returns correct AST node when the types are different and there is shortcut",{"fg":2}],["                                                    ",{}]],"2":[["    returns correct AST node when the types are different, their constness differ and there is shortcut",{"fg":2}],["                            ",{}]],"3":[["    returns correct AST node when when both the types and their constness are different",{"fg":2}],["                                            ",{}]],"4":[["    returns correct AST node when child is an indexed access and there is shortcut",{"fg":2}],["                                                 ",{}]],"5":[["    returns correct AST node when child is an indexed access and there is no shortcut",{"fg":2}],["                                              ",{}]],"6":[["                                                                                                                                   ",{}]],"7":[["Y2R::AST::YCP::YEReference                                                                                                         ",{}]],"8":[["  #compile                                                                                                                         ",{}]],"9":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"10":[["  #compile_as_setter                                                                                                               ",{}]],"11":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"12":[["  #compile_as_getter                                                                                                               ",{}]],"13":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"14":[["                                                                                                                                   ",{}]],"15":[["Y2R::AST::YCP::YEReturn                                                                                                            ",{}]],"16":[["  #compile                                                                                                                         ",{}]],"17":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"18":[["  #compile_as_block                                                                                                                ",{}]],"19":[["    returns correct AST node without arguments",{"fg":2}],["                                                                                     ",{}]],"20":[["    returns correct AST node with arguments",{"fg":2}],["                                                                                        ",{}]],"21":[["                                                                                                                                   ",{}]],"22":[["Y2R::AST::YCP::YETerm                                                                                                              ",{}]],"23":[["  #compile                                                                                                                         ",{}]],"24":[["    returns correct AST node for non-UI terms",{"fg":2}],["                                                                                      ",{}]],"25":[["    returns correct AST node for UI terms",{"fg":2}],["                                                                                          ",{}]],"26":[["    returns correct AST node for UI terms starting with lowercase",{"fg":2}],["                                                                  ",{}]],"27":[["                                                                                                                                   ",{}]],"28":[["Y2R::AST::YCP::YETriple                                                                                                            ",{}]],"29":[["  #compile                                                                                                                         ",{}]],"30":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"31":[["                                                                                                                                   ",{}]],"32":[["Y2R::AST::YCP::YEUnary                                                                                                             ",{}]],"33":[["  #compile                                                                                                                         ",{}]],"34":[["    returns correct AST node when child is not constant",{"fg":2}],["                                                                            ",{}]],"35":[["    returns correct AST node when child is constant",{"fg":2}],["                                                                                ",{}]],"36":[["                                                                                                                                   ",{}]],"37":[["Y2R::Parser                                                                                                                        ",{}]],"38":[["  #parse                                                                                                                           ",{}]],"39":[["    parses a simple program",{"fg":2}],["                                                                                                        ",{}]],"40":[["    parses a more complex program",{"fg":2}],["                                                                                                  ",{}]],"41":[["    raises an exception on syntax error",{"fg":2}],["                                                                                            ",{}]],"42":[["                                                                                                                                   ",{}]],"43":[["Y2R                                                                                                                                ",{}]],"44":[["  .compile                                                                                                                         ",{}]],"45":[["    values                                                                                                                         ",{}]],"46":[["      voids                                                                                                                        ",{}]],"47":[["        translates YCP `nil`s as Ruby `nil`s",{"fg":2}],["                                                                                       ",{}]],"48":[["      booleans                                                                                                                     ",{}]],"49":[["        translates YCP booleans as Ruby booleans",{"fg":2}],["                                                                                   ",{}]],"50":[["      integers                                                                                                                     ",{}]],"51":[["        translates YCP integers as `Fixnum`s",{"fg":2}],["                                                                                       ",{}]],"52":[["      floats                                                                                                                       ",{}]]}}],[0.04773,{"lines":{"0":[["    returns correct AST node when the types are different and there is shortcut",{"fg":2}],["                                                    ",{}]],"1":[["    returns correct AST node when the types are different, their constness differ and there is shortcut",{"fg":2}],["                            ",{}]],"2":[["    returns correct AST node when when both the types and their constness are different",{"fg":2}],["                                            ",{}]],"3":[["    returns correct AST node when child is an indexed access and there is shortcut",{"fg":2}],["                                                 ",{}]],"4":[["    returns correct AST node when child is an indexed access and there is no shortcut",{"fg":2}],["                                              ",{}]],"5":[["                                                                                                                                   ",{}]],"6":[["Y2R::AST::YCP::YEReference                                                                                                         ",{}]],"7":[["  #compile                                                                                                                         ",{}]],"8":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"9":[["  #compile_as_setter                                                                                                               ",{}]],"10":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"11":[["  #compile_as_getter                                                                                                               ",{}]],"12":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"13":[["                                                                                                                                   ",{}]],"14":[["Y2R::AST::YCP::YEReturn                                                                                                            ",{}]],"15":[["  #compile                                                                                                                         ",{}]],"16":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"17":[["  #compile_as_block                                                                                                                ",{}]],"18":[["    returns correct AST node without arguments",{"fg":2}],["                                                                                     ",{}]],"19":[["    returns correct AST node with arguments",{"fg":2}],["                                                                                        ",{}]],"20":[["                                                                                                                                   ",{}]],"21":[["Y2R::AST::YCP::YETerm                                                                                                              ",{}]],"22":[["  #compile                                                                                                                         ",{}]],"23":[["    returns correct AST node for non-UI terms",{"fg":2}],["                                                                                      ",{}]],"24":[["    returns correct AST node for UI terms",{"fg":2}],["                                                                                          ",{}]],"25":[["    returns correct AST node for UI terms starting with lowercase",{"fg":2}],["                                                                  ",{}]],"26":[["                                                                                                                                   ",{}]],"27":[["Y2R::AST::YCP::YETriple                                                                                                            ",{}]],"28":[["  #compile                                                                                                                         ",{}]],"29":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"30":[["                                                                                                                                   ",{}]],"31":[["Y2R::AST::YCP::YEUnary                                                                                                             ",{}]],"32":[["  #compile                                                                                                                         ",{}]],"33":[["    returns correct AST node when child is not constant",{"fg":2}],["                                                                            ",{}]],"34":[["    returns correct AST node when child is constant",{"fg":2}],["                                                                                ",{}]],"35":[["                                                                                                                                   ",{}]],"36":[["Y2R::Parser                                                                                                                        ",{}]],"37":[["  #parse                                                                                                                           ",{}]],"38":[["    parses a simple program",{"fg":2}],["                                                                                                        ",{}]],"39":[["    parses a more complex program",{"fg":2}],["                                                                                                  ",{}]],"40":[["    raises an exception on syntax error",{"fg":2}],["                                                                                            ",{}]],"41":[["                                                                                                                                   ",{}]],"42":[["Y2R                                                                                                                                ",{}]],"43":[["  .compile                                                                                                                         ",{}]],"44":[["    values                                                                                                                         ",{}]],"45":[["      voids                                                                                                                        ",{}]],"46":[["        translates YCP `nil`s as Ruby `nil`s",{"fg":2}],["                                                                                       ",{}]],"47":[["      booleans                                                                                                                     ",{}]],"48":[["        translates YCP booleans as Ruby booleans",{"fg":2}],["                                                                                   ",{}]],"49":[["      integers                                                                                                                     ",{}]],"50":[["        translates YCP integers as `Fixnum`s",{"fg":2}],["                                                                                       ",{}]],"51":[["      floats                                                                                                                       ",{}]],"52":[["        translates YCP floats as Ruby floats",{"fg":2}],["                                                                                       ",{}]]}}],[0.000102,{"lines":{"0":[["    returns correct AST node when the types are different, their constness differ and there is shortcut",{"fg":2}],["                            ",{}]],"1":[["    returns correct AST node when when both the types and their constness are different",{"fg":2}],["                                            ",{}]],"2":[["    returns correct AST node when child is an indexed access and there is shortcut",{"fg":2}],["                                                 ",{}]],"3":[["    returns correct AST node when child is an indexed access and there is no shortcut",{"fg":2}],["                                              ",{}]],"4":[["                                                                                                                                   ",{}]],"5":[["Y2R::AST::YCP::YEReference                                                                                                         ",{}]],"6":[["  #compile                                                                                                                         ",{}]],"7":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"8":[["  #compile_as_setter                                                                                                               ",{}]],"9":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"10":[["  #compile_as_getter                                                                                                               ",{}]],"11":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"12":[["                                                                                                                                   ",{}]],"13":[["Y2R::AST::YCP::YEReturn                                                                                                            ",{}]],"14":[["  #compile                                                                                                                         ",{}]],"15":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"16":[["  #compile_as_block                                                                                                                ",{}]],"17":[["    returns correct AST node without arguments",{"fg":2}],["                                                                                     ",{}]],"18":[["    returns correct AST node with arguments",{"fg":2}],["                                                                                        ",{}]],"19":[["                                                                                                                                   ",{}]],"20":[["Y2R::AST::YCP::YETerm                                                                                                              ",{}]],"21":[["  #compile                                                                                                                         ",{}]],"22":[["    returns correct AST node for non-UI terms",{"fg":2}],["                                                                                      ",{}]],"23":[["    returns correct AST node for UI terms",{"fg":2}],["                                                                                          ",{}]],"24":[["    returns correct AST node for UI terms starting with lowercase",{"fg":2}],["                                                                  ",{}]],"25":[["                                                                                                                                   ",{}]],"26":[["Y2R::AST::YCP::YETriple                                                                                                            ",{}]],"27":[["  #compile                                                                                                                         ",{}]],"28":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"29":[["                                                                                                                                   ",{}]],"30":[["Y2R::AST::YCP::YEUnary                                                                                                             ",{}]],"31":[["  #compile                                                                                                                         ",{}]],"32":[["    returns correct AST node when child is not constant",{"fg":2}],["                                                                            ",{}]],"33":[["    returns correct AST node when child is constant",{"fg":2}],["                                                                                ",{}]],"34":[["                                                                                                                                   ",{}]],"35":[["Y2R::Parser                                                                                                                        ",{}]],"36":[["  #parse                                                                                                                           ",{}]],"37":[["    parses a simple program",{"fg":2}],["                                                                                                        ",{}]],"38":[["    parses a more complex program",{"fg":2}],["                                                                                                  ",{}]],"39":[["    raises an exception on syntax error",{"fg":2}],["                                                                                            ",{}]],"40":[["                                                                                                                                   ",{}]],"41":[["Y2R                                                                                                                                ",{}]],"42":[["  .compile                                                                                                                         ",{}]],"43":[["    values                                                                                                                         ",{}]],"44":[["      voids                                                                                                                        ",{}]],"45":[["        translates YCP `nil`s as Ruby `nil`s",{"fg":2}],["                                                                                       ",{}]],"46":[["      booleans                                                                                                                     ",{}]],"47":[["        translates YCP booleans as Ruby booleans",{"fg":2}],["                                                                                   ",{}]],"48":[["      integers                                                                                                                     ",{}]],"49":[["        translates YCP integers as `Fixnum`s",{"fg":2}],["                                                                                       ",{}]],"50":[["      floats                                                                                                                       ",{}]],"51":[["        translates YCP floats as Ruby floats",{"fg":2}],["                                                                                       ",{}]],"52":[["      symbols                                                                                                                      ",{}]]}}],[0.085384,{"lines":{"0":[["    returns correct AST node when when both the types and their constness are different",{"fg":2}],["                                            ",{}]],"1":[["    returns correct AST node when child is an indexed access and there is shortcut",{"fg":2}],["                                                 ",{}]],"2":[["    returns correct AST node when child is an indexed access and there is no shortcut",{"fg":2}],["                                              ",{}]],"3":[["                                                                                                                                   ",{}]],"4":[["Y2R::AST::YCP::YEReference                                                                                                         ",{}]],"5":[["  #compile                                                                                                                         ",{}]],"6":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"7":[["  #compile_as_setter                                                                                                               ",{}]],"8":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"9":[["  #compile_as_getter                                                                                                               ",{}]],"10":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"11":[["                                                                                                                                   ",{}]],"12":[["Y2R::AST::YCP::YEReturn                                                                                                            ",{}]],"13":[["  #compile                                                                                                                         ",{}]],"14":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"15":[["  #compile_as_block                                                                                                                ",{}]],"16":[["    returns correct AST node without arguments",{"fg":2}],["                                                                                     ",{}]],"17":[["    returns correct AST node with arguments",{"fg":2}],["                                                                                        ",{}]],"18":[["                                                                                                                                   ",{}]],"19":[["Y2R::AST::YCP::YETerm                                                                                                              ",{}]],"20":[["  #compile                                                                                                                         ",{}]],"21":[["    returns correct AST node for non-UI terms",{"fg":2}],["                                                                                      ",{}]],"22":[["    returns correct AST node for UI terms",{"fg":2}],["                                                                                          ",{}]],"23":[["    returns correct AST node for UI terms starting with lowercase",{"fg":2}],["                                                                  ",{}]],"24":[["                                                                                                                                   ",{}]],"25":[["Y2R::AST::YCP::YETriple                                                                                                            ",{}]],"26":[["  #compile                                                                                                                         ",{}]],"27":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"28":[["                                                                                                                                   ",{}]],"29":[["Y2R::AST::YCP::YEUnary                                                                                                             ",{}]],"30":[["  #compile                                                                                                                         ",{}]],"31":[["    returns correct AST node when child is not constant",{"fg":2}],["                                                                            ",{}]],"32":[["    returns correct AST node when child is constant",{"fg":2}],["                                                                                ",{}]],"33":[["                                                                                                                                   ",{}]],"34":[["Y2R::Parser                                                                                                                        ",{}]],"35":[["  #parse                                                                                                                           ",{}]],"36":[["    parses a simple program",{"fg":2}],["                                                                                                        ",{}]],"37":[["    parses a more complex program",{"fg":2}],["                                                                                                  ",{}]],"38":[["    raises an exception on syntax error",{"fg":2}],["                                                                                            ",{}]],"39":[["                                                                                                                                   ",{}]],"40":[["Y2R                                                                                                                                ",{}]],"41":[["  .compile                                                                                                                         ",{}]],"42":[["    values                                                                                                                         ",{}]],"43":[["      voids                                                                                                                        ",{}]],"44":[["        translates YCP `nil`s as Ruby `nil`s",{"fg":2}],["                                                                                       ",{}]],"45":[["      booleans                                                                                                                     ",{}]],"46":[["        translates YCP booleans as Ruby booleans",{"fg":2}],["                                                                                   ",{}]],"47":[["      integers                                                                                                                     ",{}]],"48":[["        translates YCP integers as `Fixnum`s",{"fg":2}],["                                                                                       ",{}]],"49":[["      floats                                                                                                                       ",{}]],"50":[["        translates YCP floats as Ruby floats",{"fg":2}],["                                                                                       ",{}]],"51":[["      symbols                                                                                                                      ",{}]],"52":[["        translates YCP symbols as Ruby symbols",{"fg":2}],["                                                                                     ",{}]]}}],[0.000134,{"lines":{"0":[["    returns correct AST node when child is an indexed access and there is shortcut",{"fg":2}],["                                                 ",{}]],"1":[["    returns correct AST node when child is an indexed access and there is no shortcut",{"fg":2}],["                                              ",{}]],"2":[["                                                                                                                                   ",{}]],"3":[["Y2R::AST::YCP::YEReference                                                                                                         ",{}]],"4":[["  #compile                                                                                                                         ",{}]],"5":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"6":[["  #compile_as_setter                                                                                                               ",{}]],"7":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"8":[["  #compile_as_getter                                                                                                               ",{}]],"9":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"10":[["                                                                                                                                   ",{}]],"11":[["Y2R::AST::YCP::YEReturn                                                                                                            ",{}]],"12":[["  #compile                                                                                                                         ",{}]],"13":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"14":[["  #compile_as_block                                                                                                                ",{}]],"15":[["    returns correct AST node without arguments",{"fg":2}],["                                                                                     ",{}]],"16":[["    returns correct AST node with arguments",{"fg":2}],["                                                                                        ",{}]],"17":[["                                                                                                                                   ",{}]],"18":[["Y2R::AST::YCP::YETerm                                                                                                              ",{}]],"19":[["  #compile                                                                                                                         ",{}]],"20":[["    returns correct AST node for non-UI terms",{"fg":2}],["                                                                                      ",{}]],"21":[["    returns correct AST node for UI terms",{"fg":2}],["                                                                                          ",{}]],"22":[["    returns correct AST node for UI terms starting with lowercase",{"fg":2}],["                                                                  ",{}]],"23":[["                                                                                                                                   ",{}]],"24":[["Y2R::AST::YCP::YETriple                                                                                                            ",{}]],"25":[["  #compile                                                                                                                         ",{}]],"26":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"27":[["                                                                                                                                   ",{}]],"28":[["Y2R::AST::YCP::YEUnary                                                                                                             ",{}]],"29":[["  #compile                                                                                                                         ",{}]],"30":[["    returns correct AST node when child is not constant",{"fg":2}],["                                                                            ",{}]],"31":[["    returns correct AST node when child is constant",{"fg":2}],["                                                                                ",{}]],"32":[["                                                                                                                                   ",{}]],"33":[["Y2R::Parser                                                                                                                        ",{}]],"34":[["  #parse                                                                                                                           ",{}]],"35":[["    parses a simple program",{"fg":2}],["                                                                                                        ",{}]],"36":[["    parses a more complex program",{"fg":2}],["                                                                                                  ",{}]],"37":[["    raises an exception on syntax error",{"fg":2}],["                                                                                            ",{}]],"38":[["                                                                                                                                   ",{}]],"39":[["Y2R                                                                                                                                ",{}]],"40":[["  .compile                                                                                                                         ",{}]],"41":[["    values                                                                                                                         ",{}]],"42":[["      voids                                                                                                                        ",{}]],"43":[["        translates YCP `nil`s as Ruby `nil`s",{"fg":2}],["                                                                                       ",{}]],"44":[["      booleans                                                                                                                     ",{}]],"45":[["        translates YCP booleans as Ruby booleans",{"fg":2}],["                                                                                   ",{}]],"46":[["      integers                                                                                                                     ",{}]],"47":[["        translates YCP integers as `Fixnum`s",{"fg":2}],["                                                                                       ",{}]],"48":[["      floats                                                                                                                       ",{}]],"49":[["        translates YCP floats as Ruby floats",{"fg":2}],["                                                                                       ",{}]],"50":[["      symbols                                                                                                                      ",{}]],"51":[["        translates YCP symbols as Ruby symbols",{"fg":2}],["                                                                                     ",{}]],"52":[["      strings                                                                                                                      ",{}]]}}],[0.047282,{"lines":{"0":[["    returns correct AST node when child is an indexed access and there is no shortcut",{"fg":2}],["                                              ",{}]],"1":[["                                                                                                                                   ",{}]],"2":[["Y2R::AST::YCP::YEReference                                                                                                         ",{}]],"3":[["  #compile                                                                                                                         ",{}]],"4":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"5":[["  #compile_as_setter                                                                                                               ",{}]],"6":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"7":[["  #compile_as_getter                                                                                                               ",{}]],"8":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"9":[["                                                                                                                                   ",{}]],"10":[["Y2R::AST::YCP::YEReturn                                                                                                            ",{}]],"11":[["  #compile                                                                                                                         ",{}]],"12":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"13":[["  #compile_as_block                                                                                                                ",{}]],"14":[["    returns correct AST node without arguments",{"fg":2}],["                                                                                     ",{}]],"15":[["    returns correct AST node with arguments",{"fg":2}],["                                                                                        ",{}]],"16":[["                                                                                                                                   ",{}]],"17":[["Y2R::AST::YCP::YETerm                                                                                                              ",{}]],"18":[["  #compile                                                                                                                         ",{}]],"19":[["    returns correct AST node for non-UI terms",{"fg":2}],["                                                                                      ",{}]],"20":[["    returns correct AST node for UI terms",{"fg":2}],["                                                                                          ",{}]],"21":[["    returns correct AST node for UI terms starting with lowercase",{"fg":2}],["                                                                  ",{}]],"22":[["                                                                                                                                   ",{}]],"23":[["Y2R::AST::YCP::YETriple                                                                                                            ",{}]],"24":[["  #compile                                                                                                                         ",{}]],"25":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"26":[["                                                                                                                                   ",{}]],"27":[["Y2R::AST::YCP::YEUnary                                                                                                             ",{}]],"28":[["  #compile                                                                                                                         ",{}]],"29":[["    returns correct AST node when child is not constant",{"fg":2}],["                                                                            ",{}]],"30":[["    returns correct AST node when child is constant",{"fg":2}],["                                                                                ",{}]],"31":[["                                                                                                                                   ",{}]],"32":[["Y2R::Parser                                                                                                                        ",{}]],"33":[["  #parse                                                                                                                           ",{}]],"34":[["    parses a simple program",{"fg":2}],["                                                                                                        ",{}]],"35":[["    parses a more complex program",{"fg":2}],["                                                                                                  ",{}]],"36":[["    raises an exception on syntax error",{"fg":2}],["                                                                                            ",{}]],"37":[["                                                                                                                                   ",{}]],"38":[["Y2R                                                                                                                                ",{}]],"39":[["  .compile                                                                                                                         ",{}]],"40":[["    values                                                                                                                         ",{}]],"41":[["      voids                                                                                                                        ",{}]],"42":[["        translates YCP `nil`s as Ruby `nil`s",{"fg":2}],["                                                                                       ",{}]],"43":[["      booleans                                                                                                                     ",{}]],"44":[["        translates YCP booleans as Ruby booleans",{"fg":2}],["                                                                                   ",{}]],"45":[["      integers                                                                                                                     ",{}]],"46":[["        translates YCP integers as `Fixnum`s",{"fg":2}],["                                                                                       ",{}]],"47":[["      floats                                                                                                                       ",{}]],"48":[["        translates YCP floats as Ruby floats",{"fg":2}],["                                                                                       ",{}]],"49":[["      symbols                                                                                                                      ",{}]],"50":[["        translates YCP symbols as Ruby symbols",{"fg":2}],["                                                                                     ",{}]],"51":[["      strings                                                                                                                      ",{}]],"52":[["        translates YCP strings as Ruby strings",{"fg":2}],["                                                                                     ",{}]]}}],[0.00013,{"lines":{"0":[["                                                                                                                                   ",{}]],"1":[["Y2R::AST::YCP::YEReference                                                                                                         ",{}]],"2":[["  #compile                                                                                                                         ",{}]],"3":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"4":[["  #compile_as_setter                                                                                                               ",{}]],"5":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"6":[["  #compile_as_getter                                                                                                               ",{}]],"7":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"8":[["                                                                                                                                   ",{}]],"9":[["Y2R::AST::YCP::YEReturn                                                                                                            ",{}]],"10":[["  #compile                                                                                                                         ",{}]],"11":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"12":[["  #compile_as_block                                                                                                                ",{}]],"13":[["    returns correct AST node without arguments",{"fg":2}],["                                                                                     ",{}]],"14":[["    returns correct AST node with arguments",{"fg":2}],["                                                                                        ",{}]],"15":[["                                                                                                                                   ",{}]],"16":[["Y2R::AST::YCP::YETerm                                                                                                              ",{}]],"17":[["  #compile                                                                                                                         ",{}]],"18":[["    returns correct AST node for non-UI terms",{"fg":2}],["                                                                                      ",{}]],"19":[["    returns correct AST node for UI terms",{"fg":2}],["                                                                                          ",{}]],"20":[["    returns correct AST node for UI terms starting with lowercase",{"fg":2}],["                                                                  ",{}]],"21":[["                                                                                                                                   ",{}]],"22":[["Y2R::AST::YCP::YETriple                                                                                                            ",{}]],"23":[["  #compile                                                                                                                         ",{}]],"24":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"25":[["                                                                                                                                   ",{}]],"26":[["Y2R::AST::YCP::YEUnary                                                                                                             ",{}]],"27":[["  #compile                                                                                                                         ",{}]],"28":[["    returns correct AST node when child is not constant",{"fg":2}],["                                                                            ",{}]],"29":[["    returns correct AST node when child is constant",{"fg":2}],["                                                                                ",{}]],"30":[["                                                                                                                                   ",{}]],"31":[["Y2R::Parser                                                                                                                        ",{}]],"32":[["  #parse                                                                                                                           ",{}]],"33":[["    parses a simple program",{"fg":2}],["                                                                                                        ",{}]],"34":[["    parses a more complex program",{"fg":2}],["                                                                                                  ",{}]],"35":[["    raises an exception on syntax error",{"fg":2}],["                                                                                            ",{}]],"36":[["                                                                                                                                   ",{}]],"37":[["Y2R                                                                                                                                ",{}]],"38":[["  .compile                                                                                                                         ",{}]],"39":[["    values                                                                                                                         ",{}]],"40":[["      voids                                                                                                                        ",{}]],"41":[["        translates YCP `nil`s as Ruby `nil`s",{"fg":2}],["                                                                                       ",{}]],"42":[["      booleans                                                                                                                     ",{}]],"43":[["        translates YCP booleans as Ruby booleans",{"fg":2}],["                                                                                   ",{}]],"44":[["      integers                                                                                                                     ",{}]],"45":[["        translates YCP integers as `Fixnum`s",{"fg":2}],["                                                                                       ",{}]],"46":[["      floats                                                                                                                       ",{}]],"47":[["        translates YCP floats as Ruby floats",{"fg":2}],["                                                                                       ",{}]],"48":[["      symbols                                                                                                                      ",{}]],"49":[["        translates YCP symbols as Ruby symbols",{"fg":2}],["                                                                                     ",{}]],"50":[["      strings                                                                                                                      ",{}]],"51":[["        translates YCP strings as Ruby strings",{"fg":2}],["                                                                                     ",{}]],"52":[["      paths                                                                                                                        ",{}]]}}],[0.046852,{"lines":{"0":[["Y2R::AST::YCP::YEReference                                                                                                         ",{}]],"1":[["  #compile                                                                                                                         ",{}]],"2":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"3":[["  #compile_as_setter                                                                                                               ",{}]],"4":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"5":[["  #compile_as_getter                                                                                                               ",{}]],"6":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"7":[["                                                                                                                                   ",{}]],"8":[["Y2R::AST::YCP::YEReturn                                                                                                            ",{}]],"9":[["  #compile                                                                                                                         ",{}]],"10":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"11":[["  #compile_as_block                                                                                                                ",{}]],"12":[["    returns correct AST node without arguments",{"fg":2}],["                                                                                     ",{}]],"13":[["    returns correct AST node with arguments",{"fg":2}],["                                                                                        ",{}]],"14":[["                                                                                                                                   ",{}]],"15":[["Y2R::AST::YCP::YETerm                                                                                                              ",{}]],"16":[["  #compile                                                                                                                         ",{}]],"17":[["    returns correct AST node for non-UI terms",{"fg":2}],["                                                                                      ",{}]],"18":[["    returns correct AST node for UI terms",{"fg":2}],["                                                                                          ",{}]],"19":[["    returns correct AST node for UI terms starting with lowercase",{"fg":2}],["                                                                  ",{}]],"20":[["                                                                                                                                   ",{}]],"21":[["Y2R::AST::YCP::YETriple                                                                                                            ",{}]],"22":[["  #compile                                                                                                                         ",{}]],"23":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"24":[["                                                                                                                                   ",{}]],"25":[["Y2R::AST::YCP::YEUnary                                                                                                             ",{}]],"26":[["  #compile                                                                                                                         ",{}]],"27":[["    returns correct AST node when child is not constant",{"fg":2}],["                                                                            ",{}]],"28":[["    returns correct AST node when child is constant",{"fg":2}],["                                                                                ",{}]],"29":[["                                                                                                                                   ",{}]],"30":[["Y2R::Parser                                                                                                                        ",{}]],"31":[["  #parse                                                                                                                           ",{}]],"32":[["    parses a simple program",{"fg":2}],["                                                                                                        ",{}]],"33":[["    parses a more complex program",{"fg":2}],["                                                                                                  ",{}]],"34":[["    raises an exception on syntax error",{"fg":2}],["                                                                                            ",{}]],"35":[["                                                                                                                                   ",{}]],"36":[["Y2R                                                                                                                                ",{}]],"37":[["  .compile                                                                                                                         ",{}]],"38":[["    values                                                                                                                         ",{}]],"39":[["      voids                                                                                                                        ",{}]],"40":[["        translates YCP `nil`s as Ruby `nil`s",{"fg":2}],["                                                                                       ",{}]],"41":[["      booleans                                                                                                                     ",{}]],"42":[["        translates YCP booleans as Ruby booleans",{"fg":2}],["                                                                                   ",{}]],"43":[["      integers                                                                                                                     ",{}]],"44":[["        translates YCP integers as `Fixnum`s",{"fg":2}],["                                                                                       ",{}]],"45":[["      floats                                                                                                                       ",{}]],"46":[["        translates YCP floats as Ruby floats",{"fg":2}],["                                                                                       ",{}]],"47":[["      symbols                                                                                                                      ",{}]],"48":[["        translates YCP symbols as Ruby symbols",{"fg":2}],["                                                                                     ",{}]],"49":[["      strings                                                                                                                      ",{}]],"50":[["        translates YCP strings as Ruby strings",{"fg":2}],["                                                                                     ",{}]],"51":[["      paths                                                                                                                        ",{}]],"52":[["        translates YCP paths as `path` calls",{"fg":2}],["                                                                                       ",{}]]}}],[0.0001,{"lines":{"0":[["  #compile                                                                                                                         ",{}]],"1":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"2":[["  #compile_as_setter                                                                                                               ",{}]],"3":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"4":[["  #compile_as_getter                                                                                                               ",{}]],"5":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"6":[["                                                                                                                                   ",{}]],"7":[["Y2R::AST::YCP::YEReturn                                                                                                            ",{}]],"8":[["  #compile                                                                                                                         ",{}]],"9":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"10":[["  #compile_as_block                                                                                                                ",{}]],"11":[["    returns correct AST node without arguments",{"fg":2}],["                                                                                     ",{}]],"12":[["    returns correct AST node with arguments",{"fg":2}],["                                                                                        ",{}]],"13":[["                                                                                                                                   ",{}]],"14":[["Y2R::AST::YCP::YETerm                                                                                                              ",{}]],"15":[["  #compile                                                                                                                         ",{}]],"16":[["    returns correct AST node for non-UI terms",{"fg":2}],["                                                                                      ",{}]],"17":[["    returns correct AST node for UI terms",{"fg":2}],["                                                                                          ",{}]],"18":[["    returns correct AST node for UI terms starting with lowercase",{"fg":2}],["                                                                  ",{}]],"19":[["                                                                                                                                   ",{}]],"20":[["Y2R::AST::YCP::YETriple                                                                                                            ",{}]],"21":[["  #compile                                                                                                                         ",{}]],"22":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"23":[["                                                                                                                                   ",{}]],"24":[["Y2R::AST::YCP::YEUnary                                                                                                             ",{}]],"25":[["  #compile                                                                                                                         ",{}]],"26":[["    returns correct AST node when child is not constant",{"fg":2}],["                                                                            ",{}]],"27":[["    returns correct AST node when child is constant",{"fg":2}],["                                                                                ",{}]],"28":[["                                                                                                                                   ",{}]],"29":[["Y2R::Parser                                                                                                                        ",{}]],"30":[["  #parse                                                                                                                           ",{}]],"31":[["    parses a simple program",{"fg":2}],["                                                                                                        ",{}]],"32":[["    parses a more complex program",{"fg":2}],["                                                                                                  ",{}]],"33":[["    raises an exception on syntax error",{"fg":2}],["                                                                                            ",{}]],"34":[["                                                                                                                                   ",{}]],"35":[["Y2R                                                                                                                                ",{}]],"36":[["  .compile                                                                                                                         ",{}]],"37":[["    values                                                                                                                         ",{}]],"38":[["      voids                                                                                                                        ",{}]],"39":[["        translates YCP `nil`s as Ruby `nil`s",{"fg":2}],["                                                                                       ",{}]],"40":[["      booleans                                                                                                                     ",{}]],"41":[["        translates YCP booleans as Ruby booleans",{"fg":2}],["                                                                                   ",{}]],"42":[["      integers                                                                                                                     ",{}]],"43":[["        translates YCP integers as `Fixnum`s",{"fg":2}],["                                                                                       ",{}]],"44":[["      floats                                                                                                                       ",{}]],"45":[["        translates YCP floats as Ruby floats",{"fg":2}],["                                                                                       ",{}]],"46":[["      symbols                                                                                                                      ",{}]],"47":[["        translates YCP symbols as Ruby symbols",{"fg":2}],["                                                                                     ",{}]],"48":[["      strings                                                                                                                      ",{}]],"49":[["        translates YCP strings as Ruby strings",{"fg":2}],["                                                                                     ",{}]],"50":[["      paths                                                                                                                        ",{}]],"51":[["        translates YCP paths as `path` calls",{"fg":2}],["                                                                                       ",{}]],"52":[["      lists                                                                                                                        ",{}]]}}],[0.048538,{"lines":{"0":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"1":[["  #compile_as_setter                                                                                                               ",{}]],"2":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"3":[["  #compile_as_getter                                                                                                               ",{}]],"4":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"5":[["                                                                                                                                   ",{}]],"6":[["Y2R::AST::YCP::YEReturn                                                                                                            ",{}]],"7":[["  #compile                                                                                                                         ",{}]],"8":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"9":[["  #compile_as_block                                                                                                                ",{}]],"10":[["    returns correct AST node without arguments",{"fg":2}],["                                                                                     ",{}]],"11":[["    returns correct AST node with arguments",{"fg":2}],["                                                                                        ",{}]],"12":[["                                                                                                                                   ",{}]],"13":[["Y2R::AST::YCP::YETerm                                                                                                              ",{}]],"14":[["  #compile                                                                                                                         ",{}]],"15":[["    returns correct AST node for non-UI terms",{"fg":2}],["                                                                                      ",{}]],"16":[["    returns correct AST node for UI terms",{"fg":2}],["                                                                                          ",{}]],"17":[["    returns correct AST node for UI terms starting with lowercase",{"fg":2}],["                                                                  ",{}]],"18":[["                                                                                                                                   ",{}]],"19":[["Y2R::AST::YCP::YETriple                                                                                                            ",{}]],"20":[["  #compile                                                                                                                         ",{}]],"21":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"22":[["                                                                                                                                   ",{}]],"23":[["Y2R::AST::YCP::YEUnary                                                                                                             ",{}]],"24":[["  #compile                                                                                                                         ",{}]],"25":[["    returns correct AST node when child is not constant",{"fg":2}],["                                                                            ",{}]],"26":[["    returns correct AST node when child is constant",{"fg":2}],["                                                                                ",{}]],"27":[["                                                                                                                                   ",{}]],"28":[["Y2R::Parser                                                                                                                        ",{}]],"29":[["  #parse                                                                                                                           ",{}]],"30":[["    parses a simple program",{"fg":2}],["                                                                                                        ",{}]],"31":[["    parses a more complex program",{"fg":2}],["                                                                                                  ",{}]],"32":[["    raises an exception on syntax error",{"fg":2}],["                                                                                            ",{}]],"33":[["                                                                                                                                   ",{}]],"34":[["Y2R                                                                                                                                ",{}]],"35":[["  .compile                                                                                                                         ",{}]],"36":[["    values                                                                                                                         ",{}]],"37":[["      voids                                                                                                                        ",{}]],"38":[["        translates YCP `nil`s as Ruby `nil`s",{"fg":2}],["                                                                                       ",{}]],"39":[["      booleans                                                                                                                     ",{}]],"40":[["        translates YCP booleans as Ruby booleans",{"fg":2}],["                                                                                   ",{}]],"41":[["      integers                                                                                                                     ",{}]],"42":[["        translates YCP integers as `Fixnum`s",{"fg":2}],["                                                                                       ",{}]],"43":[["      floats                                                                                                                       ",{}]],"44":[["        translates YCP floats as Ruby floats",{"fg":2}],["                                                                                       ",{}]],"45":[["      symbols                                                                                                                      ",{}]],"46":[["        translates YCP symbols as Ruby symbols",{"fg":2}],["                                                                                     ",{}]],"47":[["      strings                                                                                                                      ",{}]],"48":[["        translates YCP strings as Ruby strings",{"fg":2}],["                                                                                     ",{}]],"49":[["      paths                                                                                                                        ",{}]],"50":[["        translates YCP paths as `path` calls",{"fg":2}],["                                                                                       ",{}]],"51":[["      lists                                                                                                                        ",{}]],"52":[["        translates YCP lists as Ruby arrays",{"fg":2}],["                                                                                        ",{}]]}}],[0.000123,{"lines":{"0":[["  #compile_as_setter                                                                                                               ",{}]],"1":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"2":[["  #compile_as_getter                                                                                                               ",{}]],"3":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"4":[["                                                                                                                                   ",{}]],"5":[["Y2R::AST::YCP::YEReturn                                                                                                            ",{}]],"6":[["  #compile                                                                                                                         ",{}]],"7":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"8":[["  #compile_as_block                                                                                                                ",{}]],"9":[["    returns correct AST node without arguments",{"fg":2}],["                                                                                     ",{}]],"10":[["    returns correct AST node with arguments",{"fg":2}],["                                                                                        ",{}]],"11":[["                                                                                                                                   ",{}]],"12":[["Y2R::AST::YCP::YETerm                                                                                                              ",{}]],"13":[["  #compile                                                                                                                         ",{}]],"14":[["    returns correct AST node for non-UI terms",{"fg":2}],["                                                                                      ",{}]],"15":[["    returns correct AST node for UI terms",{"fg":2}],["                                                                                          ",{}]],"16":[["    returns correct AST node for UI terms starting with lowercase",{"fg":2}],["                                                                  ",{}]],"17":[["                                                                                                                                   ",{}]],"18":[["Y2R::AST::YCP::YETriple                                                                                                            ",{}]],"19":[["  #compile                                                                                                                         ",{}]],"20":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"21":[["                                                                                                                                   ",{}]],"22":[["Y2R::AST::YCP::YEUnary                                                                                                             ",{}]],"23":[["  #compile                                                                                                                         ",{}]],"24":[["    returns correct AST node when child is not constant",{"fg":2}],["                                                                            ",{}]],"25":[["    returns correct AST node when child is constant",{"fg":2}],["                                                                                ",{}]],"26":[["                                                                                                                                   ",{}]],"27":[["Y2R::Parser                                                                                                                        ",{}]],"28":[["  #parse                                                                                                                           ",{}]],"29":[["    parses a simple program",{"fg":2}],["                                                                                                        ",{}]],"30":[["    parses a more complex program",{"fg":2}],["                                                                                                  ",{}]],"31":[["    raises an exception on syntax error",{"fg":2}],["                                                                                            ",{}]],"32":[["                                                                                                                                   ",{}]],"33":[["Y2R                                                                                                                                ",{}]],"34":[["  .compile                                                                                                                         ",{}]],"35":[["    values                                                                                                                         ",{}]],"36":[["      voids                                                                                                                        ",{}]],"37":[["        translates YCP `nil`s as Ruby `nil`s",{"fg":2}],["                                                                                       ",{}]],"38":[["      booleans                                                                                                                     ",{}]],"39":[["        translates YCP booleans as Ruby booleans",{"fg":2}],["                                                                                   ",{}]],"40":[["      integers                                                                                                                     ",{}]],"41":[["        translates YCP integers as `Fixnum`s",{"fg":2}],["                                                                                       ",{}]],"42":[["      floats                                                                                                                       ",{}]],"43":[["        translates YCP floats as Ruby floats",{"fg":2}],["                                                                                       ",{}]],"44":[["      symbols                                                                                                                      ",{}]],"45":[["        translates YCP symbols as Ruby symbols",{"fg":2}],["                                                                                     ",{}]],"46":[["      strings                                                                                                                      ",{}]],"47":[["        translates YCP strings as Ruby strings",{"fg":2}],["                                                                                     ",{}]],"48":[["      paths                                                                                                                        ",{}]],"49":[["        translates YCP paths as `path` calls",{"fg":2}],["                                                                                       ",{}]],"50":[["      lists                                                                                                                        ",{}]],"51":[["        translates YCP lists as Ruby arrays",{"fg":2}],["                                                                                        ",{}]],"52":[["      maps                                                                                                                         ",{}]]}}],[0.050956,{"lines":{"0":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"1":[["  #compile_as_getter                                                                                                               ",{}]],"2":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"3":[["                                                                                                                                   ",{}]],"4":[["Y2R::AST::YCP::YEReturn                                                                                                            ",{}]],"5":[["  #compile                                                                                                                         ",{}]],"6":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"7":[["  #compile_as_block                                                                                                                ",{}]],"8":[["    returns correct AST node without arguments",{"fg":2}],["                                                                                     ",{}]],"9":[["    returns correct AST node with arguments",{"fg":2}],["                                                                                        ",{}]],"10":[["                                                                                                                                   ",{}]],"11":[["Y2R::AST::YCP::YETerm                                                                                                              ",{}]],"12":[["  #compile                                                                                                                         ",{}]],"13":[["    returns correct AST node for non-UI terms",{"fg":2}],["                                                                                      ",{}]],"14":[["    returns correct AST node for UI terms",{"fg":2}],["                                                                                          ",{}]],"15":[["    returns correct AST node for UI terms starting with lowercase",{"fg":2}],["                                                                  ",{}]],"16":[["                                                                                                                                   ",{}]],"17":[["Y2R::AST::YCP::YETriple                                                                                                            ",{}]],"18":[["  #compile                                                                                                                         ",{}]],"19":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"20":[["                                                                                                                                   ",{}]],"21":[["Y2R::AST::YCP::YEUnary                                                                                                             ",{}]],"22":[["  #compile                                                                                                                         ",{}]],"23":[["    returns correct AST node when child is not constant",{"fg":2}],["                                                                            ",{}]],"24":[["    returns correct AST node when child is constant",{"fg":2}],["                                                                                ",{}]],"25":[["                                                                                                                                   ",{}]],"26":[["Y2R::Parser                                                                                                                        ",{}]],"27":[["  #parse                                                                                                                           ",{}]],"28":[["    parses a simple program",{"fg":2}],["                                                                                                        ",{}]],"29":[["    parses a more complex program",{"fg":2}],["                                                                                                  ",{}]],"30":[["    raises an exception on syntax error",{"fg":2}],["                                                                                            ",{}]],"31":[["                                                                                                                                   ",{}]],"32":[["Y2R                                                                                                                                ",{}]],"33":[["  .compile                                                                                                                         ",{}]],"34":[["    values                                                                                                                         ",{}]],"35":[["      voids                                                                                                                        ",{}]],"36":[["        translates YCP `nil`s as Ruby `nil`s",{"fg":2}],["                                                                                       ",{}]],"37":[["      booleans                                                                                                                     ",{}]],"38":[["        translates YCP booleans as Ruby booleans",{"fg":2}],["                                                                                   ",{}]],"39":[["      integers                                                                                                                     ",{}]],"40":[["        translates YCP integers as `Fixnum`s",{"fg":2}],["                                                                                       ",{}]],"41":[["      floats                                                                                                                       ",{}]],"42":[["        translates YCP floats as Ruby floats",{"fg":2}],["                                                                                       ",{}]],"43":[["      symbols                                                                                                                      ",{}]],"44":[["        translates YCP symbols as Ruby symbols",{"fg":2}],["                                                                                     ",{}]],"45":[["      strings                                                                                                                      ",{}]],"46":[["        translates YCP strings as Ruby strings",{"fg":2}],["                                                                                     ",{}]],"47":[["      paths                                                                                                                        ",{}]],"48":[["        translates YCP paths as `path` calls",{"fg":2}],["                                                                                       ",{}]],"49":[["      lists                                                                                                                        ",{}]],"50":[["        translates YCP lists as Ruby arrays",{"fg":2}],["                                                                                        ",{}]],"51":[["      maps                                                                                                                         ",{}]],"52":[["        translates YCP maps as Ruby hashes",{"fg":2}],["                                                                                         ",{}]]}}],[0.000107,{"lines":{"0":[["  #compile_as_getter                                                                                                               ",{}]],"1":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"2":[["                                                                                                                                   ",{}]],"3":[["Y2R::AST::YCP::YEReturn                                                                                                            ",{}]],"4":[["  #compile                                                                                                                         ",{}]],"5":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"6":[["  #compile_as_block                                                                                                                ",{}]],"7":[["    returns correct AST node without arguments",{"fg":2}],["                                                                                     ",{}]],"8":[["    returns correct AST node with arguments",{"fg":2}],["                                                                                        ",{}]],"9":[["                                                                                                                                   ",{}]],"10":[["Y2R::AST::YCP::YETerm                                                                                                              ",{}]],"11":[["  #compile                                                                                                                         ",{}]],"12":[["    returns correct AST node for non-UI terms",{"fg":2}],["                                                                                      ",{}]],"13":[["    returns correct AST node for UI terms",{"fg":2}],["                                                                                          ",{}]],"14":[["    returns correct AST node for UI terms starting with lowercase",{"fg":2}],["                                                                  ",{}]],"15":[["                                                                                                                                   ",{}]],"16":[["Y2R::AST::YCP::YETriple                                                                                                            ",{}]],"17":[["  #compile                                                                                                                         ",{}]],"18":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"19":[["                                                                                                                                   ",{}]],"20":[["Y2R::AST::YCP::YEUnary                                                                                                             ",{}]],"21":[["  #compile                                                                                                                         ",{}]],"22":[["    returns correct AST node when child is not constant",{"fg":2}],["                                                                            ",{}]],"23":[["    returns correct AST node when child is constant",{"fg":2}],["                                                                                ",{}]],"24":[["                                                                                                                                   ",{}]],"25":[["Y2R::Parser                                                                                                                        ",{}]],"26":[["  #parse                                                                                                                           ",{}]],"27":[["    parses a simple program",{"fg":2}],["                                                                                                        ",{}]],"28":[["    parses a more complex program",{"fg":2}],["                                                                                                  ",{}]],"29":[["    raises an exception on syntax error",{"fg":2}],["                                                                                            ",{}]],"30":[["                                                                                                                                   ",{}]],"31":[["Y2R                                                                                                                                ",{}]],"32":[["  .compile                                                                                                                         ",{}]],"33":[["    values                                                                                                                         ",{}]],"34":[["      voids                                                                                                                        ",{}]],"35":[["        translates YCP `nil`s as Ruby `nil`s",{"fg":2}],["                                                                                       ",{}]],"36":[["      booleans                                                                                                                     ",{}]],"37":[["        translates YCP booleans as Ruby booleans",{"fg":2}],["                                                                                   ",{}]],"38":[["      integers                                                                                                                     ",{}]],"39":[["        translates YCP integers as `Fixnum`s",{"fg":2}],["                                                                                       ",{}]],"40":[["      floats                                                                                                                       ",{}]],"41":[["        translates YCP floats as Ruby floats",{"fg":2}],["                                                                                       ",{}]],"42":[["      symbols                                                                                                                      ",{}]],"43":[["        translates YCP symbols as Ruby symbols",{"fg":2}],["                                                                                     ",{}]],"44":[["      strings                                                                                                                      ",{}]],"45":[["        translates YCP strings as Ruby strings",{"fg":2}],["                                                                                     ",{}]],"46":[["      paths                                                                                                                        ",{}]],"47":[["        translates YCP paths as `path` calls",{"fg":2}],["                                                                                       ",{}]],"48":[["      lists                                                                                                                        ",{}]],"49":[["        translates YCP lists as Ruby arrays",{"fg":2}],["                                                                                        ",{}]],"50":[["      maps                                                                                                                         ",{}]],"51":[["        translates YCP maps as Ruby hashes",{"fg":2}],["                                                                                         ",{}]],"52":[["      terms                                                                                                                        ",{}]]}}],[0.049835,{"lines":{"0":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"1":[["                                                                                                                                   ",{}]],"2":[["Y2R::AST::YCP::YEReturn                                                                                                            ",{}]],"3":[["  #compile                                                                                                                         ",{}]],"4":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"5":[["  #compile_as_block                                                                                                                ",{}]],"6":[["    returns correct AST node without arguments",{"fg":2}],["                                                                                     ",{}]],"7":[["    returns correct AST node with arguments",{"fg":2}],["                                                                                        ",{}]],"8":[["                                                                                                                                   ",{}]],"9":[["Y2R::AST::YCP::YETerm                                                                                                              ",{}]],"10":[["  #compile                                                                                                                         ",{}]],"11":[["    returns correct AST node for non-UI terms",{"fg":2}],["                                                                                      ",{}]],"12":[["    returns correct AST node for UI terms",{"fg":2}],["                                                                                          ",{}]],"13":[["    returns correct AST node for UI terms starting with lowercase",{"fg":2}],["                                                                  ",{}]],"14":[["                                                                                                                                   ",{}]],"15":[["Y2R::AST::YCP::YETriple                                                                                                            ",{}]],"16":[["  #compile                                                                                                                         ",{}]],"17":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"18":[["                                                                                                                                   ",{}]],"19":[["Y2R::AST::YCP::YEUnary                                                                                                             ",{}]],"20":[["  #compile                                                                                                                         ",{}]],"21":[["    returns correct AST node when child is not constant",{"fg":2}],["                                                                            ",{}]],"22":[["    returns correct AST node when child is constant",{"fg":2}],["                                                                                ",{}]],"23":[["                                                                                                                                   ",{}]],"24":[["Y2R::Parser                                                                                                                        ",{}]],"25":[["  #parse                                                                                                                           ",{}]],"26":[["    parses a simple program",{"fg":2}],["                                                                                                        ",{}]],"27":[["    parses a more complex program",{"fg":2}],["                                                                                                  ",{}]],"28":[["    raises an exception on syntax error",{"fg":2}],["                                                                                            ",{}]],"29":[["                                                                                                                                   ",{}]],"30":[["Y2R                                                                                                                                ",{}]],"31":[["  .compile                                                                                                                         ",{}]],"32":[["    values                                                                                                                         ",{}]],"33":[["      voids                                                                                                                        ",{}]],"34":[["        translates YCP `nil`s as Ruby `nil`s",{"fg":2}],["                                                                                       ",{}]],"35":[["      booleans                                                                                                                     ",{}]],"36":[["        translates YCP booleans as Ruby booleans",{"fg":2}],["                                                                                   ",{}]],"37":[["      integers                                                                                                                     ",{}]],"38":[["        translates YCP integers as `Fixnum`s",{"fg":2}],["                                                                                       ",{}]],"39":[["      floats                                                                                                                       ",{}]],"40":[["        translates YCP floats as Ruby floats",{"fg":2}],["                                                                                       ",{}]],"41":[["      symbols                                                                                                                      ",{}]],"42":[["        translates YCP symbols as Ruby symbols",{"fg":2}],["                                                                                     ",{}]],"43":[["      strings                                                                                                                      ",{}]],"44":[["        translates YCP strings as Ruby strings",{"fg":2}],["                                                                                     ",{}]],"45":[["      paths                                                                                                                        ",{}]],"46":[["        translates YCP paths as `path` calls",{"fg":2}],["                                                                                       ",{}]],"47":[["      lists                                                                                                                        ",{}]],"48":[["        translates YCP lists as Ruby arrays",{"fg":2}],["                                                                                        ",{}]],"49":[["      maps                                                                                                                         ",{}]],"50":[["        translates YCP maps as Ruby hashes",{"fg":2}],["                                                                                         ",{}]],"51":[["      terms                                                                                                                        ",{}]],"52":[["        translates YCP terms as `term` calls",{"fg":2}],["                                                                                       ",{}]]}}],[0.047622,{"lines":{"0":[["Y2R::AST::YCP::YEReturn                                                                                                            ",{}]],"1":[["  #compile                                                                                                                         ",{}]],"2":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"3":[["  #compile_as_block                                                                                                                ",{}]],"4":[["    returns correct AST node without arguments",{"fg":2}],["                                                                                     ",{}]],"5":[["    returns correct AST node with arguments",{"fg":2}],["                                                                                        ",{}]],"6":[["                                                                                                                                   ",{}]],"7":[["Y2R::AST::YCP::YETerm                                                                                                              ",{}]],"8":[["  #compile                                                                                                                         ",{}]],"9":[["    returns correct AST node for non-UI terms",{"fg":2}],["                                                                                      ",{}]],"10":[["    returns correct AST node for UI terms",{"fg":2}],["                                                                                          ",{}]],"11":[["    returns correct AST node for UI terms starting with lowercase",{"fg":2}],["                                                                  ",{}]],"12":[["                                                                                                                                   ",{}]],"13":[["Y2R::AST::YCP::YETriple                                                                                                            ",{}]],"14":[["  #compile                                                                                                                         ",{}]],"15":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"16":[["                                                                                                                                   ",{}]],"17":[["Y2R::AST::YCP::YEUnary                                                                                                             ",{}]],"18":[["  #compile                                                                                                                         ",{}]],"19":[["    returns correct AST node when child is not constant",{"fg":2}],["                                                                            ",{}]],"20":[["    returns correct AST node when child is constant",{"fg":2}],["                                                                                ",{}]],"21":[["                                                                                                                                   ",{}]],"22":[["Y2R::Parser                                                                                                                        ",{}]],"23":[["  #parse                                                                                                                           ",{}]],"24":[["    parses a simple program",{"fg":2}],["                                                                                                        ",{}]],"25":[["    parses a more complex program",{"fg":2}],["                                                                                                  ",{}]],"26":[["    raises an exception on syntax error",{"fg":2}],["                                                                                            ",{}]],"27":[["                                                                                                                                   ",{}]],"28":[["Y2R                                                                                                                                ",{}]],"29":[["  .compile                                                                                                                         ",{}]],"30":[["    values                                                                                                                         ",{}]],"31":[["      voids                                                                                                                        ",{}]],"32":[["        translates YCP `nil`s as Ruby `nil`s",{"fg":2}],["                                                                                       ",{}]],"33":[["      booleans                                                                                                                     ",{}]],"34":[["        translates YCP booleans as Ruby booleans",{"fg":2}],["                                                                                   ",{}]],"35":[["      integers                                                                                                                     ",{}]],"36":[["        translates YCP integers as `Fixnum`s",{"fg":2}],["                                                                                       ",{}]],"37":[["      floats                                                                                                                       ",{}]],"38":[["        translates YCP floats as Ruby floats",{"fg":2}],["                                                                                       ",{}]],"39":[["      symbols                                                                                                                      ",{}]],"40":[["        translates YCP symbols as Ruby symbols",{"fg":2}],["                                                                                     ",{}]],"41":[["      strings                                                                                                                      ",{}]],"42":[["        translates YCP strings as Ruby strings",{"fg":2}],["                                                                                     ",{}]],"43":[["      paths                                                                                                                        ",{}]],"44":[["        translates YCP paths as `path` calls",{"fg":2}],["                                                                                       ",{}]],"45":[["      lists                                                                                                                        ",{}]],"46":[["        translates YCP lists as Ruby arrays",{"fg":2}],["                                                                                        ",{}]],"47":[["      maps                                                                                                                         ",{}]],"48":[["        translates YCP maps as Ruby hashes",{"fg":2}],["                                                                                         ",{}]],"49":[["      terms                                                                                                                        ",{}]],"50":[["        translates YCP terms as `term` calls",{"fg":2}],["                                                                                       ",{}]],"51":[["        translates some widely used terms as calls to shortcut methods instead of",{"fg":2}],["                                                  ",{}]],"52":[["        `term` calls                                                                                                               ",{"fg":2}]]}}],[0.000103,{"lines":{"0":[["  #compile                                                                                                                         ",{}]],"1":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"2":[["  #compile_as_block                                                                                                                ",{}]],"3":[["    returns correct AST node without arguments",{"fg":2}],["                                                                                     ",{}]],"4":[["    returns correct AST node with arguments",{"fg":2}],["                                                                                        ",{}]],"5":[["                                                                                                                                   ",{}]],"6":[["Y2R::AST::YCP::YETerm                                                                                                              ",{}]],"7":[["  #compile                                                                                                                         ",{}]],"8":[["    returns correct AST node for non-UI terms",{"fg":2}],["                                                                                      ",{}]],"9":[["    returns correct AST node for UI terms",{"fg":2}],["                                                                                          ",{}]],"10":[["    returns correct AST node for UI terms starting with lowercase",{"fg":2}],["                                                                  ",{}]],"11":[["                                                                                                                                   ",{}]],"12":[["Y2R::AST::YCP::YETriple                                                                                                            ",{}]],"13":[["  #compile                                                                                                                         ",{}]],"14":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"15":[["                                                                                                                                   ",{}]],"16":[["Y2R::AST::YCP::YEUnary                                                                                                             ",{}]],"17":[["  #compile                                                                                                                         ",{}]],"18":[["    returns correct AST node when child is not constant",{"fg":2}],["                                                                            ",{}]],"19":[["    returns correct AST node when child is constant",{"fg":2}],["                                                                                ",{}]],"20":[["                                                                                                                                   ",{}]],"21":[["Y2R::Parser                                                                                                                        ",{}]],"22":[["  #parse                                                                                                                           ",{}]],"23":[["    parses a simple program",{"fg":2}],["                                                                                                        ",{}]],"24":[["    parses a more complex program",{"fg":2}],["                                                                                                  ",{}]],"25":[["    raises an exception on syntax error",{"fg":2}],["                                                                                            ",{}]],"26":[["                                                                                                                                   ",{}]],"27":[["Y2R                                                                                                                                ",{}]],"28":[["  .compile                                                                                                                         ",{}]],"29":[["    values                                                                                                                         ",{}]],"30":[["      voids                                                                                                                        ",{}]],"31":[["        translates YCP `nil`s as Ruby `nil`s",{"fg":2}],["                                                                                       ",{}]],"32":[["      booleans                                                                                                                     ",{}]],"33":[["        translates YCP booleans as Ruby booleans",{"fg":2}],["                                                                                   ",{}]],"34":[["      integers                                                                                                                     ",{}]],"35":[["        translates YCP integers as `Fixnum`s",{"fg":2}],["                                                                                       ",{}]],"36":[["      floats                                                                                                                       ",{}]],"37":[["        translates YCP floats as Ruby floats",{"fg":2}],["                                                                                       ",{}]],"38":[["      symbols                                                                                                                      ",{}]],"39":[["        translates YCP symbols as Ruby symbols",{"fg":2}],["                                                                                     ",{}]],"40":[["      strings                                                                                                                      ",{}]],"41":[["        translates YCP strings as Ruby strings",{"fg":2}],["                                                                                     ",{}]],"42":[["      paths                                                                                                                        ",{}]],"43":[["        translates YCP paths as `path` calls",{"fg":2}],["                                                                                       ",{}]],"44":[["      lists                                                                                                                        ",{}]],"45":[["        translates YCP lists as Ruby arrays",{"fg":2}],["                                                                                        ",{}]],"46":[["      maps                                                                                                                         ",{}]],"47":[["        translates YCP maps as Ruby hashes",{"fg":2}],["                                                                                         ",{}]],"48":[["      terms                                                                                                                        ",{}]],"49":[["        translates YCP terms as `term` calls",{"fg":2}],["                                                                                       ",{}]],"50":[["        translates some widely used terms as calls to shortcut methods instead of",{"fg":2}],["                                                  ",{}]],"51":[["        `term` calls                                                                                                               ",{"fg":2}]],"52":[["      blocks                                                                                                                       ",{}]]}}],[0.047801,{"lines":{"0":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"1":[["  #compile_as_block                                                                                                                ",{}]],"2":[["    returns correct AST node without arguments",{"fg":2}],["                                                                                     ",{}]],"3":[["    returns correct AST node with arguments",{"fg":2}],["                                                                                        ",{}]],"4":[["                                                                                                                                   ",{}]],"5":[["Y2R::AST::YCP::YETerm                                                                                                              ",{}]],"6":[["  #compile                                                                                                                         ",{}]],"7":[["    returns correct AST node for non-UI terms",{"fg":2}],["                                                                                      ",{}]],"8":[["    returns correct AST node for UI terms",{"fg":2}],["                                                                                          ",{}]],"9":[["    returns correct AST node for UI terms starting with lowercase",{"fg":2}],["                                                                  ",{}]],"10":[["                                                                                                                                   ",{}]],"11":[["Y2R::AST::YCP::YETriple                                                                                                            ",{}]],"12":[["  #compile                                                                                                                         ",{}]],"13":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"14":[["                                                                                                                                   ",{}]],"15":[["Y2R::AST::YCP::YEUnary                                                                                                             ",{}]],"16":[["  #compile                                                                                                                         ",{}]],"17":[["    returns correct AST node when child is not constant",{"fg":2}],["                                                                            ",{}]],"18":[["    returns correct AST node when child is constant",{"fg":2}],["                                                                                ",{}]],"19":[["                                                                                                                                   ",{}]],"20":[["Y2R::Parser                                                                                                                        ",{}]],"21":[["  #parse                                                                                                                           ",{}]],"22":[["    parses a simple program",{"fg":2}],["                                                                                                        ",{}]],"23":[["    parses a more complex program",{"fg":2}],["                                                                                                  ",{}]],"24":[["    raises an exception on syntax error",{"fg":2}],["                                                                                            ",{}]],"25":[["                                                                                                                                   ",{}]],"26":[["Y2R                                                                                                                                ",{}]],"27":[["  .compile                                                                                                                         ",{}]],"28":[["    values                                                                                                                         ",{}]],"29":[["      voids                                                                                                                        ",{}]],"30":[["        translates YCP `nil`s as Ruby `nil`s",{"fg":2}],["                                                                                       ",{}]],"31":[["      booleans                                                                                                                     ",{}]],"32":[["        translates YCP booleans as Ruby booleans",{"fg":2}],["                                                                                   ",{}]],"33":[["      integers                                                                                                                     ",{}]],"34":[["        translates YCP integers as `Fixnum`s",{"fg":2}],["                                                                                       ",{}]],"35":[["      floats                                                                                                                       ",{}]],"36":[["        translates YCP floats as Ruby floats",{"fg":2}],["                                                                                       ",{}]],"37":[["      symbols                                                                                                                      ",{}]],"38":[["        translates YCP symbols as Ruby symbols",{"fg":2}],["                                                                                     ",{}]],"39":[["      strings                                                                                                                      ",{}]],"40":[["        translates YCP strings as Ruby strings",{"fg":2}],["                                                                                     ",{}]],"41":[["      paths                                                                                                                        ",{}]],"42":[["        translates YCP paths as `path` calls",{"fg":2}],["                                                                                       ",{}]],"43":[["      lists                                                                                                                        ",{}]],"44":[["        translates YCP lists as Ruby arrays",{"fg":2}],["                                                                                        ",{}]],"45":[["      maps                                                                                                                         ",{}]],"46":[["        translates YCP maps as Ruby hashes",{"fg":2}],["                                                                                         ",{}]],"47":[["      terms                                                                                                                        ",{}]],"48":[["        translates YCP terms as `term` calls",{"fg":2}],["                                                                                       ",{}]],"49":[["        translates some widely used terms as calls to shortcut methods instead of",{"fg":2}],["                                                  ",{}]],"50":[["        `term` calls                                                                                                               ",{"fg":2}]],"51":[["      blocks                                                                                                                       ",{}]],"52":[["        translates YCP blocks as Ruby lambdas",{"fg":2}],["                                                                                      ",{}]]}}],[0.000125,{"lines":{"0":[["  #compile_as_block                                                                                                                ",{}]],"1":[["    returns correct AST node without arguments",{"fg":2}],["                                                                                     ",{}]],"2":[["    returns correct AST node with arguments",{"fg":2}],["                                                                                        ",{}]],"3":[["                                                                                                                                   ",{}]],"4":[["Y2R::AST::YCP::YETerm                                                                                                              ",{}]],"5":[["  #compile                                                                                                                         ",{}]],"6":[["    returns correct AST node for non-UI terms",{"fg":2}],["                                                                                      ",{}]],"7":[["    returns correct AST node for UI terms",{"fg":2}],["                                                                                          ",{}]],"8":[["    returns correct AST node for UI terms starting with lowercase",{"fg":2}],["                                                                  ",{}]],"9":[["                                                                                                                                   ",{}]],"10":[["Y2R::AST::YCP::YETriple                                                                                                            ",{}]],"11":[["  #compile                                                                                                                         ",{}]],"12":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"13":[["                                                                                                                                   ",{}]],"14":[["Y2R::AST::YCP::YEUnary                                                                                                             ",{}]],"15":[["  #compile                                                                                                                         ",{}]],"16":[["    returns correct AST node when child is not constant",{"fg":2}],["                                                                            ",{}]],"17":[["    returns correct AST node when child is constant",{"fg":2}],["                                                                                ",{}]],"18":[["                                                                                                                                   ",{}]],"19":[["Y2R::Parser                                                                                                                        ",{}]],"20":[["  #parse                                                                                                                           ",{}]],"21":[["    parses a simple program",{"fg":2}],["                                                                                                        ",{}]],"22":[["    parses a more complex program",{"fg":2}],["                                                                                                  ",{}]],"23":[["    raises an exception on syntax error",{"fg":2}],["                                                                                            ",{}]],"24":[["                                                                                                                                   ",{}]],"25":[["Y2R                                                                                                                                ",{}]],"26":[["  .compile                                                                                                                         ",{}]],"27":[["    values                                                                                                                         ",{}]],"28":[["      voids                                                                                                                        ",{}]],"29":[["        translates YCP `nil`s as Ruby `nil`s",{"fg":2}],["                                                                                       ",{}]],"30":[["      booleans                                                                                                                     ",{}]],"31":[["        translates YCP booleans as Ruby booleans",{"fg":2}],["                                                                                   ",{}]],"32":[["      integers                                                                                                                     ",{}]],"33":[["        translates YCP integers as `Fixnum`s",{"fg":2}],["                                                                                       ",{}]],"34":[["      floats                                                                                                                       ",{}]],"35":[["        translates YCP floats as Ruby floats",{"fg":2}],["                                                                                       ",{}]],"36":[["      symbols                                                                                                                      ",{}]],"37":[["        translates YCP symbols as Ruby symbols",{"fg":2}],["                                                                                     ",{}]],"38":[["      strings                                                                                                                      ",{}]],"39":[["        translates YCP strings as Ruby strings",{"fg":2}],["                                                                                     ",{}]],"40":[["      paths                                                                                                                        ",{}]],"41":[["        translates YCP paths as `path` calls",{"fg":2}],["                                                                                       ",{}]],"42":[["      lists                                                                                                                        ",{}]],"43":[["        translates YCP lists as Ruby arrays",{"fg":2}],["                                                                                        ",{}]],"44":[["      maps                                                                                                                         ",{}]],"45":[["        translates YCP maps as Ruby hashes",{"fg":2}],["                                                                                         ",{}]],"46":[["      terms                                                                                                                        ",{}]],"47":[["        translates YCP terms as `term` calls",{"fg":2}],["                                                                                       ",{}]],"48":[["        translates some widely used terms as calls to shortcut methods instead of",{"fg":2}],["                                                  ",{}]],"49":[["        `term` calls                                                                                                               ",{"fg":2}]],"50":[["      blocks                                                                                                                       ",{}]],"51":[["        translates YCP blocks as Ruby lambdas",{"fg":2}],["                                                                                      ",{}]],"52":[["      function references                                                                                                          ",{}]]}}],[0.085969,{"lines":{"0":[["    returns correct AST node without arguments",{"fg":2}],["                                                                                     ",{}]],"1":[["    returns correct AST node with arguments",{"fg":2}],["                                                                                        ",{}]],"2":[["                                                                                                                                   ",{}]],"3":[["Y2R::AST::YCP::YETerm                                                                                                              ",{}]],"4":[["  #compile                                                                                                                         ",{}]],"5":[["    returns correct AST node for non-UI terms",{"fg":2}],["                                                                                      ",{}]],"6":[["    returns correct AST node for UI terms",{"fg":2}],["                                                                                          ",{}]],"7":[["    returns correct AST node for UI terms starting with lowercase",{"fg":2}],["                                                                  ",{}]],"8":[["                                                                                                                                   ",{}]],"9":[["Y2R::AST::YCP::YETriple                                                                                                            ",{}]],"10":[["  #compile                                                                                                                         ",{}]],"11":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"12":[["                                                                                                                                   ",{}]],"13":[["Y2R::AST::YCP::YEUnary                                                                                                             ",{}]],"14":[["  #compile                                                                                                                         ",{}]],"15":[["    returns correct AST node when child is not constant",{"fg":2}],["                                                                            ",{}]],"16":[["    returns correct AST node when child is constant",{"fg":2}],["                                                                                ",{}]],"17":[["                                                                                                                                   ",{}]],"18":[["Y2R::Parser                                                                                                                        ",{}]],"19":[["  #parse                                                                                                                           ",{}]],"20":[["    parses a simple program",{"fg":2}],["                                                                                                        ",{}]],"21":[["    parses a more complex program",{"fg":2}],["                                                                                                  ",{}]],"22":[["    raises an exception on syntax error",{"fg":2}],["                                                                                            ",{}]],"23":[["                                                                                                                                   ",{}]],"24":[["Y2R                                                                                                                                ",{}]],"25":[["  .compile                                                                                                                         ",{}]],"26":[["    values                                                                                                                         ",{}]],"27":[["      voids                                                                                                                        ",{}]],"28":[["        translates YCP `nil`s as Ruby `nil`s",{"fg":2}],["                                                                                       ",{}]],"29":[["      booleans                                                                                                                     ",{}]],"30":[["        translates YCP booleans as Ruby booleans",{"fg":2}],["                                                                                   ",{}]],"31":[["      integers                                                                                                                     ",{}]],"32":[["        translates YCP integers as `Fixnum`s",{"fg":2}],["                                                                                       ",{}]],"33":[["      floats                                                                                                                       ",{}]],"34":[["        translates YCP floats as Ruby floats",{"fg":2}],["                                                                                       ",{}]],"35":[["      symbols                                                                                                                      ",{}]],"36":[["        translates YCP symbols as Ruby symbols",{"fg":2}],["                                                                                     ",{}]],"37":[["      strings                                                                                                                      ",{}]],"38":[["        translates YCP strings as Ruby strings",{"fg":2}],["                                                                                     ",{}]],"39":[["      paths                                                                                                                        ",{}]],"40":[["        translates YCP paths as `path` calls",{"fg":2}],["                                                                                       ",{}]],"41":[["      lists                                                                                                                        ",{}]],"42":[["        translates YCP lists as Ruby arrays",{"fg":2}],["                                                                                        ",{}]],"43":[["      maps                                                                                                                         ",{}]],"44":[["        translates YCP maps as Ruby hashes",{"fg":2}],["                                                                                         ",{}]],"45":[["      terms                                                                                                                        ",{}]],"46":[["        translates YCP terms as `term` calls",{"fg":2}],["                                                                                       ",{}]],"47":[["        translates some widely used terms as calls to shortcut methods instead of",{"fg":2}],["                                                  ",{}]],"48":[["        `term` calls                                                                                                               ",{"fg":2}]],"49":[["      blocks                                                                                                                       ",{}]],"50":[["        translates YCP blocks as Ruby lambdas",{"fg":2}],["                                                                                      ",{}]],"51":[["      function references                                                                                                          ",{}]],"52":[["        translates YCP function references as `fun_ref` calls",{"fg":2}],["                                                                      ",{}]]}}],[0.000355,{"lines":{"0":[["                                                                                                                                   ",{}]],"1":[["Y2R::AST::YCP::YETerm                                                                                                              ",{}]],"2":[["  #compile                                                                                                                         ",{}]],"3":[["    returns correct AST node for non-UI terms",{"fg":2}],["                                                                                      ",{}]],"4":[["    returns correct AST node for UI terms",{"fg":2}],["                                                                                          ",{}]],"5":[["    returns correct AST node for UI terms starting with lowercase",{"fg":2}],["                                                                  ",{}]],"6":[["                                                                                                                                   ",{}]],"7":[["Y2R::AST::YCP::YETriple                                                                                                            ",{}]],"8":[["  #compile                                                                                                                         ",{}]],"9":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"10":[["                                                                                                                                   ",{}]],"11":[["Y2R::AST::YCP::YEUnary                                                                                                             ",{}]],"12":[["  #compile                                                                                                                         ",{}]],"13":[["    returns correct AST node when child is not constant",{"fg":2}],["                                                                            ",{}]],"14":[["    returns correct AST node when child is constant",{"fg":2}],["                                                                                ",{}]],"15":[["                                                                                                                                   ",{}]],"16":[["Y2R::Parser                                                                                                                        ",{}]],"17":[["  #parse                                                                                                                           ",{}]],"18":[["    parses a simple program",{"fg":2}],["                                                                                                        ",{}]],"19":[["    parses a more complex program",{"fg":2}],["                                                                                                  ",{}]],"20":[["    raises an exception on syntax error",{"fg":2}],["                                                                                            ",{}]],"21":[["                                                                                                                                   ",{}]],"22":[["Y2R                                                                                                                                ",{}]],"23":[["  .compile                                                                                                                         ",{}]],"24":[["    values                                                                                                                         ",{}]],"25":[["      voids                                                                                                                        ",{}]],"26":[["        translates YCP `nil`s as Ruby `nil`s",{"fg":2}],["                                                                                       ",{}]],"27":[["      booleans                                                                                                                     ",{}]],"28":[["        translates YCP booleans as Ruby booleans",{"fg":2}],["                                                                                   ",{}]],"29":[["      integers                                                                                                                     ",{}]],"30":[["        translates YCP integers as `Fixnum`s",{"fg":2}],["                                                                                       ",{}]],"31":[["      floats                                                                                                                       ",{}]],"32":[["        translates YCP floats as Ruby floats",{"fg":2}],["                                                                                       ",{}]],"33":[["      symbols                                                                                                                      ",{}]],"34":[["        translates YCP symbols as Ruby symbols",{"fg":2}],["                                                                                     ",{}]],"35":[["      strings                                                                                                                      ",{}]],"36":[["        translates YCP strings as Ruby strings",{"fg":2}],["                                                                                     ",{}]],"37":[["      paths                                                                                                                        ",{}]],"38":[["        translates YCP paths as `path` calls",{"fg":2}],["                                                                                       ",{}]],"39":[["      lists                                                                                                                        ",{}]],"40":[["        translates YCP lists as Ruby arrays",{"fg":2}],["                                                                                        ",{}]],"41":[["      maps                                                                                                                         ",{}]],"42":[["        translates YCP maps as Ruby hashes",{"fg":2}],["                                                                                         ",{}]],"43":[["      terms                                                                                                                        ",{}]],"44":[["        translates YCP terms as `term` calls",{"fg":2}],["                                                                                       ",{}]],"45":[["        translates some widely used terms as calls to shortcut methods instead of",{"fg":2}],["                                                  ",{}]],"46":[["        `term` calls                                                                                                               ",{"fg":2}]],"47":[["      blocks                                                                                                                       ",{}]],"48":[["        translates YCP blocks as Ruby lambdas",{"fg":2}],["                                                                                      ",{}]],"49":[["      function references                                                                                                          ",{}]],"50":[["        translates YCP function references as `fun_ref` calls",{"fg":2}],["                                                                      ",{}]],"51":[["    expressions                                                                                                                    ",{}]],"52":[["      variables                                                                                                                    ",{}]]}}],[0.054143,{"lines":{"0":[["Y2R::AST::YCP::YETerm                                                                                                              ",{}]],"1":[["  #compile                                                                                                                         ",{}]],"2":[["    returns correct AST node for non-UI terms",{"fg":2}],["                                                                                      ",{}]],"3":[["    returns correct AST node for UI terms",{"fg":2}],["                                                                                          ",{}]],"4":[["    returns correct AST node for UI terms starting with lowercase",{"fg":2}],["                                                                  ",{}]],"5":[["                                                                                                                                   ",{}]],"6":[["Y2R::AST::YCP::YETriple                                                                                                            ",{}]],"7":[["  #compile                                                                                                                         ",{}]],"8":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"9":[["                                                                                                                                   ",{}]],"10":[["Y2R::AST::YCP::YEUnary                                                                                                             ",{}]],"11":[["  #compile                                                                                                                         ",{}]],"12":[["    returns correct AST node when child is not constant",{"fg":2}],["                                                                            ",{}]],"13":[["    returns correct AST node when child is constant",{"fg":2}],["                                                                                ",{}]],"14":[["                                                                                                                                   ",{}]],"15":[["Y2R::Parser                                                                                                                        ",{}]],"16":[["  #parse                                                                                                                           ",{}]],"17":[["    parses a simple program",{"fg":2}],["                                                                                                        ",{}]],"18":[["    parses a more complex program",{"fg":2}],["                                                                                                  ",{}]],"19":[["    raises an exception on syntax error",{"fg":2}],["                                                                                            ",{}]],"20":[["                                                                                                                                   ",{}]],"21":[["Y2R                                                                                                                                ",{}]],"22":[["  .compile                                                                                                                         ",{}]],"23":[["    values                                                                                                                         ",{}]],"24":[["      voids                                                                                                                        ",{}]],"25":[["        translates YCP `nil`s as Ruby `nil`s",{"fg":2}],["                                                                                       ",{}]],"26":[["      booleans                                                                                                                     ",{}]],"27":[["        translates YCP booleans as Ruby booleans",{"fg":2}],["                                                                                   ",{}]],"28":[["      integers                                                                                                                     ",{}]],"29":[["        translates YCP integers as `Fixnum`s",{"fg":2}],["                                                                                       ",{}]],"30":[["      floats                                                                                                                       ",{}]],"31":[["        translates YCP floats as Ruby floats",{"fg":2}],["                                                                                       ",{}]],"32":[["      symbols                                                                                                                      ",{}]],"33":[["        translates YCP symbols as Ruby symbols",{"fg":2}],["                                                                                     ",{}]],"34":[["      strings                                                                                                                      ",{}]],"35":[["        translates YCP strings as Ruby strings",{"fg":2}],["                                                                                     ",{}]],"36":[["      paths                                                                                                                        ",{}]],"37":[["        translates YCP paths as `path` calls",{"fg":2}],["                                                                                       ",{}]],"38":[["      lists                                                                                                                        ",{}]],"39":[["        translates YCP lists as Ruby arrays",{"fg":2}],["                                                                                        ",{}]],"40":[["      maps                                                                                                                         ",{}]],"41":[["        translates YCP maps as Ruby hashes",{"fg":2}],["                                                                                         ",{}]],"42":[["      terms                                                                                                                        ",{}]],"43":[["        translates YCP terms as `term` calls",{"fg":2}],["                                                                                       ",{}]],"44":[["        translates some widely used terms as calls to shortcut methods instead of",{"fg":2}],["                                                  ",{}]],"45":[["        `term` calls                                                                                                               ",{"fg":2}]],"46":[["      blocks                                                                                                                       ",{}]],"47":[["        translates YCP blocks as Ruby lambdas",{"fg":2}],["                                                                                      ",{}]],"48":[["      function references                                                                                                          ",{}]],"49":[["        translates YCP function references as `fun_ref` calls",{"fg":2}],["                                                                      ",{}]],"50":[["    expressions                                                                                                                    ",{}]],"51":[["      variables                                                                                                                    ",{}]],"52":[["        translates YCP variables as Ruby variables",{"fg":2}],["                                                                                 ",{}]]}}],[0.000128,{"lines":{"0":[["  #compile                                                                                                                         ",{}]],"1":[["    returns correct AST node for non-UI terms",{"fg":2}],["                                                                                      ",{}]],"2":[["    returns correct AST node for UI terms",{"fg":2}],["                                                                                          ",{}]],"3":[["    returns correct AST node for UI terms starting with lowercase",{"fg":2}],["                                                                  ",{}]],"4":[["                                                                                                                                   ",{}]],"5":[["Y2R::AST::YCP::YETriple                                                                                                            ",{}]],"6":[["  #compile                                                                                                                         ",{}]],"7":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"8":[["                                                                                                                                   ",{}]],"9":[["Y2R::AST::YCP::YEUnary                                                                                                             ",{}]],"10":[["  #compile                                                                                                                         ",{}]],"11":[["    returns correct AST node when child is not constant",{"fg":2}],["                                                                            ",{}]],"12":[["    returns correct AST node when child is constant",{"fg":2}],["                                                                                ",{}]],"13":[["                                                                                                                                   ",{}]],"14":[["Y2R::Parser                                                                                                                        ",{}]],"15":[["  #parse                                                                                                                           ",{}]],"16":[["    parses a simple program",{"fg":2}],["                                                                                                        ",{}]],"17":[["    parses a more complex program",{"fg":2}],["                                                                                                  ",{}]],"18":[["    raises an exception on syntax error",{"fg":2}],["                                                                                            ",{}]],"19":[["                                                                                                                                   ",{}]],"20":[["Y2R                                                                                                                                ",{}]],"21":[["  .compile                                                                                                                         ",{}]],"22":[["    values                                                                                                                         ",{}]],"23":[["      voids                                                                                                                        ",{}]],"24":[["        translates YCP `nil`s as Ruby `nil`s",{"fg":2}],["                                                                                       ",{}]],"25":[["      booleans                                                                                                                     ",{}]],"26":[["        translates YCP booleans as Ruby booleans",{"fg":2}],["                                                                                   ",{}]],"27":[["      integers                                                                                                                     ",{}]],"28":[["        translates YCP integers as `Fixnum`s",{"fg":2}],["                                                                                       ",{}]],"29":[["      floats                                                                                                                       ",{}]],"30":[["        translates YCP floats as Ruby floats",{"fg":2}],["                                                                                       ",{}]],"31":[["      symbols                                                                                                                      ",{}]],"32":[["        translates YCP symbols as Ruby symbols",{"fg":2}],["                                                                                     ",{}]],"33":[["      strings                                                                                                                      ",{}]],"34":[["        translates YCP strings as Ruby strings",{"fg":2}],["                                                                                     ",{}]],"35":[["      paths                                                                                                                        ",{}]],"36":[["        translates YCP paths as `path` calls",{"fg":2}],["                                                                                       ",{}]],"37":[["      lists                                                                                                                        ",{}]],"38":[["        translates YCP lists as Ruby arrays",{"fg":2}],["                                                                                        ",{}]],"39":[["      maps                                                                                                                         ",{}]],"40":[["        translates YCP maps as Ruby hashes",{"fg":2}],["                                                                                         ",{}]],"41":[["      terms                                                                                                                        ",{}]],"42":[["        translates YCP terms as `term` calls",{"fg":2}],["                                                                                       ",{}]],"43":[["        translates some widely used terms as calls to shortcut methods instead of",{"fg":2}],["                                                  ",{}]],"44":[["        `term` calls                                                                                                               ",{"fg":2}]],"45":[["      blocks                                                                                                                       ",{}]],"46":[["        translates YCP blocks as Ruby lambdas",{"fg":2}],["                                                                                      ",{}]],"47":[["      function references                                                                                                          ",{}]],"48":[["        translates YCP function references as `fun_ref` calls",{"fg":2}],["                                                                      ",{}]],"49":[["    expressions                                                                                                                    ",{}]],"50":[["      variables                                                                                                                    ",{}]],"51":[["        translates YCP variables as Ruby variables",{"fg":2}],["                                                                                 ",{}]],"52":[["      equality operators                                                                                                           ",{}]]}}],[0.048609,{"lines":{"0":[["    returns correct AST node for non-UI terms",{"fg":2}],["                                                                                      ",{}]],"1":[["    returns correct AST node for UI terms",{"fg":2}],["                                                                                          ",{}]],"2":[["    returns correct AST node for UI terms starting with lowercase",{"fg":2}],["                                                                  ",{}]],"3":[["                                                                                                                                   ",{}]],"4":[["Y2R::AST::YCP::YETriple                                                                                                            ",{}]],"5":[["  #compile                                                                                                                         ",{}]],"6":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"7":[["                                                                                                                                   ",{}]],"8":[["Y2R::AST::YCP::YEUnary                                                                                                             ",{}]],"9":[["  #compile                                                                                                                         ",{}]],"10":[["    returns correct AST node when child is not constant",{"fg":2}],["                                                                            ",{}]],"11":[["    returns correct AST node when child is constant",{"fg":2}],["                                                                                ",{}]],"12":[["                                                                                                                                   ",{}]],"13":[["Y2R::Parser                                                                                                                        ",{}]],"14":[["  #parse                                                                                                                           ",{}]],"15":[["    parses a simple program",{"fg":2}],["                                                                                                        ",{}]],"16":[["    parses a more complex program",{"fg":2}],["                                                                                                  ",{}]],"17":[["    raises an exception on syntax error",{"fg":2}],["                                                                                            ",{}]],"18":[["                                                                                                                                   ",{}]],"19":[["Y2R                                                                                                                                ",{}]],"20":[["  .compile                                                                                                                         ",{}]],"21":[["    values                                                                                                                         ",{}]],"22":[["      voids                                                                                                                        ",{}]],"23":[["        translates YCP `nil`s as Ruby `nil`s",{"fg":2}],["                                                                                       ",{}]],"24":[["      booleans                                                                                                                     ",{}]],"25":[["        translates YCP booleans as Ruby booleans",{"fg":2}],["                                                                                   ",{}]],"26":[["      integers                                                                                                                     ",{}]],"27":[["        translates YCP integers as `Fixnum`s",{"fg":2}],["                                                                                       ",{}]],"28":[["      floats                                                                                                                       ",{}]],"29":[["        translates YCP floats as Ruby floats",{"fg":2}],["                                                                                       ",{}]],"30":[["      symbols                                                                                                                      ",{}]],"31":[["        translates YCP symbols as Ruby symbols",{"fg":2}],["                                                                                     ",{}]],"32":[["      strings                                                                                                                      ",{}]],"33":[["        translates YCP strings as Ruby strings",{"fg":2}],["                                                                                     ",{}]],"34":[["      paths                                                                                                                        ",{}]],"35":[["        translates YCP paths as `path` calls",{"fg":2}],["                                                                                       ",{}]],"36":[["      lists                                                                                                                        ",{}]],"37":[["        translates YCP lists as Ruby arrays",{"fg":2}],["                                                                                        ",{}]],"38":[["      maps                                                                                                                         ",{}]],"39":[["        translates YCP maps as Ruby hashes",{"fg":2}],["                                                                                         ",{}]],"40":[["      terms                                                                                                                        ",{}]],"41":[["        translates YCP terms as `term` calls",{"fg":2}],["                                                                                       ",{}]],"42":[["        translates some widely used terms as calls to shortcut methods instead of",{"fg":2}],["                                                  ",{}]],"43":[["        `term` calls                                                                                                               ",{"fg":2}]],"44":[["      blocks                                                                                                                       ",{}]],"45":[["        translates YCP blocks as Ruby lambdas",{"fg":2}],["                                                                                      ",{}]],"46":[["      function references                                                                                                          ",{}]],"47":[["        translates YCP function references as `fun_ref` calls",{"fg":2}],["                                                                      ",{}]],"48":[["    expressions                                                                                                                    ",{}]],"49":[["      variables                                                                                                                    ",{}]],"50":[["        translates YCP variables as Ruby variables",{"fg":2}],["                                                                                 ",{}]],"51":[["      equality operators                                                                                                           ",{}]],"52":[["        translates YCP equality operators as equivalent Ruby operators",{"fg":2}],["                                                             ",{}]]}}],[0.000128,{"lines":{"0":[["    returns correct AST node for UI terms",{"fg":2}],["                                                                                          ",{}]],"1":[["    returns correct AST node for UI terms starting with lowercase",{"fg":2}],["                                                                  ",{}]],"2":[["                                                                                                                                   ",{}]],"3":[["Y2R::AST::YCP::YETriple                                                                                                            ",{}]],"4":[["  #compile                                                                                                                         ",{}]],"5":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"6":[["                                                                                                                                   ",{}]],"7":[["Y2R::AST::YCP::YEUnary                                                                                                             ",{}]],"8":[["  #compile                                                                                                                         ",{}]],"9":[["    returns correct AST node when child is not constant",{"fg":2}],["                                                                            ",{}]],"10":[["    returns correct AST node when child is constant",{"fg":2}],["                                                                                ",{}]],"11":[["                                                                                                                                   ",{}]],"12":[["Y2R::Parser                                                                                                                        ",{}]],"13":[["  #parse                                                                                                                           ",{}]],"14":[["    parses a simple program",{"fg":2}],["                                                                                                        ",{}]],"15":[["    parses a more complex program",{"fg":2}],["                                                                                                  ",{}]],"16":[["    raises an exception on syntax error",{"fg":2}],["                                                                                            ",{}]],"17":[["                                                                                                                                   ",{}]],"18":[["Y2R                                                                                                                                ",{}]],"19":[["  .compile                                                                                                                         ",{}]],"20":[["    values                                                                                                                         ",{}]],"21":[["      voids                                                                                                                        ",{}]],"22":[["        translates YCP `nil`s as Ruby `nil`s",{"fg":2}],["                                                                                       ",{}]],"23":[["      booleans                                                                                                                     ",{}]],"24":[["        translates YCP booleans as Ruby booleans",{"fg":2}],["                                                                                   ",{}]],"25":[["      integers                                                                                                                     ",{}]],"26":[["        translates YCP integers as `Fixnum`s",{"fg":2}],["                                                                                       ",{}]],"27":[["      floats                                                                                                                       ",{}]],"28":[["        translates YCP floats as Ruby floats",{"fg":2}],["                                                                                       ",{}]],"29":[["      symbols                                                                                                                      ",{}]],"30":[["        translates YCP symbols as Ruby symbols",{"fg":2}],["                                                                                     ",{}]],"31":[["      strings                                                                                                                      ",{}]],"32":[["        translates YCP strings as Ruby strings",{"fg":2}],["                                                                                     ",{}]],"33":[["      paths                                                                                                                        ",{}]],"34":[["        translates YCP paths as `path` calls",{"fg":2}],["                                                                                       ",{}]],"35":[["      lists                                                                                                                        ",{}]],"36":[["        translates YCP lists as Ruby arrays",{"fg":2}],["                                                                                        ",{}]],"37":[["      maps                                                                                                                         ",{}]],"38":[["        translates YCP maps as Ruby hashes",{"fg":2}],["                                                                                         ",{}]],"39":[["      terms                                                                                                                        ",{}]],"40":[["        translates YCP terms as `term` calls",{"fg":2}],["                                                                                       ",{}]],"41":[["        translates some widely used terms as calls to shortcut methods instead of",{"fg":2}],["                                                  ",{}]],"42":[["        `term` calls                                                                                                               ",{"fg":2}]],"43":[["      blocks                                                                                                                       ",{}]],"44":[["        translates YCP blocks as Ruby lambdas",{"fg":2}],["                                                                                      ",{}]],"45":[["      function references                                                                                                          ",{}]],"46":[["        translates YCP function references as `fun_ref` calls",{"fg":2}],["                                                                      ",{}]],"47":[["    expressions                                                                                                                    ",{}]],"48":[["      variables                                                                                                                    ",{}]],"49":[["        translates YCP variables as Ruby variables",{"fg":2}],["                                                                                 ",{}]],"50":[["      equality operators                                                                                                           ",{}]],"51":[["        translates YCP equality operators as equivalent Ruby operators",{"fg":2}],["                                                             ",{}]],"52":[["      comparison operators                                                                                                         ",{}]]}}],[0.056014,{"lines":{"0":[["    returns correct AST node for UI terms starting with lowercase",{"fg":2}],["                                                                  ",{}]],"1":[["                                                                                                                                   ",{}]],"2":[["Y2R::AST::YCP::YETriple                                                                                                            ",{}]],"3":[["  #compile                                                                                                                         ",{}]],"4":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"5":[["                                                                                                                                   ",{}]],"6":[["Y2R::AST::YCP::YEUnary                                                                                                             ",{}]],"7":[["  #compile                                                                                                                         ",{}]],"8":[["    returns correct AST node when child is not constant",{"fg":2}],["                                                                            ",{}]],"9":[["    returns correct AST node when child is constant",{"fg":2}],["                                                                                ",{}]],"10":[["                                                                                                                                   ",{}]],"11":[["Y2R::Parser                                                                                                                        ",{}]],"12":[["  #parse                                                                                                                           ",{}]],"13":[["    parses a simple program",{"fg":2}],["                                                                                                        ",{}]],"14":[["    parses a more complex program",{"fg":2}],["                                                                                                  ",{}]],"15":[["    raises an exception on syntax error",{"fg":2}],["                                                                                            ",{}]],"16":[["                                                                                                                                   ",{}]],"17":[["Y2R                                                                                                                                ",{}]],"18":[["  .compile                                                                                                                         ",{}]],"19":[["    values                                                                                                                         ",{}]],"20":[["      voids                                                                                                                        ",{}]],"21":[["        translates YCP `nil`s as Ruby `nil`s",{"fg":2}],["                                                                                       ",{}]],"22":[["      booleans                                                                                                                     ",{}]],"23":[["        translates YCP booleans as Ruby booleans",{"fg":2}],["                                                                                   ",{}]],"24":[["      integers                                                                                                                     ",{}]],"25":[["        translates YCP integers as `Fixnum`s",{"fg":2}],["                                                                                       ",{}]],"26":[["      floats                                                                                                                       ",{}]],"27":[["        translates YCP floats as Ruby floats",{"fg":2}],["                                                                                       ",{}]],"28":[["      symbols                                                                                                                      ",{}]],"29":[["        translates YCP symbols as Ruby symbols",{"fg":2}],["                                                                                     ",{}]],"30":[["      strings                                                                                                                      ",{}]],"31":[["        translates YCP strings as Ruby strings",{"fg":2}],["                                                                                     ",{}]],"32":[["      paths                                                                                                                        ",{}]],"33":[["        translates YCP paths as `path` calls",{"fg":2}],["                                                                                       ",{}]],"34":[["      lists                                                                                                                        ",{}]],"35":[["        translates YCP lists as Ruby arrays",{"fg":2}],["                                                                                        ",{}]],"36":[["      maps                                                                                                                         ",{}]],"37":[["        translates YCP maps as Ruby hashes",{"fg":2}],["                                                                                         ",{}]],"38":[["      terms                                                                                                                        ",{}]],"39":[["        translates YCP terms as `term` calls",{"fg":2}],["                                                                                       ",{}]],"40":[["        translates some widely used terms as calls to shortcut methods instead of",{"fg":2}],["                                                  ",{}]],"41":[["        `term` calls                                                                                                               ",{"fg":2}]],"42":[["      blocks                                                                                                                       ",{}]],"43":[["        translates YCP blocks as Ruby lambdas",{"fg":2}],["                                                                                      ",{}]],"44":[["      function references                                                                                                          ",{}]],"45":[["        translates YCP function references as `fun_ref` calls",{"fg":2}],["                                                                      ",{}]],"46":[["    expressions                                                                                                                    ",{}]],"47":[["      variables                                                                                                                    ",{}]],"48":[["        translates YCP variables as Ruby variables",{"fg":2}],["                                                                                 ",{}]],"49":[["      equality operators                                                                                                           ",{}]],"50":[["        translates YCP equality operators as equivalent Ruby operators",{"fg":2}],["                                                             ",{}]],"51":[["      comparison operators                                                                                                         ",{}]],"52":[["        translates YCP comparison operators as `Ops",{"fg":2}],["                                                                                ",{}]]}}],[0.00013,{"lines":{"0":[["                                                                                                                                   ",{}]],"1":[["Y2R::AST::YCP::YETriple                                                                                                            ",{}]],"2":[["  #compile                                                                                                                         ",{}]],"3":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"4":[["                                                                                                                                   ",{}]],"5":[["Y2R::AST::YCP::YEUnary                                                                                                             ",{}]],"6":[["  #compile                                                                                                                         ",{}]],"7":[["    returns correct AST node when child is not constant",{"fg":2}],["                                                                            ",{}]],"8":[["    returns correct AST node when child is constant",{"fg":2}],["                                                                                ",{}]],"9":[["                                                                                                                                   ",{}]],"10":[["Y2R::Parser                                                                                                                        ",{}]],"11":[["  #parse                                                                                                                           ",{}]],"12":[["    parses a simple program",{"fg":2}],["                                                                                                        ",{}]],"13":[["    parses a more complex program",{"fg":2}],["                                                                                                  ",{}]],"14":[["    raises an exception on syntax error",{"fg":2}],["                                                                                            ",{}]],"15":[["                                                                                                                                   ",{}]],"16":[["Y2R                                                                                                                                ",{}]],"17":[["  .compile                                                                                                                         ",{}]],"18":[["    values                                                                                                                         ",{}]],"19":[["      voids                                                                                                                        ",{}]],"20":[["        translates YCP `nil`s as Ruby `nil`s",{"fg":2}],["                                                                                       ",{}]],"21":[["      booleans                                                                                                                     ",{}]],"22":[["        translates YCP booleans as Ruby booleans",{"fg":2}],["                                                                                   ",{}]],"23":[["      integers                                                                                                                     ",{}]],"24":[["        translates YCP integers as `Fixnum`s",{"fg":2}],["                                                                                       ",{}]],"25":[["      floats                                                                                                                       ",{}]],"26":[["        translates YCP floats as Ruby floats",{"fg":2}],["                                                                                       ",{}]],"27":[["      symbols                                                                                                                      ",{}]],"28":[["        translates YCP symbols as Ruby symbols",{"fg":2}],["                                                                                     ",{}]],"29":[["      strings                                                                                                                      ",{}]],"30":[["        translates YCP strings as Ruby strings",{"fg":2}],["                                                                                     ",{}]],"31":[["      paths                                                                                                                        ",{}]],"32":[["        translates YCP paths as `path` calls",{"fg":2}],["                                                                                       ",{}]],"33":[["      lists                                                                                                                        ",{}]],"34":[["        translates YCP lists as Ruby arrays",{"fg":2}],["                                                                                        ",{}]],"35":[["      maps                                                                                                                         ",{}]],"36":[["        translates YCP maps as Ruby hashes",{"fg":2}],["                                                                                         ",{}]],"37":[["      terms                                                                                                                        ",{}]],"38":[["        translates YCP terms as `term` calls",{"fg":2}],["                                                                                       ",{}]],"39":[["        translates some widely used terms as calls to shortcut methods instead of",{"fg":2}],["                                                  ",{}]],"40":[["        `term` calls                                                                                                               ",{"fg":2}]],"41":[["      blocks                                                                                                                       ",{}]],"42":[["        translates YCP blocks as Ruby lambdas",{"fg":2}],["                                                                                      ",{}]],"43":[["      function references                                                                                                          ",{}]],"44":[["        translates YCP function references as `fun_ref` calls",{"fg":2}],["                                                                      ",{}]],"45":[["    expressions                                                                                                                    ",{}]],"46":[["      variables                                                                                                                    ",{}]],"47":[["        translates YCP variables as Ruby variables",{"fg":2}],["                                                                                 ",{}]],"48":[["      equality operators                                                                                                           ",{}]],"49":[["        translates YCP equality operators as equivalent Ruby operators",{"fg":2}],["                                                             ",{}]],"50":[["      comparison operators                                                                                                         ",{}]],"51":[["        translates YCP comparison operators as `Ops",{"fg":2}],["                                                                                ",{}]],"52":[["      arithmetic operators                                                                                                         ",{}]]}}],[0.05555,{"lines":{"0":[["  #compile                                                                                                                         ",{}]],"1":[["    returns correct AST node",{"fg":2}],["                                                                                                       ",{}]],"2":[["                                                                                                                                   ",{}]],"3":[["Y2R::AST::YCP::YEUnary                                                                                                             ",{}]],"4":[["  #compile                                                                                                                         ",{}]],"5":[["    returns correct AST node when child is not constant",{"fg":2}],["                                                                            ",{}]],"6":[["    returns correct AST node when child is constant",{"fg":2}],["                                                                                ",{}]],"7":[["                                                                                                                                   ",{}]],"8":[["Y2R::Parser                                                                                                                        ",{}]],"9":[["  #parse                                                                                                                           ",{}]],"10":[["    parses a simple program",{"fg":2}],["                                                                                                        ",{}]],"11":[["    parses a more complex program",{"fg":2}],["                                                                                                  ",{}]],"12":[["    raises an exception on syntax error",{"fg":2}],["                                                                                            ",{}]],"13":[["                                                                                                                                   ",{}]],"14":[["Y2R                                                                                                                                ",{}]],"15":[["  .compile                                                                                                                         ",{}]],"16":[["    values                                                                                                                         ",{}]],"17":[["      voids                                                                                                                        ",{}]],"18":[["        translates YCP `nil`s as Ruby `nil`s",{"fg":2}],["                                                                                       ",{}]],"19":[["      booleans                                                                                                                     ",{}]],"20":[["        translates YCP booleans as Ruby booleans",{"fg":2}],["                                                                                   ",{}]],"21":[["      integers                                                                                                                     ",{}]],"22":[["        translates YCP integers as `Fixnum`s",{"fg":2}],["                                                                                       ",{}]],"23":[["      floats                                                                                                                       ",{}]],"24":[["        translates YCP floats as Ruby floats",{"fg":2}],["                                                                                       ",{}]],"25":[["      symbols                                                                                                                      ",{}]],"26":[["        translates YCP symbols as Ruby symbols",{"fg":2}],["                                                                                     ",{}]],"27":[["      strings                                                                                                                      ",{}]],"28":[["        translates YCP strings as Ruby strings",{"fg":2}],["                                                                                     ",{}]],"29":[["      paths                                                                                                                        ",{}]],"30":[["        translates YCP paths as `path` calls",{"fg":2}],["                                                                                       ",{}]],"31":[["      lists                                                                                                                        ",{}]],"32":[["        translates YCP lists as Ruby arrays",{"fg":2}],["                                                                                        ",{}]],"33":[["      maps                                                                                                                         ",{}]],"34":[["        translates YCP maps as Ruby hashes",{"fg":2}],["                                                                                         ",{}]],"35":[["      terms                                                                                                                        ",{}]],"36":[["        translates YCP terms as `term` calls",{"fg":2}],["                                                                                       ",{}]],"37":[["        translates some widely used terms as calls to shortcut methods instead of",{"fg":2}],["                                                  ",{}]],"38":[["        `term` calls                                                                                                               ",{"fg":2}]],"39":[["      blocks                                                                                                                       ",{}]],"40":[["        translates YCP blocks as Ruby lambdas",{"fg":2}],["                                                                                      ",{}]],"41":[["      function references                                                                                                          ",{}]],"42":[["        translates YCP function references as `fun_ref` calls",{"fg":2}],["                                                                      ",{}]],"43":[["    expressions                                                                                                                    ",{}]],"44":[["      variables                                                                                                                    ",{}]],"45":[["        translates YCP variables as Ruby variables",{"fg":2}],["                                                                                 ",{}]],"46":[["      equality operators                                                                                                           ",{}]],"47":[["        translates YCP equality operators as equivalent Ruby operators",{"fg":2}],["                                                             ",{}]],"48":[["      comparison operators                                                                                                         ",{}]],"49":[["        translates YCP comparison operators as `Ops",{"fg":2}],["                                                                                ",{}]],"50":[["      arithmetic operators                                                                                                         ",{}]],"51":[["        translates YCP arithmetic operators as equivalent Ruby operators when it is",{"fg":2}],["                                                ",{}]],"52":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]]}}],[0.06610000000000001,{"lines":{"0":[["                                                                                                                                   ",{}]],"1":[["Y2R::AST::YCP::YEUnary                                                                                                             ",{}]],"2":[["  #compile                                                                                                                         ",{}]],"3":[["    returns correct AST node when child is not constant",{"fg":2}],["                                                                            ",{}]],"4":[["    returns correct AST node when child is constant",{"fg":2}],["                                                                                ",{}]],"5":[["                                                                                                                                   ",{}]],"6":[["Y2R::Parser                                                                                                                        ",{}]],"7":[["  #parse                                                                                                                           ",{}]],"8":[["    parses a simple program",{"fg":2}],["                                                                                                        ",{}]],"9":[["    parses a more complex program",{"fg":2}],["                                                                                                  ",{}]],"10":[["    raises an exception on syntax error",{"fg":2}],["                                                                                            ",{}]],"11":[["                                                                                                                                   ",{}]],"12":[["Y2R                                                                                                                                ",{}]],"13":[["  .compile                                                                                                                         ",{}]],"14":[["    values                                                                                                                         ",{}]],"15":[["      voids                                                                                                                        ",{}]],"16":[["        translates YCP `nil`s as Ruby `nil`s",{"fg":2}],["                                                                                       ",{}]],"17":[["      booleans                                                                                                                     ",{}]],"18":[["        translates YCP booleans as Ruby booleans",{"fg":2}],["                                                                                   ",{}]],"19":[["      integers                                                                                                                     ",{}]],"20":[["        translates YCP integers as `Fixnum`s",{"fg":2}],["                                                                                       ",{}]],"21":[["      floats                                                                                                                       ",{}]],"22":[["        translates YCP floats as Ruby floats",{"fg":2}],["                                                                                       ",{}]],"23":[["      symbols                                                                                                                      ",{}]],"24":[["        translates YCP symbols as Ruby symbols",{"fg":2}],["                                                                                     ",{}]],"25":[["      strings                                                                                                                      ",{}]],"26":[["        translates YCP strings as Ruby strings",{"fg":2}],["                                                                                     ",{}]],"27":[["      paths                                                                                                                        ",{}]],"28":[["        translates YCP paths as `path` calls",{"fg":2}],["                                                                                       ",{}]],"29":[["      lists                                                                                                                        ",{}]],"30":[["        translates YCP lists as Ruby arrays",{"fg":2}],["                                                                                        ",{}]],"31":[["      maps                                                                                                                         ",{}]],"32":[["        translates YCP maps as Ruby hashes",{"fg":2}],["                                                                                         ",{}]],"33":[["      terms                                                                                                                        ",{}]],"34":[["        translates YCP terms as `term` calls",{"fg":2}],["                                                                                       ",{}]],"35":[["        translates some widely used terms as calls to shortcut methods instead of",{"fg":2}],["                                                  ",{}]],"36":[["        `term` calls                                                                                                               ",{"fg":2}]],"37":[["      blocks                                                                                                                       ",{}]],"38":[["        translates YCP blocks as Ruby lambdas",{"fg":2}],["                                                                                      ",{}]],"39":[["      function references                                                                                                          ",{}]],"40":[["        translates YCP function references as `fun_ref` calls",{"fg":2}],["                                                                      ",{}]],"41":[["    expressions                                                                                                                    ",{}]],"42":[["      variables                                                                                                                    ",{}]],"43":[["        translates YCP variables as Ruby variables",{"fg":2}],["                                                                                 ",{}]],"44":[["      equality operators                                                                                                           ",{}]],"45":[["        translates YCP equality operators as equivalent Ruby operators",{"fg":2}],["                                                             ",{}]],"46":[["      comparison operators                                                                                                         ",{}]],"47":[["        translates YCP comparison operators as `Ops",{"fg":2}],["                                                                                ",{}]],"48":[["      arithmetic operators                                                                                                         ",{}]],"49":[["        translates YCP arithmetic operators as equivalent Ruby operators when it is",{"fg":2}],["                                                ",{}]],"50":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"51":[["        translates YCP arithmetic operators as `Ops",{"fg":2}],["                                                                                ",{}]],"52":[["      bitwise operators                                                                                                            ",{}]]}}],[0.090541,{"lines":{"0":[["  #compile                                                                                                                         ",{}]],"1":[["    returns correct AST node when child is not constant",{"fg":2}],["                                                                            ",{}]],"2":[["    returns correct AST node when child is constant",{"fg":2}],["                                                                                ",{}]],"3":[["                                                                                                                                   ",{}]],"4":[["Y2R::Parser                                                                                                                        ",{}]],"5":[["  #parse                                                                                                                           ",{}]],"6":[["    parses a simple program",{"fg":2}],["                                                                                                        ",{}]],"7":[["    parses a more complex program",{"fg":2}],["                                                                                                  ",{}]],"8":[["    raises an exception on syntax error",{"fg":2}],["                                                                                            ",{}]],"9":[["                                                                                                                                   ",{}]],"10":[["Y2R                                                                                                                                ",{}]],"11":[["  .compile                                                                                                                         ",{}]],"12":[["    values                                                                                                                         ",{}]],"13":[["      voids                                                                                                                        ",{}]],"14":[["        translates YCP `nil`s as Ruby `nil`s",{"fg":2}],["                                                                                       ",{}]],"15":[["      booleans                                                                                                                     ",{}]],"16":[["        translates YCP booleans as Ruby booleans",{"fg":2}],["                                                                                   ",{}]],"17":[["      integers                                                                                                                     ",{}]],"18":[["        translates YCP integers as `Fixnum`s",{"fg":2}],["                                                                                       ",{}]],"19":[["      floats                                                                                                                       ",{}]],"20":[["        translates YCP floats as Ruby floats",{"fg":2}],["                                                                                       ",{}]],"21":[["      symbols                                                                                                                      ",{}]],"22":[["        translates YCP symbols as Ruby symbols",{"fg":2}],["                                                                                     ",{}]],"23":[["      strings                                                                                                                      ",{}]],"24":[["        translates YCP strings as Ruby strings",{"fg":2}],["                                                                                     ",{}]],"25":[["      paths                                                                                                                        ",{}]],"26":[["        translates YCP paths as `path` calls",{"fg":2}],["                                                                                       ",{}]],"27":[["      lists                                                                                                                        ",{}]],"28":[["        translates YCP lists as Ruby arrays",{"fg":2}],["                                                                                        ",{}]],"29":[["      maps                                                                                                                         ",{}]],"30":[["        translates YCP maps as Ruby hashes",{"fg":2}],["                                                                                         ",{}]],"31":[["      terms                                                                                                                        ",{}]],"32":[["        translates YCP terms as `term` calls",{"fg":2}],["                                                                                       ",{}]],"33":[["        translates some widely used terms as calls to shortcut methods instead of",{"fg":2}],["                                                  ",{}]],"34":[["        `term` calls                                                                                                               ",{"fg":2}]],"35":[["      blocks                                                                                                                       ",{}]],"36":[["        translates YCP blocks as Ruby lambdas",{"fg":2}],["                                                                                      ",{}]],"37":[["      function references                                                                                                          ",{}]],"38":[["        translates YCP function references as `fun_ref` calls",{"fg":2}],["                                                                      ",{}]],"39":[["    expressions                                                                                                                    ",{}]],"40":[["      variables                                                                                                                    ",{}]],"41":[["        translates YCP variables as Ruby variables",{"fg":2}],["                                                                                 ",{}]],"42":[["      equality operators                                                                                                           ",{}]],"43":[["        translates YCP equality operators as equivalent Ruby operators",{"fg":2}],["                                                             ",{}]],"44":[["      comparison operators                                                                                                         ",{}]],"45":[["        translates YCP comparison operators as `Ops",{"fg":2}],["                                                                                ",{}]],"46":[["      arithmetic operators                                                                                                         ",{}]],"47":[["        translates YCP arithmetic operators as equivalent Ruby operators when it is",{"fg":2}],["                                                ",{}]],"48":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"49":[["        translates YCP arithmetic operators as `Ops",{"fg":2}],["                                                                                ",{}]],"50":[["      bitwise operators                                                                                                            ",{}]],"51":[["        translates YCP bitwise operators as equivalent Ruby operators when it is",{"fg":2}],["                                                   ",{}]],"52":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]]}}],[0.068579,{"lines":{"0":[["    returns correct AST node when child is not constant",{"fg":2}],["                                                                            ",{}]],"1":[["    returns correct AST node when child is constant",{"fg":2}],["                                                                                ",{}]],"2":[["                                                                                                                                   ",{}]],"3":[["Y2R::Parser                                                                                                                        ",{}]],"4":[["  #parse                                                                                                                           ",{}]],"5":[["    parses a simple program",{"fg":2}],["                                                                                                        ",{}]],"6":[["    parses a more complex program",{"fg":2}],["                                                                                                  ",{}]],"7":[["    raises an exception on syntax error",{"fg":2}],["                                                                                            ",{}]],"8":[["                                                                                                                                   ",{}]],"9":[["Y2R                                                                                                                                ",{}]],"10":[["  .compile                                                                                                                         ",{}]],"11":[["    values                                                                                                                         ",{}]],"12":[["      voids                                                                                                                        ",{}]],"13":[["        translates YCP `nil`s as Ruby `nil`s",{"fg":2}],["                                                                                       ",{}]],"14":[["      booleans                                                                                                                     ",{}]],"15":[["        translates YCP booleans as Ruby booleans",{"fg":2}],["                                                                                   ",{}]],"16":[["      integers                                                                                                                     ",{}]],"17":[["        translates YCP integers as `Fixnum`s",{"fg":2}],["                                                                                       ",{}]],"18":[["      floats                                                                                                                       ",{}]],"19":[["        translates YCP floats as Ruby floats",{"fg":2}],["                                                                                       ",{}]],"20":[["      symbols                                                                                                                      ",{}]],"21":[["        translates YCP symbols as Ruby symbols",{"fg":2}],["                                                                                     ",{}]],"22":[["      strings                                                                                                                      ",{}]],"23":[["        translates YCP strings as Ruby strings",{"fg":2}],["                                                                                     ",{}]],"24":[["      paths                                                                                                                        ",{}]],"25":[["        translates YCP paths as `path` calls",{"fg":2}],["                                                                                       ",{}]],"26":[["      lists                                                                                                                        ",{}]],"27":[["        translates YCP lists as Ruby arrays",{"fg":2}],["                                                                                        ",{}]],"28":[["      maps                                                                                                                         ",{}]],"29":[["        translates YCP maps as Ruby hashes",{"fg":2}],["                                                                                         ",{}]],"30":[["      terms                                                                                                                        ",{}]],"31":[["        translates YCP terms as `term` calls",{"fg":2}],["                                                                                       ",{}]],"32":[["        translates some widely used terms as calls to shortcut methods instead of",{"fg":2}],["                                                  ",{}]],"33":[["        `term` calls                                                                                                               ",{"fg":2}]],"34":[["      blocks                                                                                                                       ",{}]],"35":[["        translates YCP blocks as Ruby lambdas",{"fg":2}],["                                                                                      ",{}]],"36":[["      function references                                                                                                          ",{}]],"37":[["        translates YCP function references as `fun_ref` calls",{"fg":2}],["                                                                      ",{}]],"38":[["    expressions                                                                                                                    ",{}]],"39":[["      variables                                                                                                                    ",{}]],"40":[["        translates YCP variables as Ruby variables",{"fg":2}],["                                                                                 ",{}]],"41":[["      equality operators                                                                                                           ",{}]],"42":[["        translates YCP equality operators as equivalent Ruby operators",{"fg":2}],["                                                             ",{}]],"43":[["      comparison operators                                                                                                         ",{}]],"44":[["        translates YCP comparison operators as `Ops",{"fg":2}],["                                                                                ",{}]],"45":[["      arithmetic operators                                                                                                         ",{}]],"46":[["        translates YCP arithmetic operators as equivalent Ruby operators when it is",{"fg":2}],["                                                ",{}]],"47":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"48":[["        translates YCP arithmetic operators as `Ops",{"fg":2}],["                                                                                ",{}]],"49":[["      bitwise operators                                                                                                            ",{}]],"50":[["        translates YCP bitwise operators as equivalent Ruby operators when it is",{"fg":2}],["                                                   ",{}]],"51":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"52":[["        translates YCP bitwise operators as `Ops",{"fg":2}],["                                                                                   ",{}]]}}],[0.000104,{"lines":{"0":[["    returns correct AST node when child is constant",{"fg":2}],["                                                                                ",{}]],"1":[["                                                                                                                                   ",{}]],"2":[["Y2R::Parser                                                                                                                        ",{}]],"3":[["  #parse                                                                                                                           ",{}]],"4":[["    parses a simple program",{"fg":2}],["                                                                                                        ",{}]],"5":[["    parses a more complex program",{"fg":2}],["                                                                                                  ",{}]],"6":[["    raises an exception on syntax error",{"fg":2}],["                                                                                            ",{}]],"7":[["                                                                                                                                   ",{}]],"8":[["Y2R                                                                                                                                ",{}]],"9":[["  .compile                                                                                                                         ",{}]],"10":[["    values                                                                                                                         ",{}]],"11":[["      voids                                                                                                                        ",{}]],"12":[["        translates YCP `nil`s as Ruby `nil`s",{"fg":2}],["                                                                                       ",{}]],"13":[["      booleans                                                                                                                     ",{}]],"14":[["        translates YCP booleans as Ruby booleans",{"fg":2}],["                                                                                   ",{}]],"15":[["      integers                                                                                                                     ",{}]],"16":[["        translates YCP integers as `Fixnum`s",{"fg":2}],["                                                                                       ",{}]],"17":[["      floats                                                                                                                       ",{}]],"18":[["        translates YCP floats as Ruby floats",{"fg":2}],["                                                                                       ",{}]],"19":[["      symbols                                                                                                                      ",{}]],"20":[["        translates YCP symbols as Ruby symbols",{"fg":2}],["                                                                                     ",{}]],"21":[["      strings                                                                                                                      ",{}]],"22":[["        translates YCP strings as Ruby strings",{"fg":2}],["                                                                                     ",{}]],"23":[["      paths                                                                                                                        ",{}]],"24":[["        translates YCP paths as `path` calls",{"fg":2}],["                                                                                       ",{}]],"25":[["      lists                                                                                                                        ",{}]],"26":[["        translates YCP lists as Ruby arrays",{"fg":2}],["                                                                                        ",{}]],"27":[["      maps                                                                                                                         ",{}]],"28":[["        translates YCP maps as Ruby hashes",{"fg":2}],["                                                                                         ",{}]],"29":[["      terms                                                                                                                        ",{}]],"30":[["        translates YCP terms as `term` calls",{"fg":2}],["                                                                                       ",{}]],"31":[["        translates some widely used terms as calls to shortcut methods instead of",{"fg":2}],["                                                  ",{}]],"32":[["        `term` calls                                                                                                               ",{"fg":2}]],"33":[["      blocks                                                                                                                       ",{}]],"34":[["        translates YCP blocks as Ruby lambdas",{"fg":2}],["                                                                                      ",{}]],"35":[["      function references                                                                                                          ",{}]],"36":[["        translates YCP function references as `fun_ref` calls",{"fg":2}],["                                                                      ",{}]],"37":[["    expressions                                                                                                                    ",{}]],"38":[["      variables                                                                                                                    ",{}]],"39":[["        translates YCP variables as Ruby variables",{"fg":2}],["                                                                                 ",{}]],"40":[["      equality operators                                                                                                           ",{}]],"41":[["        translates YCP equality operators as equivalent Ruby operators",{"fg":2}],["                                                             ",{}]],"42":[["      comparison operators                                                                                                         ",{}]],"43":[["        translates YCP comparison operators as `Ops",{"fg":2}],["                                                                                ",{}]],"44":[["      arithmetic operators                                                                                                         ",{}]],"45":[["        translates YCP arithmetic operators as equivalent Ruby operators when it is",{"fg":2}],["                                                ",{}]],"46":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"47":[["        translates YCP arithmetic operators as `Ops",{"fg":2}],["                                                                                ",{}]],"48":[["      bitwise operators                                                                                                            ",{}]],"49":[["        translates YCP bitwise operators as equivalent Ruby operators when it is",{"fg":2}],["                                                   ",{}]],"50":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"51":[["        translates YCP bitwise operators as `Ops",{"fg":2}],["                                                                                   ",{}]],"52":[["      logical operators                                                                                                            ",{}]]}}],[0.050648,{"lines":{"0":[["                                                                                                                                   ",{}]],"1":[["Y2R::Parser                                                                                                                        ",{}]],"2":[["  #parse                                                                                                                           ",{}]],"3":[["    parses a simple program",{"fg":2}],["                                                                                                        ",{}]],"4":[["    parses a more complex program",{"fg":2}],["                                                                                                  ",{}]],"5":[["    raises an exception on syntax error",{"fg":2}],["                                                                                            ",{}]],"6":[["                                                                                                                                   ",{}]],"7":[["Y2R                                                                                                                                ",{}]],"8":[["  .compile                                                                                                                         ",{}]],"9":[["    values                                                                                                                         ",{}]],"10":[["      voids                                                                                                                        ",{}]],"11":[["        translates YCP `nil`s as Ruby `nil`s",{"fg":2}],["                                                                                       ",{}]],"12":[["      booleans                                                                                                                     ",{}]],"13":[["        translates YCP booleans as Ruby booleans",{"fg":2}],["                                                                                   ",{}]],"14":[["      integers                                                                                                                     ",{}]],"15":[["        translates YCP integers as `Fixnum`s",{"fg":2}],["                                                                                       ",{}]],"16":[["      floats                                                                                                                       ",{}]],"17":[["        translates YCP floats as Ruby floats",{"fg":2}],["                                                                                       ",{}]],"18":[["      symbols                                                                                                                      ",{}]],"19":[["        translates YCP symbols as Ruby symbols",{"fg":2}],["                                                                                     ",{}]],"20":[["      strings                                                                                                                      ",{}]],"21":[["        translates YCP strings as Ruby strings",{"fg":2}],["                                                                                     ",{}]],"22":[["      paths                                                                                                                        ",{}]],"23":[["        translates YCP paths as `path` calls",{"fg":2}],["                                                                                       ",{}]],"24":[["      lists                                                                                                                        ",{}]],"25":[["        translates YCP lists as Ruby arrays",{"fg":2}],["                                                                                        ",{}]],"26":[["      maps                                                                                                                         ",{}]],"27":[["        translates YCP maps as Ruby hashes",{"fg":2}],["                                                                                         ",{}]],"28":[["      terms                                                                                                                        ",{}]],"29":[["        translates YCP terms as `term` calls",{"fg":2}],["                                                                                       ",{}]],"30":[["        translates some widely used terms as calls to shortcut methods instead of",{"fg":2}],["                                                  ",{}]],"31":[["        `term` calls                                                                                                               ",{"fg":2}]],"32":[["      blocks                                                                                                                       ",{}]],"33":[["        translates YCP blocks as Ruby lambdas",{"fg":2}],["                                                                                      ",{}]],"34":[["      function references                                                                                                          ",{}]],"35":[["        translates YCP function references as `fun_ref` calls",{"fg":2}],["                                                                      ",{}]],"36":[["    expressions                                                                                                                    ",{}]],"37":[["      variables                                                                                                                    ",{}]],"38":[["        translates YCP variables as Ruby variables",{"fg":2}],["                                                                                 ",{}]],"39":[["      equality operators                                                                                                           ",{}]],"40":[["        translates YCP equality operators as equivalent Ruby operators",{"fg":2}],["                                                             ",{}]],"41":[["      comparison operators                                                                                                         ",{}]],"42":[["        translates YCP comparison operators as `Ops",{"fg":2}],["                                                                                ",{}]],"43":[["      arithmetic operators                                                                                                         ",{}]],"44":[["        translates YCP arithmetic operators as equivalent Ruby operators when it is",{"fg":2}],["                                                ",{}]],"45":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"46":[["        translates YCP arithmetic operators as `Ops",{"fg":2}],["                                                                                ",{}]],"47":[["      bitwise operators                                                                                                            ",{}]],"48":[["        translates YCP bitwise operators as equivalent Ruby operators when it is",{"fg":2}],["                                                   ",{}]],"49":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"50":[["        translates YCP bitwise operators as `Ops",{"fg":2}],["                                                                                   ",{}]],"51":[["      logical operators                                                                                                            ",{}]],"52":[["        translates YCP logical operators as Ruby logical operators",{"fg":2}],["                                                                 ",{}]]}}],[0.000125,{"lines":{"0":[["Y2R::Parser                                                                                                                        ",{}]],"1":[["  #parse                                                                                                                           ",{}]],"2":[["    parses a simple program",{"fg":2}],["                                                                                                        ",{}]],"3":[["    parses a more complex program",{"fg":2}],["                                                                                                  ",{}]],"4":[["    raises an exception on syntax error",{"fg":2}],["                                                                                            ",{}]],"5":[["                                                                                                                                   ",{}]],"6":[["Y2R                                                                                                                                ",{}]],"7":[["  .compile                                                                                                                         ",{}]],"8":[["    values                                                                                                                         ",{}]],"9":[["      voids                                                                                                                        ",{}]],"10":[["        translates YCP `nil`s as Ruby `nil`s",{"fg":2}],["                                                                                       ",{}]],"11":[["      booleans                                                                                                                     ",{}]],"12":[["        translates YCP booleans as Ruby booleans",{"fg":2}],["                                                                                   ",{}]],"13":[["      integers                                                                                                                     ",{}]],"14":[["        translates YCP integers as `Fixnum`s",{"fg":2}],["                                                                                       ",{}]],"15":[["      floats                                                                                                                       ",{}]],"16":[["        translates YCP floats as Ruby floats",{"fg":2}],["                                                                                       ",{}]],"17":[["      symbols                                                                                                                      ",{}]],"18":[["        translates YCP symbols as Ruby symbols",{"fg":2}],["                                                                                     ",{}]],"19":[["      strings                                                                                                                      ",{}]],"20":[["        translates YCP strings as Ruby strings",{"fg":2}],["                                                                                     ",{}]],"21":[["      paths                                                                                                                        ",{}]],"22":[["        translates YCP paths as `path` calls",{"fg":2}],["                                                                                       ",{}]],"23":[["      lists                                                                                                                        ",{}]],"24":[["        translates YCP lists as Ruby arrays",{"fg":2}],["                                                                                        ",{}]],"25":[["      maps                                                                                                                         ",{}]],"26":[["        translates YCP maps as Ruby hashes",{"fg":2}],["                                                                                         ",{}]],"27":[["      terms                                                                                                                        ",{}]],"28":[["        translates YCP terms as `term` calls",{"fg":2}],["                                                                                       ",{}]],"29":[["        translates some widely used terms as calls to shortcut methods instead of",{"fg":2}],["                                                  ",{}]],"30":[["        `term` calls                                                                                                               ",{"fg":2}]],"31":[["      blocks                                                                                                                       ",{}]],"32":[["        translates YCP blocks as Ruby lambdas",{"fg":2}],["                                                                                      ",{}]],"33":[["      function references                                                                                                          ",{}]],"34":[["        translates YCP function references as `fun_ref` calls",{"fg":2}],["                                                                      ",{}]],"35":[["    expressions                                                                                                                    ",{}]],"36":[["      variables                                                                                                                    ",{}]],"37":[["        translates YCP variables as Ruby variables",{"fg":2}],["                                                                                 ",{}]],"38":[["      equality operators                                                                                                           ",{}]],"39":[["        translates YCP equality operators as equivalent Ruby operators",{"fg":2}],["                                                             ",{}]],"40":[["      comparison operators                                                                                                         ",{}]],"41":[["        translates YCP comparison operators as `Ops",{"fg":2}],["                                                                                ",{}]],"42":[["      arithmetic operators                                                                                                         ",{}]],"43":[["        translates YCP arithmetic operators as equivalent Ruby operators when it is",{"fg":2}],["                                                ",{}]],"44":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"45":[["        translates YCP arithmetic operators as `Ops",{"fg":2}],["                                                                                ",{}]],"46":[["      bitwise operators                                                                                                            ",{}]],"47":[["        translates YCP bitwise operators as equivalent Ruby operators when it is",{"fg":2}],["                                                   ",{}]],"48":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"49":[["        translates YCP bitwise operators as `Ops",{"fg":2}],["                                                                                   ",{}]],"50":[["      logical operators                                                                                                            ",{}]],"51":[["        translates YCP logical operators as Ruby logical operators",{"fg":2}],["                                                                 ",{}]],"52":[["      ternary operator                                                                                                             ",{}]]}}],[0.045998,{"lines":{"0":[["  #parse                                                                                                                           ",{}]],"1":[["    parses a simple program",{"fg":2}],["                                                                                                        ",{}]],"2":[["    parses a more complex program",{"fg":2}],["                                                                                                  ",{}]],"3":[["    raises an exception on syntax error",{"fg":2}],["                                                                                            ",{}]],"4":[["                                                                                                                                   ",{}]],"5":[["Y2R                                                                                                                                ",{}]],"6":[["  .compile                                                                                                                         ",{}]],"7":[["    values                                                                                                                         ",{}]],"8":[["      voids                                                                                                                        ",{}]],"9":[["        translates YCP `nil`s as Ruby `nil`s",{"fg":2}],["                                                                                       ",{}]],"10":[["      booleans                                                                                                                     ",{}]],"11":[["        translates YCP booleans as Ruby booleans",{"fg":2}],["                                                                                   ",{}]],"12":[["      integers                                                                                                                     ",{}]],"13":[["        translates YCP integers as `Fixnum`s",{"fg":2}],["                                                                                       ",{}]],"14":[["      floats                                                                                                                       ",{}]],"15":[["        translates YCP floats as Ruby floats",{"fg":2}],["                                                                                       ",{}]],"16":[["      symbols                                                                                                                      ",{}]],"17":[["        translates YCP symbols as Ruby symbols",{"fg":2}],["                                                                                     ",{}]],"18":[["      strings                                                                                                                      ",{}]],"19":[["        translates YCP strings as Ruby strings",{"fg":2}],["                                                                                     ",{}]],"20":[["      paths                                                                                                                        ",{}]],"21":[["        translates YCP paths as `path` calls",{"fg":2}],["                                                                                       ",{}]],"22":[["      lists                                                                                                                        ",{}]],"23":[["        translates YCP lists as Ruby arrays",{"fg":2}],["                                                                                        ",{}]],"24":[["      maps                                                                                                                         ",{}]],"25":[["        translates YCP maps as Ruby hashes",{"fg":2}],["                                                                                         ",{}]],"26":[["      terms                                                                                                                        ",{}]],"27":[["        translates YCP terms as `term` calls",{"fg":2}],["                                                                                       ",{}]],"28":[["        translates some widely used terms as calls to shortcut methods instead of",{"fg":2}],["                                                  ",{}]],"29":[["        `term` calls                                                                                                               ",{"fg":2}]],"30":[["      blocks                                                                                                                       ",{}]],"31":[["        translates YCP blocks as Ruby lambdas",{"fg":2}],["                                                                                      ",{}]],"32":[["      function references                                                                                                          ",{}]],"33":[["        translates YCP function references as `fun_ref` calls",{"fg":2}],["                                                                      ",{}]],"34":[["    expressions                                                                                                                    ",{}]],"35":[["      variables                                                                                                                    ",{}]],"36":[["        translates YCP variables as Ruby variables",{"fg":2}],["                                                                                 ",{}]],"37":[["      equality operators                                                                                                           ",{}]],"38":[["        translates YCP equality operators as equivalent Ruby operators",{"fg":2}],["                                                             ",{}]],"39":[["      comparison operators                                                                                                         ",{}]],"40":[["        translates YCP comparison operators as `Ops",{"fg":2}],["                                                                                ",{}]],"41":[["      arithmetic operators                                                                                                         ",{}]],"42":[["        translates YCP arithmetic operators as equivalent Ruby operators when it is",{"fg":2}],["                                                ",{}]],"43":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"44":[["        translates YCP arithmetic operators as `Ops",{"fg":2}],["                                                                                ",{}]],"45":[["      bitwise operators                                                                                                            ",{}]],"46":[["        translates YCP bitwise operators as equivalent Ruby operators when it is",{"fg":2}],["                                                   ",{}]],"47":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"48":[["        translates YCP bitwise operators as `Ops",{"fg":2}],["                                                                                   ",{}]],"49":[["      logical operators                                                                                                            ",{}]],"50":[["        translates YCP logical operators as Ruby logical operators",{"fg":2}],["                                                                 ",{}]],"51":[["      ternary operator                                                                                                             ",{}]],"52":[["        translates YCP ternary operators as Ruby ternary operators",{"fg":2}],["                                                                 ",{}]]}}],[0.000101,{"lines":{"0":[["    parses a simple program",{"fg":2}],["                                                                                                        ",{}]],"1":[["    parses a more complex program",{"fg":2}],["                                                                                                  ",{}]],"2":[["    raises an exception on syntax error",{"fg":2}],["                                                                                            ",{}]],"3":[["                                                                                                                                   ",{}]],"4":[["Y2R                                                                                                                                ",{}]],"5":[["  .compile                                                                                                                         ",{}]],"6":[["    values                                                                                                                         ",{}]],"7":[["      voids                                                                                                                        ",{}]],"8":[["        translates YCP `nil`s as Ruby `nil`s",{"fg":2}],["                                                                                       ",{}]],"9":[["      booleans                                                                                                                     ",{}]],"10":[["        translates YCP booleans as Ruby booleans",{"fg":2}],["                                                                                   ",{}]],"11":[["      integers                                                                                                                     ",{}]],"12":[["        translates YCP integers as `Fixnum`s",{"fg":2}],["                                                                                       ",{}]],"13":[["      floats                                                                                                                       ",{}]],"14":[["        translates YCP floats as Ruby floats",{"fg":2}],["                                                                                       ",{}]],"15":[["      symbols                                                                                                                      ",{}]],"16":[["        translates YCP symbols as Ruby symbols",{"fg":2}],["                                                                                     ",{}]],"17":[["      strings                                                                                                                      ",{}]],"18":[["        translates YCP strings as Ruby strings",{"fg":2}],["                                                                                     ",{}]],"19":[["      paths                                                                                                                        ",{}]],"20":[["        translates YCP paths as `path` calls",{"fg":2}],["                                                                                       ",{}]],"21":[["      lists                                                                                                                        ",{}]],"22":[["        translates YCP lists as Ruby arrays",{"fg":2}],["                                                                                        ",{}]],"23":[["      maps                                                                                                                         ",{}]],"24":[["        translates YCP maps as Ruby hashes",{"fg":2}],["                                                                                         ",{}]],"25":[["      terms                                                                                                                        ",{}]],"26":[["        translates YCP terms as `term` calls",{"fg":2}],["                                                                                       ",{}]],"27":[["        translates some widely used terms as calls to shortcut methods instead of",{"fg":2}],["                                                  ",{}]],"28":[["        `term` calls                                                                                                               ",{"fg":2}]],"29":[["      blocks                                                                                                                       ",{}]],"30":[["        translates YCP blocks as Ruby lambdas",{"fg":2}],["                                                                                      ",{}]],"31":[["      function references                                                                                                          ",{}]],"32":[["        translates YCP function references as `fun_ref` calls",{"fg":2}],["                                                                      ",{}]],"33":[["    expressions                                                                                                                    ",{}]],"34":[["      variables                                                                                                                    ",{}]],"35":[["        translates YCP variables as Ruby variables",{"fg":2}],["                                                                                 ",{}]],"36":[["      equality operators                                                                                                           ",{}]],"37":[["        translates YCP equality operators as equivalent Ruby operators",{"fg":2}],["                                                             ",{}]],"38":[["      comparison operators                                                                                                         ",{}]],"39":[["        translates YCP comparison operators as `Ops",{"fg":2}],["                                                                                ",{}]],"40":[["      arithmetic operators                                                                                                         ",{}]],"41":[["        translates YCP arithmetic operators as equivalent Ruby operators when it is",{"fg":2}],["                                                ",{}]],"42":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"43":[["        translates YCP arithmetic operators as `Ops",{"fg":2}],["                                                                                ",{}]],"44":[["      bitwise operators                                                                                                            ",{}]],"45":[["        translates YCP bitwise operators as equivalent Ruby operators when it is",{"fg":2}],["                                                   ",{}]],"46":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"47":[["        translates YCP bitwise operators as `Ops",{"fg":2}],["                                                                                   ",{}]],"48":[["      logical operators                                                                                                            ",{}]],"49":[["        translates YCP logical operators as Ruby logical operators",{"fg":2}],["                                                                 ",{}]],"50":[["      ternary operator                                                                                                             ",{}]],"51":[["        translates YCP ternary operators as Ruby ternary operators",{"fg":2}],["                                                                 ",{}]],"52":[["      index operator                                                                                                               ",{}]]}}],[0.066418,{"lines":{"0":[["    parses a more complex program",{"fg":2}],["                                                                                                  ",{}]],"1":[["    raises an exception on syntax error",{"fg":2}],["                                                                                            ",{}]],"2":[["                                                                                                                                   ",{}]],"3":[["Y2R                                                                                                                                ",{}]],"4":[["  .compile                                                                                                                         ",{}]],"5":[["    values                                                                                                                         ",{}]],"6":[["      voids                                                                                                                        ",{}]],"7":[["        translates YCP `nil`s as Ruby `nil`s",{"fg":2}],["                                                                                       ",{}]],"8":[["      booleans                                                                                                                     ",{}]],"9":[["        translates YCP booleans as Ruby booleans",{"fg":2}],["                                                                                   ",{}]],"10":[["      integers                                                                                                                     ",{}]],"11":[["        translates YCP integers as `Fixnum`s",{"fg":2}],["                                                                                       ",{}]],"12":[["      floats                                                                                                                       ",{}]],"13":[["        translates YCP floats as Ruby floats",{"fg":2}],["                                                                                       ",{}]],"14":[["      symbols                                                                                                                      ",{}]],"15":[["        translates YCP symbols as Ruby symbols",{"fg":2}],["                                                                                     ",{}]],"16":[["      strings                                                                                                                      ",{}]],"17":[["        translates YCP strings as Ruby strings",{"fg":2}],["                                                                                     ",{}]],"18":[["      paths                                                                                                                        ",{}]],"19":[["        translates YCP paths as `path` calls",{"fg":2}],["                                                                                       ",{}]],"20":[["      lists                                                                                                                        ",{}]],"21":[["        translates YCP lists as Ruby arrays",{"fg":2}],["                                                                                        ",{}]],"22":[["      maps                                                                                                                         ",{}]],"23":[["        translates YCP maps as Ruby hashes",{"fg":2}],["                                                                                         ",{}]],"24":[["      terms                                                                                                                        ",{}]],"25":[["        translates YCP terms as `term` calls",{"fg":2}],["                                                                                       ",{}]],"26":[["        translates some widely used terms as calls to shortcut methods instead of",{"fg":2}],["                                                  ",{}]],"27":[["        `term` calls                                                                                                               ",{"fg":2}]],"28":[["      blocks                                                                                                                       ",{}]],"29":[["        translates YCP blocks as Ruby lambdas",{"fg":2}],["                                                                                      ",{}]],"30":[["      function references                                                                                                          ",{}]],"31":[["        translates YCP function references as `fun_ref` calls",{"fg":2}],["                                                                      ",{}]],"32":[["    expressions                                                                                                                    ",{}]],"33":[["      variables                                                                                                                    ",{}]],"34":[["        translates YCP variables as Ruby variables",{"fg":2}],["                                                                                 ",{}]],"35":[["      equality operators                                                                                                           ",{}]],"36":[["        translates YCP equality operators as equivalent Ruby operators",{"fg":2}],["                                                             ",{}]],"37":[["      comparison operators                                                                                                         ",{}]],"38":[["        translates YCP comparison operators as `Ops",{"fg":2}],["                                                                                ",{}]],"39":[["      arithmetic operators                                                                                                         ",{}]],"40":[["        translates YCP arithmetic operators as equivalent Ruby operators when it is",{"fg":2}],["                                                ",{}]],"41":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"42":[["        translates YCP arithmetic operators as `Ops",{"fg":2}],["                                                                                ",{}]],"43":[["      bitwise operators                                                                                                            ",{}]],"44":[["        translates YCP bitwise operators as equivalent Ruby operators when it is",{"fg":2}],["                                                   ",{}]],"45":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"46":[["        translates YCP bitwise operators as `Ops",{"fg":2}],["                                                                                   ",{}]],"47":[["      logical operators                                                                                                            ",{}]],"48":[["        translates YCP logical operators as Ruby logical operators",{"fg":2}],["                                                                 ",{}]],"49":[["      ternary operator                                                                                                             ",{}]],"50":[["        translates YCP ternary operators as Ruby ternary operators",{"fg":2}],["                                                                 ",{}]],"51":[["      index operator                                                                                                               ",{}]],"52":[["        translates YCP index operators as `Ops",{"fg":2}],["                                                                                     ",{}]]}}],[0.049302,{"lines":{"0":[["    raises an exception on syntax error",{"fg":2}],["                                                                                            ",{}]],"1":[["                                                                                                                                   ",{}]],"2":[["Y2R                                                                                                                                ",{}]],"3":[["  .compile                                                                                                                         ",{}]],"4":[["    values                                                                                                                         ",{}]],"5":[["      voids                                                                                                                        ",{}]],"6":[["        translates YCP `nil`s as Ruby `nil`s",{"fg":2}],["                                                                                       ",{}]],"7":[["      booleans                                                                                                                     ",{}]],"8":[["        translates YCP booleans as Ruby booleans",{"fg":2}],["                                                                                   ",{}]],"9":[["      integers                                                                                                                     ",{}]],"10":[["        translates YCP integers as `Fixnum`s",{"fg":2}],["                                                                                       ",{}]],"11":[["      floats                                                                                                                       ",{}]],"12":[["        translates YCP floats as Ruby floats",{"fg":2}],["                                                                                       ",{}]],"13":[["      symbols                                                                                                                      ",{}]],"14":[["        translates YCP symbols as Ruby symbols",{"fg":2}],["                                                                                     ",{}]],"15":[["      strings                                                                                                                      ",{}]],"16":[["        translates YCP strings as Ruby strings",{"fg":2}],["                                                                                     ",{}]],"17":[["      paths                                                                                                                        ",{}]],"18":[["        translates YCP paths as `path` calls",{"fg":2}],["                                                                                       ",{}]],"19":[["      lists                                                                                                                        ",{}]],"20":[["        translates YCP lists as Ruby arrays",{"fg":2}],["                                                                                        ",{}]],"21":[["      maps                                                                                                                         ",{}]],"22":[["        translates YCP maps as Ruby hashes",{"fg":2}],["                                                                                         ",{}]],"23":[["      terms                                                                                                                        ",{}]],"24":[["        translates YCP terms as `term` calls",{"fg":2}],["                                                                                       ",{}]],"25":[["        translates some widely used terms as calls to shortcut methods instead of",{"fg":2}],["                                                  ",{}]],"26":[["        `term` calls                                                                                                               ",{"fg":2}]],"27":[["      blocks                                                                                                                       ",{}]],"28":[["        translates YCP blocks as Ruby lambdas",{"fg":2}],["                                                                                      ",{}]],"29":[["      function references                                                                                                          ",{}]],"30":[["        translates YCP function references as `fun_ref` calls",{"fg":2}],["                                                                      ",{}]],"31":[["    expressions                                                                                                                    ",{}]],"32":[["      variables                                                                                                                    ",{}]],"33":[["        translates YCP variables as Ruby variables",{"fg":2}],["                                                                                 ",{}]],"34":[["      equality operators                                                                                                           ",{}]],"35":[["        translates YCP equality operators as equivalent Ruby operators",{"fg":2}],["                                                             ",{}]],"36":[["      comparison operators                                                                                                         ",{}]],"37":[["        translates YCP comparison operators as `Ops",{"fg":2}],["                                                                                ",{}]],"38":[["      arithmetic operators                                                                                                         ",{}]],"39":[["        translates YCP arithmetic operators as equivalent Ruby operators when it is",{"fg":2}],["                                                ",{}]],"40":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"41":[["        translates YCP arithmetic operators as `Ops",{"fg":2}],["                                                                                ",{}]],"42":[["      bitwise operators                                                                                                            ",{}]],"43":[["        translates YCP bitwise operators as equivalent Ruby operators when it is",{"fg":2}],["                                                   ",{}]],"44":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"45":[["        translates YCP bitwise operators as `Ops",{"fg":2}],["                                                                                   ",{}]],"46":[["      logical operators                                                                                                            ",{}]],"47":[["        translates YCP logical operators as Ruby logical operators",{"fg":2}],["                                                                 ",{}]],"48":[["      ternary operator                                                                                                             ",{}]],"49":[["        translates YCP ternary operators as Ruby ternary operators",{"fg":2}],["                                                                 ",{}]],"50":[["      index operator                                                                                                               ",{}]],"51":[["        translates YCP index operators as `Ops",{"fg":2}],["                                                                                     ",{}]],"52":[["        translates YCP index operators as appropriate `Ops",{"fg":2}],["                                                                         ",{}]]}}],[0.000129,{"lines":{"0":[["                                                                                                                                   ",{}]],"1":[["Y2R                                                                                                                                ",{}]],"2":[["  .compile                                                                                                                         ",{}]],"3":[["    values                                                                                                                         ",{}]],"4":[["      voids                                                                                                                        ",{}]],"5":[["        translates YCP `nil`s as Ruby `nil`s",{"fg":2}],["                                                                                       ",{}]],"6":[["      booleans                                                                                                                     ",{}]],"7":[["        translates YCP booleans as Ruby booleans",{"fg":2}],["                                                                                   ",{}]],"8":[["      integers                                                                                                                     ",{}]],"9":[["        translates YCP integers as `Fixnum`s",{"fg":2}],["                                                                                       ",{}]],"10":[["      floats                                                                                                                       ",{}]],"11":[["        translates YCP floats as Ruby floats",{"fg":2}],["                                                                                       ",{}]],"12":[["      symbols                                                                                                                      ",{}]],"13":[["        translates YCP symbols as Ruby symbols",{"fg":2}],["                                                                                     ",{}]],"14":[["      strings                                                                                                                      ",{}]],"15":[["        translates YCP strings as Ruby strings",{"fg":2}],["                                                                                     ",{}]],"16":[["      paths                                                                                                                        ",{}]],"17":[["        translates YCP paths as `path` calls",{"fg":2}],["                                                                                       ",{}]],"18":[["      lists                                                                                                                        ",{}]],"19":[["        translates YCP lists as Ruby arrays",{"fg":2}],["                                                                                        ",{}]],"20":[["      maps                                                                                                                         ",{}]],"21":[["        translates YCP maps as Ruby hashes",{"fg":2}],["                                                                                         ",{}]],"22":[["      terms                                                                                                                        ",{}]],"23":[["        translates YCP terms as `term` calls",{"fg":2}],["                                                                                       ",{}]],"24":[["        translates some widely used terms as calls to shortcut methods instead of",{"fg":2}],["                                                  ",{}]],"25":[["        `term` calls                                                                                                               ",{"fg":2}]],"26":[["      blocks                                                                                                                       ",{}]],"27":[["        translates YCP blocks as Ruby lambdas",{"fg":2}],["                                                                                      ",{}]],"28":[["      function references                                                                                                          ",{}]],"29":[["        translates YCP function references as `fun_ref` calls",{"fg":2}],["                                                                      ",{}]],"30":[["    expressions                                                                                                                    ",{}]],"31":[["      variables                                                                                                                    ",{}]],"32":[["        translates YCP variables as Ruby variables",{"fg":2}],["                                                                                 ",{}]],"33":[["      equality operators                                                                                                           ",{}]],"34":[["        translates YCP equality operators as equivalent Ruby operators",{"fg":2}],["                                                             ",{}]],"35":[["      comparison operators                                                                                                         ",{}]],"36":[["        translates YCP comparison operators as `Ops",{"fg":2}],["                                                                                ",{}]],"37":[["      arithmetic operators                                                                                                         ",{}]],"38":[["        translates YCP arithmetic operators as equivalent Ruby operators when it is",{"fg":2}],["                                                ",{}]],"39":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"40":[["        translates YCP arithmetic operators as `Ops",{"fg":2}],["                                                                                ",{}]],"41":[["      bitwise operators                                                                                                            ",{}]],"42":[["        translates YCP bitwise operators as equivalent Ruby operators when it is",{"fg":2}],["                                                   ",{}]],"43":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"44":[["        translates YCP bitwise operators as `Ops",{"fg":2}],["                                                                                   ",{}]],"45":[["      logical operators                                                                                                            ",{}]],"46":[["        translates YCP logical operators as Ruby logical operators",{"fg":2}],["                                                                 ",{}]],"47":[["      ternary operator                                                                                                             ",{}]],"48":[["        translates YCP ternary operators as Ruby ternary operators",{"fg":2}],["                                                                 ",{}]],"49":[["      index operator                                                                                                               ",{}]],"50":[["        translates YCP index operators as `Ops",{"fg":2}],["                                                                                     ",{}]],"51":[["        translates YCP index operators as appropriate `Ops",{"fg":2}],["                                                                         ",{}]],"52":[["      `is` operator                                                                                                                ",{}]]}}],[0.045129,{"lines":{"0":[["Y2R                                                                                                                                ",{}]],"1":[["  .compile                                                                                                                         ",{}]],"2":[["    values                                                                                                                         ",{}]],"3":[["      voids                                                                                                                        ",{}]],"4":[["        translates YCP `nil`s as Ruby `nil`s",{"fg":2}],["                                                                                       ",{}]],"5":[["      booleans                                                                                                                     ",{}]],"6":[["        translates YCP booleans as Ruby booleans",{"fg":2}],["                                                                                   ",{}]],"7":[["      integers                                                                                                                     ",{}]],"8":[["        translates YCP integers as `Fixnum`s",{"fg":2}],["                                                                                       ",{}]],"9":[["      floats                                                                                                                       ",{}]],"10":[["        translates YCP floats as Ruby floats",{"fg":2}],["                                                                                       ",{}]],"11":[["      symbols                                                                                                                      ",{}]],"12":[["        translates YCP symbols as Ruby symbols",{"fg":2}],["                                                                                     ",{}]],"13":[["      strings                                                                                                                      ",{}]],"14":[["        translates YCP strings as Ruby strings",{"fg":2}],["                                                                                     ",{}]],"15":[["      paths                                                                                                                        ",{}]],"16":[["        translates YCP paths as `path` calls",{"fg":2}],["                                                                                       ",{}]],"17":[["      lists                                                                                                                        ",{}]],"18":[["        translates YCP lists as Ruby arrays",{"fg":2}],["                                                                                        ",{}]],"19":[["      maps                                                                                                                         ",{}]],"20":[["        translates YCP maps as Ruby hashes",{"fg":2}],["                                                                                         ",{}]],"21":[["      terms                                                                                                                        ",{}]],"22":[["        translates YCP terms as `term` calls",{"fg":2}],["                                                                                       ",{}]],"23":[["        translates some widely used terms as calls to shortcut methods instead of",{"fg":2}],["                                                  ",{}]],"24":[["        `term` calls                                                                                                               ",{"fg":2}]],"25":[["      blocks                                                                                                                       ",{}]],"26":[["        translates YCP blocks as Ruby lambdas",{"fg":2}],["                                                                                      ",{}]],"27":[["      function references                                                                                                          ",{}]],"28":[["        translates YCP function references as `fun_ref` calls",{"fg":2}],["                                                                      ",{}]],"29":[["    expressions                                                                                                                    ",{}]],"30":[["      variables                                                                                                                    ",{}]],"31":[["        translates YCP variables as Ruby variables",{"fg":2}],["                                                                                 ",{}]],"32":[["      equality operators                                                                                                           ",{}]],"33":[["        translates YCP equality operators as equivalent Ruby operators",{"fg":2}],["                                                             ",{}]],"34":[["      comparison operators                                                                                                         ",{}]],"35":[["        translates YCP comparison operators as `Ops",{"fg":2}],["                                                                                ",{}]],"36":[["      arithmetic operators                                                                                                         ",{}]],"37":[["        translates YCP arithmetic operators as equivalent Ruby operators when it is",{"fg":2}],["                                                ",{}]],"38":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"39":[["        translates YCP arithmetic operators as `Ops",{"fg":2}],["                                                                                ",{}]],"40":[["      bitwise operators                                                                                                            ",{}]],"41":[["        translates YCP bitwise operators as equivalent Ruby operators when it is",{"fg":2}],["                                                   ",{}]],"42":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"43":[["        translates YCP bitwise operators as `Ops",{"fg":2}],["                                                                                   ",{}]],"44":[["      logical operators                                                                                                            ",{}]],"45":[["        translates YCP logical operators as Ruby logical operators",{"fg":2}],["                                                                 ",{}]],"46":[["      ternary operator                                                                                                             ",{}]],"47":[["        translates YCP ternary operators as Ruby ternary operators",{"fg":2}],["                                                                 ",{}]],"48":[["      index operator                                                                                                               ",{}]],"49":[["        translates YCP index operators as `Ops",{"fg":2}],["                                                                                     ",{}]],"50":[["        translates YCP index operators as appropriate `Ops",{"fg":2}],["                                                                         ",{}]],"51":[["      `is` operator                                                                                                                ",{}]],"52":[["        translates YCP `is` operators as `Ops",{"fg":2}],["                                                                                      ",{}]]}}],[0.08784,{"lines":{"0":[["  .compile                                                                                                                         ",{}]],"1":[["    values                                                                                                                         ",{}]],"2":[["      voids                                                                                                                        ",{}]],"3":[["        translates YCP `nil`s as Ruby `nil`s",{"fg":2}],["                                                                                       ",{}]],"4":[["      booleans                                                                                                                     ",{}]],"5":[["        translates YCP booleans as Ruby booleans",{"fg":2}],["                                                                                   ",{}]],"6":[["      integers                                                                                                                     ",{}]],"7":[["        translates YCP integers as `Fixnum`s",{"fg":2}],["                                                                                       ",{}]],"8":[["      floats                                                                                                                       ",{}]],"9":[["        translates YCP floats as Ruby floats",{"fg":2}],["                                                                                       ",{}]],"10":[["      symbols                                                                                                                      ",{}]],"11":[["        translates YCP symbols as Ruby symbols",{"fg":2}],["                                                                                     ",{}]],"12":[["      strings                                                                                                                      ",{}]],"13":[["        translates YCP strings as Ruby strings",{"fg":2}],["                                                                                     ",{}]],"14":[["      paths                                                                                                                        ",{}]],"15":[["        translates YCP paths as `path` calls",{"fg":2}],["                                                                                       ",{}]],"16":[["      lists                                                                                                                        ",{}]],"17":[["        translates YCP lists as Ruby arrays",{"fg":2}],["                                                                                        ",{}]],"18":[["      maps                                                                                                                         ",{}]],"19":[["        translates YCP maps as Ruby hashes",{"fg":2}],["                                                                                         ",{}]],"20":[["      terms                                                                                                                        ",{}]],"21":[["        translates YCP terms as `term` calls",{"fg":2}],["                                                                                       ",{}]],"22":[["        translates some widely used terms as calls to shortcut methods instead of",{"fg":2}],["                                                  ",{}]],"23":[["        `term` calls                                                                                                               ",{"fg":2}]],"24":[["      blocks                                                                                                                       ",{}]],"25":[["        translates YCP blocks as Ruby lambdas",{"fg":2}],["                                                                                      ",{}]],"26":[["      function references                                                                                                          ",{}]],"27":[["        translates YCP function references as `fun_ref` calls",{"fg":2}],["                                                                      ",{}]],"28":[["    expressions                                                                                                                    ",{}]],"29":[["      variables                                                                                                                    ",{}]],"30":[["        translates YCP variables as Ruby variables",{"fg":2}],["                                                                                 ",{}]],"31":[["      equality operators                                                                                                           ",{}]],"32":[["        translates YCP equality operators as equivalent Ruby operators",{"fg":2}],["                                                             ",{}]],"33":[["      comparison operators                                                                                                         ",{}]],"34":[["        translates YCP comparison operators as `Ops",{"fg":2}],["                                                                                ",{}]],"35":[["      arithmetic operators                                                                                                         ",{}]],"36":[["        translates YCP arithmetic operators as equivalent Ruby operators when it is",{"fg":2}],["                                                ",{}]],"37":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"38":[["        translates YCP arithmetic operators as `Ops",{"fg":2}],["                                                                                ",{}]],"39":[["      bitwise operators                                                                                                            ",{}]],"40":[["        translates YCP bitwise operators as equivalent Ruby operators when it is",{"fg":2}],["                                                   ",{}]],"41":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"42":[["        translates YCP bitwise operators as `Ops",{"fg":2}],["                                                                                   ",{}]],"43":[["      logical operators                                                                                                            ",{}]],"44":[["        translates YCP logical operators as Ruby logical operators",{"fg":2}],["                                                                 ",{}]],"45":[["      ternary operator                                                                                                             ",{}]],"46":[["        translates YCP ternary operators as Ruby ternary operators",{"fg":2}],["                                                                 ",{}]],"47":[["      index operator                                                                                                               ",{}]],"48":[["        translates YCP index operators as `Ops",{"fg":2}],["                                                                                     ",{}]],"49":[["        translates YCP index operators as appropriate `Ops",{"fg":2}],["                                                                         ",{}]],"50":[["      `is` operator                                                                                                                ",{}]],"51":[["        translates YCP `is` operators as `Ops",{"fg":2}],["                                                                                      ",{}]],"52":[["        translates YCP `is` operators as appropriate `Ops",{"fg":2}],["                                                                          ",{}]]}}],[0.000129,{"lines":{"0":[["    values                                                                                                                         ",{}]],"1":[["      voids                                                                                                                        ",{}]],"2":[["        translates YCP `nil`s as Ruby `nil`s",{"fg":2}],["                                                                                       ",{}]],"3":[["      booleans                                                                                                                     ",{}]],"4":[["        translates YCP booleans as Ruby booleans",{"fg":2}],["                                                                                   ",{}]],"5":[["      integers                                                                                                                     ",{}]],"6":[["        translates YCP integers as `Fixnum`s",{"fg":2}],["                                                                                       ",{}]],"7":[["      floats                                                                                                                       ",{}]],"8":[["        translates YCP floats as Ruby floats",{"fg":2}],["                                                                                       ",{}]],"9":[["      symbols                                                                                                                      ",{}]],"10":[["        translates YCP symbols as Ruby symbols",{"fg":2}],["                                                                                     ",{}]],"11":[["      strings                                                                                                                      ",{}]],"12":[["        translates YCP strings as Ruby strings",{"fg":2}],["                                                                                     ",{}]],"13":[["      paths                                                                                                                        ",{}]],"14":[["        translates YCP paths as `path` calls",{"fg":2}],["                                                                                       ",{}]],"15":[["      lists                                                                                                                        ",{}]],"16":[["        translates YCP lists as Ruby arrays",{"fg":2}],["                                                                                        ",{}]],"17":[["      maps                                                                                                                         ",{}]],"18":[["        translates YCP maps as Ruby hashes",{"fg":2}],["                                                                                         ",{}]],"19":[["      terms                                                                                                                        ",{}]],"20":[["        translates YCP terms as `term` calls",{"fg":2}],["                                                                                       ",{}]],"21":[["        translates some widely used terms as calls to shortcut methods instead of",{"fg":2}],["                                                  ",{}]],"22":[["        `term` calls                                                                                                               ",{"fg":2}]],"23":[["      blocks                                                                                                                       ",{}]],"24":[["        translates YCP blocks as Ruby lambdas",{"fg":2}],["                                                                                      ",{}]],"25":[["      function references                                                                                                          ",{}]],"26":[["        translates YCP function references as `fun_ref` calls",{"fg":2}],["                                                                      ",{}]],"27":[["    expressions                                                                                                                    ",{}]],"28":[["      variables                                                                                                                    ",{}]],"29":[["        translates YCP variables as Ruby variables",{"fg":2}],["                                                                                 ",{}]],"30":[["      equality operators                                                                                                           ",{}]],"31":[["        translates YCP equality operators as equivalent Ruby operators",{"fg":2}],["                                                             ",{}]],"32":[["      comparison operators                                                                                                         ",{}]],"33":[["        translates YCP comparison operators as `Ops",{"fg":2}],["                                                                                ",{}]],"34":[["      arithmetic operators                                                                                                         ",{}]],"35":[["        translates YCP arithmetic operators as equivalent Ruby operators when it is",{"fg":2}],["                                                ",{}]],"36":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"37":[["        translates YCP arithmetic operators as `Ops",{"fg":2}],["                                                                                ",{}]],"38":[["      bitwise operators                                                                                                            ",{}]],"39":[["        translates YCP bitwise operators as equivalent Ruby operators when it is",{"fg":2}],["                                                   ",{}]],"40":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"41":[["        translates YCP bitwise operators as `Ops",{"fg":2}],["                                                                                   ",{}]],"42":[["      logical operators                                                                                                            ",{}]],"43":[["        translates YCP logical operators as Ruby logical operators",{"fg":2}],["                                                                 ",{}]],"44":[["      ternary operator                                                                                                             ",{}]],"45":[["        translates YCP ternary operators as Ruby ternary operators",{"fg":2}],["                                                                 ",{}]],"46":[["      index operator                                                                                                               ",{}]],"47":[["        translates YCP index operators as `Ops",{"fg":2}],["                                                                                     ",{}]],"48":[["        translates YCP index operators as appropriate `Ops",{"fg":2}],["                                                                         ",{}]],"49":[["      `is` operator                                                                                                                ",{}]],"50":[["        translates YCP `is` operators as `Ops",{"fg":2}],["                                                                                      ",{}]],"51":[["        translates YCP `is` operators as appropriate `Ops",{"fg":2}],["                                                                          ",{}]],"52":[["      double quote operator                                                                                                        ",{}]]}}],[0.048559,{"lines":{"0":[["      voids                                                                                                                        ",{}]],"1":[["        translates YCP `nil`s as Ruby `nil`s",{"fg":2}],["                                                                                       ",{}]],"2":[["      booleans                                                                                                                     ",{}]],"3":[["        translates YCP booleans as Ruby booleans",{"fg":2}],["                                                                                   ",{}]],"4":[["      integers                                                                                                                     ",{}]],"5":[["        translates YCP integers as `Fixnum`s",{"fg":2}],["                                                                                       ",{}]],"6":[["      floats                                                                                                                       ",{}]],"7":[["        translates YCP floats as Ruby floats",{"fg":2}],["                                                                                       ",{}]],"8":[["      symbols                                                                                                                      ",{}]],"9":[["        translates YCP symbols as Ruby symbols",{"fg":2}],["                                                                                     ",{}]],"10":[["      strings                                                                                                                      ",{}]],"11":[["        translates YCP strings as Ruby strings",{"fg":2}],["                                                                                     ",{}]],"12":[["      paths                                                                                                                        ",{}]],"13":[["        translates YCP paths as `path` calls",{"fg":2}],["                                                                                       ",{}]],"14":[["      lists                                                                                                                        ",{}]],"15":[["        translates YCP lists as Ruby arrays",{"fg":2}],["                                                                                        ",{}]],"16":[["      maps                                                                                                                         ",{}]],"17":[["        translates YCP maps as Ruby hashes",{"fg":2}],["                                                                                         ",{}]],"18":[["      terms                                                                                                                        ",{}]],"19":[["        translates YCP terms as `term` calls",{"fg":2}],["                                                                                       ",{}]],"20":[["        translates some widely used terms as calls to shortcut methods instead of",{"fg":2}],["                                                  ",{}]],"21":[["        `term` calls                                                                                                               ",{"fg":2}]],"22":[["      blocks                                                                                                                       ",{}]],"23":[["        translates YCP blocks as Ruby lambdas",{"fg":2}],["                                                                                      ",{}]],"24":[["      function references                                                                                                          ",{}]],"25":[["        translates YCP function references as `fun_ref` calls",{"fg":2}],["                                                                      ",{}]],"26":[["    expressions                                                                                                                    ",{}]],"27":[["      variables                                                                                                                    ",{}]],"28":[["        translates YCP variables as Ruby variables",{"fg":2}],["                                                                                 ",{}]],"29":[["      equality operators                                                                                                           ",{}]],"30":[["        translates YCP equality operators as equivalent Ruby operators",{"fg":2}],["                                                             ",{}]],"31":[["      comparison operators                                                                                                         ",{}]],"32":[["        translates YCP comparison operators as `Ops",{"fg":2}],["                                                                                ",{}]],"33":[["      arithmetic operators                                                                                                         ",{}]],"34":[["        translates YCP arithmetic operators as equivalent Ruby operators when it is",{"fg":2}],["                                                ",{}]],"35":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"36":[["        translates YCP arithmetic operators as `Ops",{"fg":2}],["                                                                                ",{}]],"37":[["      bitwise operators                                                                                                            ",{}]],"38":[["        translates YCP bitwise operators as equivalent Ruby operators when it is",{"fg":2}],["                                                   ",{}]],"39":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"40":[["        translates YCP bitwise operators as `Ops",{"fg":2}],["                                                                                   ",{}]],"41":[["      logical operators                                                                                                            ",{}]],"42":[["        translates YCP logical operators as Ruby logical operators",{"fg":2}],["                                                                 ",{}]],"43":[["      ternary operator                                                                                                             ",{}]],"44":[["        translates YCP ternary operators as Ruby ternary operators",{"fg":2}],["                                                                 ",{}]],"45":[["      index operator                                                                                                               ",{}]],"46":[["        translates YCP index operators as `Ops",{"fg":2}],["                                                                                     ",{}]],"47":[["        translates YCP index operators as appropriate `Ops",{"fg":2}],["                                                                         ",{}]],"48":[["      `is` operator                                                                                                                ",{}]],"49":[["        translates YCP `is` operators as `Ops",{"fg":2}],["                                                                                      ",{}]],"50":[["        translates YCP `is` operators as appropriate `Ops",{"fg":2}],["                                                                          ",{}]],"51":[["      double quote operator                                                                                                        ",{}]],"52":[["        translates YCP double quote operators as Ruby lambdas",{"fg":2}],["                                                                      ",{}]]}}],[0.000147,{"lines":{"0":[["        translates YCP `nil`s as Ruby `nil`s",{"fg":2}],["                                                                                       ",{}]],"1":[["      booleans                                                                                                                     ",{}]],"2":[["        translates YCP booleans as Ruby booleans",{"fg":2}],["                                                                                   ",{}]],"3":[["      integers                                                                                                                     ",{}]],"4":[["        translates YCP integers as `Fixnum`s",{"fg":2}],["                                                                                       ",{}]],"5":[["      floats                                                                                                                       ",{}]],"6":[["        translates YCP floats as Ruby floats",{"fg":2}],["                                                                                       ",{}]],"7":[["      symbols                                                                                                                      ",{}]],"8":[["        translates YCP symbols as Ruby symbols",{"fg":2}],["                                                                                     ",{}]],"9":[["      strings                                                                                                                      ",{}]],"10":[["        translates YCP strings as Ruby strings",{"fg":2}],["                                                                                     ",{}]],"11":[["      paths                                                                                                                        ",{}]],"12":[["        translates YCP paths as `path` calls",{"fg":2}],["                                                                                       ",{}]],"13":[["      lists                                                                                                                        ",{}]],"14":[["        translates YCP lists as Ruby arrays",{"fg":2}],["                                                                                        ",{}]],"15":[["      maps                                                                                                                         ",{}]],"16":[["        translates YCP maps as Ruby hashes",{"fg":2}],["                                                                                         ",{}]],"17":[["      terms                                                                                                                        ",{}]],"18":[["        translates YCP terms as `term` calls",{"fg":2}],["                                                                                       ",{}]],"19":[["        translates some widely used terms as calls to shortcut methods instead of",{"fg":2}],["                                                  ",{}]],"20":[["        `term` calls                                                                                                               ",{"fg":2}]],"21":[["      blocks                                                                                                                       ",{}]],"22":[["        translates YCP blocks as Ruby lambdas",{"fg":2}],["                                                                                      ",{}]],"23":[["      function references                                                                                                          ",{}]],"24":[["        translates YCP function references as `fun_ref` calls",{"fg":2}],["                                                                      ",{}]],"25":[["    expressions                                                                                                                    ",{}]],"26":[["      variables                                                                                                                    ",{}]],"27":[["        translates YCP variables as Ruby variables",{"fg":2}],["                                                                                 ",{}]],"28":[["      equality operators                                                                                                           ",{}]],"29":[["        translates YCP equality operators as equivalent Ruby operators",{"fg":2}],["                                                             ",{}]],"30":[["      comparison operators                                                                                                         ",{}]],"31":[["        translates YCP comparison operators as `Ops",{"fg":2}],["                                                                                ",{}]],"32":[["      arithmetic operators                                                                                                         ",{}]],"33":[["        translates YCP arithmetic operators as equivalent Ruby operators when it is",{"fg":2}],["                                                ",{}]],"34":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"35":[["        translates YCP arithmetic operators as `Ops",{"fg":2}],["                                                                                ",{}]],"36":[["      bitwise operators                                                                                                            ",{}]],"37":[["        translates YCP bitwise operators as equivalent Ruby operators when it is",{"fg":2}],["                                                   ",{}]],"38":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"39":[["        translates YCP bitwise operators as `Ops",{"fg":2}],["                                                                                   ",{}]],"40":[["      logical operators                                                                                                            ",{}]],"41":[["        translates YCP logical operators as Ruby logical operators",{"fg":2}],["                                                                 ",{}]],"42":[["      ternary operator                                                                                                             ",{}]],"43":[["        translates YCP ternary operators as Ruby ternary operators",{"fg":2}],["                                                                 ",{}]],"44":[["      index operator                                                                                                               ",{}]],"45":[["        translates YCP index operators as `Ops",{"fg":2}],["                                                                                     ",{}]],"46":[["        translates YCP index operators as appropriate `Ops",{"fg":2}],["                                                                         ",{}]],"47":[["      `is` operator                                                                                                                ",{}]],"48":[["        translates YCP `is` operators as `Ops",{"fg":2}],["                                                                                      ",{}]],"49":[["        translates YCP `is` operators as appropriate `Ops",{"fg":2}],["                                                                          ",{}]],"50":[["      double quote operator                                                                                                        ",{}]],"51":[["        translates YCP double quote operators as Ruby lambdas",{"fg":2}],["                                                                      ",{}]],"52":[["      type conversions                                                                                                             ",{}]]}}],[0.049675,{"lines":{"0":[["      booleans                                                                                                                     ",{}]],"1":[["        translates YCP booleans as Ruby booleans",{"fg":2}],["                                                                                   ",{}]],"2":[["      integers                                                                                                                     ",{}]],"3":[["        translates YCP integers as `Fixnum`s",{"fg":2}],["                                                                                       ",{}]],"4":[["      floats                                                                                                                       ",{}]],"5":[["        translates YCP floats as Ruby floats",{"fg":2}],["                                                                                       ",{}]],"6":[["      symbols                                                                                                                      ",{}]],"7":[["        translates YCP symbols as Ruby symbols",{"fg":2}],["                                                                                     ",{}]],"8":[["      strings                                                                                                                      ",{}]],"9":[["        translates YCP strings as Ruby strings",{"fg":2}],["                                                                                     ",{}]],"10":[["      paths                                                                                                                        ",{}]],"11":[["        translates YCP paths as `path` calls",{"fg":2}],["                                                                                       ",{}]],"12":[["      lists                                                                                                                        ",{}]],"13":[["        translates YCP lists as Ruby arrays",{"fg":2}],["                                                                                        ",{}]],"14":[["      maps                                                                                                                         ",{}]],"15":[["        translates YCP maps as Ruby hashes",{"fg":2}],["                                                                                         ",{}]],"16":[["      terms                                                                                                                        ",{}]],"17":[["        translates YCP terms as `term` calls",{"fg":2}],["                                                                                       ",{}]],"18":[["        translates some widely used terms as calls to shortcut methods instead of",{"fg":2}],["                                                  ",{}]],"19":[["        `term` calls                                                                                                               ",{"fg":2}]],"20":[["      blocks                                                                                                                       ",{}]],"21":[["        translates YCP blocks as Ruby lambdas",{"fg":2}],["                                                                                      ",{}]],"22":[["      function references                                                                                                          ",{}]],"23":[["        translates YCP function references as `fun_ref` calls",{"fg":2}],["                                                                      ",{}]],"24":[["    expressions                                                                                                                    ",{}]],"25":[["      variables                                                                                                                    ",{}]],"26":[["        translates YCP variables as Ruby variables",{"fg":2}],["                                                                                 ",{}]],"27":[["      equality operators                                                                                                           ",{}]],"28":[["        translates YCP equality operators as equivalent Ruby operators",{"fg":2}],["                                                             ",{}]],"29":[["      comparison operators                                                                                                         ",{}]],"30":[["        translates YCP comparison operators as `Ops",{"fg":2}],["                                                                                ",{}]],"31":[["      arithmetic operators                                                                                                         ",{}]],"32":[["        translates YCP arithmetic operators as equivalent Ruby operators when it is",{"fg":2}],["                                                ",{}]],"33":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"34":[["        translates YCP arithmetic operators as `Ops",{"fg":2}],["                                                                                ",{}]],"35":[["      bitwise operators                                                                                                            ",{}]],"36":[["        translates YCP bitwise operators as equivalent Ruby operators when it is",{"fg":2}],["                                                   ",{}]],"37":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"38":[["        translates YCP bitwise operators as `Ops",{"fg":2}],["                                                                                   ",{}]],"39":[["      logical operators                                                                                                            ",{}]],"40":[["        translates YCP logical operators as Ruby logical operators",{"fg":2}],["                                                                 ",{}]],"41":[["      ternary operator                                                                                                             ",{}]],"42":[["        translates YCP ternary operators as Ruby ternary operators",{"fg":2}],["                                                                 ",{}]],"43":[["      index operator                                                                                                               ",{}]],"44":[["        translates YCP index operators as `Ops",{"fg":2}],["                                                                                     ",{}]],"45":[["        translates YCP index operators as appropriate `Ops",{"fg":2}],["                                                                         ",{}]],"46":[["      `is` operator                                                                                                                ",{}]],"47":[["        translates YCP `is` operators as `Ops",{"fg":2}],["                                                                                      ",{}]],"48":[["        translates YCP `is` operators as appropriate `Ops",{"fg":2}],["                                                                          ",{}]],"49":[["      double quote operator                                                                                                        ",{}]],"50":[["        translates YCP double quote operators as Ruby lambdas",{"fg":2}],["                                                                      ",{}]],"51":[["      type conversions                                                                                                             ",{}]],"52":[["        translates YCP type conversions as `Convert",{"fg":2}],["                                                                                ",{}]]}}],[0.048912,{"lines":{"0":[["        translates YCP booleans as Ruby booleans",{"fg":2}],["                                                                                   ",{}]],"1":[["      integers                                                                                                                     ",{}]],"2":[["        translates YCP integers as `Fixnum`s",{"fg":2}],["                                                                                       ",{}]],"3":[["      floats                                                                                                                       ",{}]],"4":[["        translates YCP floats as Ruby floats",{"fg":2}],["                                                                                       ",{}]],"5":[["      symbols                                                                                                                      ",{}]],"6":[["        translates YCP symbols as Ruby symbols",{"fg":2}],["                                                                                     ",{}]],"7":[["      strings                                                                                                                      ",{}]],"8":[["        translates YCP strings as Ruby strings",{"fg":2}],["                                                                                     ",{}]],"9":[["      paths                                                                                                                        ",{}]],"10":[["        translates YCP paths as `path` calls",{"fg":2}],["                                                                                       ",{}]],"11":[["      lists                                                                                                                        ",{}]],"12":[["        translates YCP lists as Ruby arrays",{"fg":2}],["                                                                                        ",{}]],"13":[["      maps                                                                                                                         ",{}]],"14":[["        translates YCP maps as Ruby hashes",{"fg":2}],["                                                                                         ",{}]],"15":[["      terms                                                                                                                        ",{}]],"16":[["        translates YCP terms as `term` calls",{"fg":2}],["                                                                                       ",{}]],"17":[["        translates some widely used terms as calls to shortcut methods instead of",{"fg":2}],["                                                  ",{}]],"18":[["        `term` calls                                                                                                               ",{"fg":2}]],"19":[["      blocks                                                                                                                       ",{}]],"20":[["        translates YCP blocks as Ruby lambdas",{"fg":2}],["                                                                                      ",{}]],"21":[["      function references                                                                                                          ",{}]],"22":[["        translates YCP function references as `fun_ref` calls",{"fg":2}],["                                                                      ",{}]],"23":[["    expressions                                                                                                                    ",{}]],"24":[["      variables                                                                                                                    ",{}]],"25":[["        translates YCP variables as Ruby variables",{"fg":2}],["                                                                                 ",{}]],"26":[["      equality operators                                                                                                           ",{}]],"27":[["        translates YCP equality operators as equivalent Ruby operators",{"fg":2}],["                                                             ",{}]],"28":[["      comparison operators                                                                                                         ",{}]],"29":[["        translates YCP comparison operators as `Ops",{"fg":2}],["                                                                                ",{}]],"30":[["      arithmetic operators                                                                                                         ",{}]],"31":[["        translates YCP arithmetic operators as equivalent Ruby operators when it is",{"fg":2}],["                                                ",{}]],"32":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"33":[["        translates YCP arithmetic operators as `Ops",{"fg":2}],["                                                                                ",{}]],"34":[["      bitwise operators                                                                                                            ",{}]],"35":[["        translates YCP bitwise operators as equivalent Ruby operators when it is",{"fg":2}],["                                                   ",{}]],"36":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"37":[["        translates YCP bitwise operators as `Ops",{"fg":2}],["                                                                                   ",{}]],"38":[["      logical operators                                                                                                            ",{}]],"39":[["        translates YCP logical operators as Ruby logical operators",{"fg":2}],["                                                                 ",{}]],"40":[["      ternary operator                                                                                                             ",{}]],"41":[["        translates YCP ternary operators as Ruby ternary operators",{"fg":2}],["                                                                 ",{}]],"42":[["      index operator                                                                                                               ",{}]],"43":[["        translates YCP index operators as `Ops",{"fg":2}],["                                                                                     ",{}]],"44":[["        translates YCP index operators as appropriate `Ops",{"fg":2}],["                                                                         ",{}]],"45":[["      `is` operator                                                                                                                ",{}]],"46":[["        translates YCP `is` operators as `Ops",{"fg":2}],["                                                                                      ",{}]],"47":[["        translates YCP `is` operators as appropriate `Ops",{"fg":2}],["                                                                          ",{}]],"48":[["      double quote operator                                                                                                        ",{}]],"49":[["        translates YCP double quote operators as Ruby lambdas",{"fg":2}],["                                                                      ",{}]],"50":[["      type conversions                                                                                                             ",{}]],"51":[["        translates YCP type conversions as `Convert",{"fg":2}],["                                                                                ",{}]],"52":[["        translates YCP type conversions from `any` as appropriate `Convert",{"fg":2}],["                                                         ",{}]]}}],[0.00013,{"lines":{"0":[["      integers                                                                                                                     ",{}]],"1":[["        translates YCP integers as `Fixnum`s",{"fg":2}],["                                                                                       ",{}]],"2":[["      floats                                                                                                                       ",{}]],"3":[["        translates YCP floats as Ruby floats",{"fg":2}],["                                                                                       ",{}]],"4":[["      symbols                                                                                                                      ",{}]],"5":[["        translates YCP symbols as Ruby symbols",{"fg":2}],["                                                                                     ",{}]],"6":[["      strings                                                                                                                      ",{}]],"7":[["        translates YCP strings as Ruby strings",{"fg":2}],["                                                                                     ",{}]],"8":[["      paths                                                                                                                        ",{}]],"9":[["        translates YCP paths as `path` calls",{"fg":2}],["                                                                                       ",{}]],"10":[["      lists                                                                                                                        ",{}]],"11":[["        translates YCP lists as Ruby arrays",{"fg":2}],["                                                                                        ",{}]],"12":[["      maps                                                                                                                         ",{}]],"13":[["        translates YCP maps as Ruby hashes",{"fg":2}],["                                                                                         ",{}]],"14":[["      terms                                                                                                                        ",{}]],"15":[["        translates YCP terms as `term` calls",{"fg":2}],["                                                                                       ",{}]],"16":[["        translates some widely used terms as calls to shortcut methods instead of",{"fg":2}],["                                                  ",{}]],"17":[["        `term` calls                                                                                                               ",{"fg":2}]],"18":[["      blocks                                                                                                                       ",{}]],"19":[["        translates YCP blocks as Ruby lambdas",{"fg":2}],["                                                                                      ",{}]],"20":[["      function references                                                                                                          ",{}]],"21":[["        translates YCP function references as `fun_ref` calls",{"fg":2}],["                                                                      ",{}]],"22":[["    expressions                                                                                                                    ",{}]],"23":[["      variables                                                                                                                    ",{}]],"24":[["        translates YCP variables as Ruby variables",{"fg":2}],["                                                                                 ",{}]],"25":[["      equality operators                                                                                                           ",{}]],"26":[["        translates YCP equality operators as equivalent Ruby operators",{"fg":2}],["                                                             ",{}]],"27":[["      comparison operators                                                                                                         ",{}]],"28":[["        translates YCP comparison operators as `Ops",{"fg":2}],["                                                                                ",{}]],"29":[["      arithmetic operators                                                                                                         ",{}]],"30":[["        translates YCP arithmetic operators as equivalent Ruby operators when it is",{"fg":2}],["                                                ",{}]],"31":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"32":[["        translates YCP arithmetic operators as `Ops",{"fg":2}],["                                                                                ",{}]],"33":[["      bitwise operators                                                                                                            ",{}]],"34":[["        translates YCP bitwise operators as equivalent Ruby operators when it is",{"fg":2}],["                                                   ",{}]],"35":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"36":[["        translates YCP bitwise operators as `Ops",{"fg":2}],["                                                                                   ",{}]],"37":[["      logical operators                                                                                                            ",{}]],"38":[["        translates YCP logical operators as Ruby logical operators",{"fg":2}],["                                                                 ",{}]],"39":[["      ternary operator                                                                                                             ",{}]],"40":[["        translates YCP ternary operators as Ruby ternary operators",{"fg":2}],["                                                                 ",{}]],"41":[["      index operator                                                                                                               ",{}]],"42":[["        translates YCP index operators as `Ops",{"fg":2}],["                                                                                     ",{}]],"43":[["        translates YCP index operators as appropriate `Ops",{"fg":2}],["                                                                         ",{}]],"44":[["      `is` operator                                                                                                                ",{}]],"45":[["        translates YCP `is` operators as `Ops",{"fg":2}],["                                                                                      ",{}]],"46":[["        translates YCP `is` operators as appropriate `Ops",{"fg":2}],["                                                                          ",{}]],"47":[["      double quote operator                                                                                                        ",{}]],"48":[["        translates YCP double quote operators as Ruby lambdas",{"fg":2}],["                                                                      ",{}]],"49":[["      type conversions                                                                                                             ",{}]],"50":[["        translates YCP type conversions as `Convert",{"fg":2}],["                                                                                ",{}]],"51":[["        translates YCP type conversions from `any` as appropriate `Convert",{"fg":2}],["                                                         ",{}]],"52":[["      `_` calls                                                                                                                    ",{}]]}}],[0.047187,{"lines":{"0":[["        translates YCP integers as `Fixnum`s",{"fg":2}],["                                                                                       ",{}]],"1":[["      floats                                                                                                                       ",{}]],"2":[["        translates YCP floats as Ruby floats",{"fg":2}],["                                                                                       ",{}]],"3":[["      symbols                                                                                                                      ",{}]],"4":[["        translates YCP symbols as Ruby symbols",{"fg":2}],["                                                                                     ",{}]],"5":[["      strings                                                                                                                      ",{}]],"6":[["        translates YCP strings as Ruby strings",{"fg":2}],["                                                                                     ",{}]],"7":[["      paths                                                                                                                        ",{}]],"8":[["        translates YCP paths as `path` calls",{"fg":2}],["                                                                                       ",{}]],"9":[["      lists                                                                                                                        ",{}]],"10":[["        translates YCP lists as Ruby arrays",{"fg":2}],["                                                                                        ",{}]],"11":[["      maps                                                                                                                         ",{}]],"12":[["        translates YCP maps as Ruby hashes",{"fg":2}],["                                                                                         ",{}]],"13":[["      terms                                                                                                                        ",{}]],"14":[["        translates YCP terms as `term` calls",{"fg":2}],["                                                                                       ",{}]],"15":[["        translates some widely used terms as calls to shortcut methods instead of",{"fg":2}],["                                                  ",{}]],"16":[["        `term` calls                                                                                                               ",{"fg":2}]],"17":[["      blocks                                                                                                                       ",{}]],"18":[["        translates YCP blocks as Ruby lambdas",{"fg":2}],["                                                                                      ",{}]],"19":[["      function references                                                                                                          ",{}]],"20":[["        translates YCP function references as `fun_ref` calls",{"fg":2}],["                                                                      ",{}]],"21":[["    expressions                                                                                                                    ",{}]],"22":[["      variables                                                                                                                    ",{}]],"23":[["        translates YCP variables as Ruby variables",{"fg":2}],["                                                                                 ",{}]],"24":[["      equality operators                                                                                                           ",{}]],"25":[["        translates YCP equality operators as equivalent Ruby operators",{"fg":2}],["                                                             ",{}]],"26":[["      comparison operators                                                                                                         ",{}]],"27":[["        translates YCP comparison operators as `Ops",{"fg":2}],["                                                                                ",{}]],"28":[["      arithmetic operators                                                                                                         ",{}]],"29":[["        translates YCP arithmetic operators as equivalent Ruby operators when it is",{"fg":2}],["                                                ",{}]],"30":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"31":[["        translates YCP arithmetic operators as `Ops",{"fg":2}],["                                                                                ",{}]],"32":[["      bitwise operators                                                                                                            ",{}]],"33":[["        translates YCP bitwise operators as equivalent Ruby operators when it is",{"fg":2}],["                                                   ",{}]],"34":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"35":[["        translates YCP bitwise operators as `Ops",{"fg":2}],["                                                                                   ",{}]],"36":[["      logical operators                                                                                                            ",{}]],"37":[["        translates YCP logical operators as Ruby logical operators",{"fg":2}],["                                                                 ",{}]],"38":[["      ternary operator                                                                                                             ",{}]],"39":[["        translates YCP ternary operators as Ruby ternary operators",{"fg":2}],["                                                                 ",{}]],"40":[["      index operator                                                                                                               ",{}]],"41":[["        translates YCP index operators as `Ops",{"fg":2}],["                                                                                     ",{}]],"42":[["        translates YCP index operators as appropriate `Ops",{"fg":2}],["                                                                         ",{}]],"43":[["      `is` operator                                                                                                                ",{}]],"44":[["        translates YCP `is` operators as `Ops",{"fg":2}],["                                                                                      ",{}]],"45":[["        translates YCP `is` operators as appropriate `Ops",{"fg":2}],["                                                                          ",{}]],"46":[["      double quote operator                                                                                                        ",{}]],"47":[["        translates YCP double quote operators as Ruby lambdas",{"fg":2}],["                                                                      ",{}]],"48":[["      type conversions                                                                                                             ",{}]],"49":[["        translates YCP type conversions as `Convert",{"fg":2}],["                                                                                ",{}]],"50":[["        translates YCP type conversions from `any` as appropriate `Convert",{"fg":2}],["                                                         ",{}]],"51":[["      `_` calls                                                                                                                    ",{}]],"52":[["        translates YCP `_` calls as `_` calls",{"fg":2}],["                                                                                      ",{}]]}}],[0.000143,{"lines":{"0":[["      floats                                                                                                                       ",{}]],"1":[["        translates YCP floats as Ruby floats",{"fg":2}],["                                                                                       ",{}]],"2":[["      symbols                                                                                                                      ",{}]],"3":[["        translates YCP symbols as Ruby symbols",{"fg":2}],["                                                                                     ",{}]],"4":[["      strings                                                                                                                      ",{}]],"5":[["        translates YCP strings as Ruby strings",{"fg":2}],["                                                                                     ",{}]],"6":[["      paths                                                                                                                        ",{}]],"7":[["        translates YCP paths as `path` calls",{"fg":2}],["                                                                                       ",{}]],"8":[["      lists                                                                                                                        ",{}]],"9":[["        translates YCP lists as Ruby arrays",{"fg":2}],["                                                                                        ",{}]],"10":[["      maps                                                                                                                         ",{}]],"11":[["        translates YCP maps as Ruby hashes",{"fg":2}],["                                                                                         ",{}]],"12":[["      terms                                                                                                                        ",{}]],"13":[["        translates YCP terms as `term` calls",{"fg":2}],["                                                                                       ",{}]],"14":[["        translates some widely used terms as calls to shortcut methods instead of",{"fg":2}],["                                                  ",{}]],"15":[["        `term` calls                                                                                                               ",{"fg":2}]],"16":[["      blocks                                                                                                                       ",{}]],"17":[["        translates YCP blocks as Ruby lambdas",{"fg":2}],["                                                                                      ",{}]],"18":[["      function references                                                                                                          ",{}]],"19":[["        translates YCP function references as `fun_ref` calls",{"fg":2}],["                                                                      ",{}]],"20":[["    expressions                                                                                                                    ",{}]],"21":[["      variables                                                                                                                    ",{}]],"22":[["        translates YCP variables as Ruby variables",{"fg":2}],["                                                                                 ",{}]],"23":[["      equality operators                                                                                                           ",{}]],"24":[["        translates YCP equality operators as equivalent Ruby operators",{"fg":2}],["                                                             ",{}]],"25":[["      comparison operators                                                                                                         ",{}]],"26":[["        translates YCP comparison operators as `Ops",{"fg":2}],["                                                                                ",{}]],"27":[["      arithmetic operators                                                                                                         ",{}]],"28":[["        translates YCP arithmetic operators as equivalent Ruby operators when it is",{"fg":2}],["                                                ",{}]],"29":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"30":[["        translates YCP arithmetic operators as `Ops",{"fg":2}],["                                                                                ",{}]],"31":[["      bitwise operators                                                                                                            ",{}]],"32":[["        translates YCP bitwise operators as equivalent Ruby operators when it is",{"fg":2}],["                                                   ",{}]],"33":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"34":[["        translates YCP bitwise operators as `Ops",{"fg":2}],["                                                                                   ",{}]],"35":[["      logical operators                                                                                                            ",{}]],"36":[["        translates YCP logical operators as Ruby logical operators",{"fg":2}],["                                                                 ",{}]],"37":[["      ternary operator                                                                                                             ",{}]],"38":[["        translates YCP ternary operators as Ruby ternary operators",{"fg":2}],["                                                                 ",{}]],"39":[["      index operator                                                                                                               ",{}]],"40":[["        translates YCP index operators as `Ops",{"fg":2}],["                                                                                     ",{}]],"41":[["        translates YCP index operators as appropriate `Ops",{"fg":2}],["                                                                         ",{}]],"42":[["      `is` operator                                                                                                                ",{}]],"43":[["        translates YCP `is` operators as `Ops",{"fg":2}],["                                                                                      ",{}]],"44":[["        translates YCP `is` operators as appropriate `Ops",{"fg":2}],["                                                                          ",{}]],"45":[["      double quote operator                                                                                                        ",{}]],"46":[["        translates YCP double quote operators as Ruby lambdas",{"fg":2}],["                                                                      ",{}]],"47":[["      type conversions                                                                                                             ",{}]],"48":[["        translates YCP type conversions as `Convert",{"fg":2}],["                                                                                ",{}]],"49":[["        translates YCP type conversions from `any` as appropriate `Convert",{"fg":2}],["                                                         ",{}]],"50":[["      `_` calls                                                                                                                    ",{}]],"51":[["        translates YCP `_` calls as `_` calls",{"fg":2}],["                                                                                      ",{}]],"52":[["      builtin calls                                                                                                                ",{}]]}}],[0.059609,{"lines":{"0":[["        translates YCP floats as Ruby floats",{"fg":2}],["                                                                                       ",{}]],"1":[["      symbols                                                                                                                      ",{}]],"2":[["        translates YCP symbols as Ruby symbols",{"fg":2}],["                                                                                     ",{}]],"3":[["      strings                                                                                                                      ",{}]],"4":[["        translates YCP strings as Ruby strings",{"fg":2}],["                                                                                     ",{}]],"5":[["      paths                                                                                                                        ",{}]],"6":[["        translates YCP paths as `path` calls",{"fg":2}],["                                                                                       ",{}]],"7":[["      lists                                                                                                                        ",{}]],"8":[["        translates YCP lists as Ruby arrays",{"fg":2}],["                                                                                        ",{}]],"9":[["      maps                                                                                                                         ",{}]],"10":[["        translates YCP maps as Ruby hashes",{"fg":2}],["                                                                                         ",{}]],"11":[["      terms                                                                                                                        ",{}]],"12":[["        translates YCP terms as `term` calls",{"fg":2}],["                                                                                       ",{}]],"13":[["        translates some widely used terms as calls to shortcut methods instead of",{"fg":2}],["                                                  ",{}]],"14":[["        `term` calls                                                                                                               ",{"fg":2}]],"15":[["      blocks                                                                                                                       ",{}]],"16":[["        translates YCP blocks as Ruby lambdas",{"fg":2}],["                                                                                      ",{}]],"17":[["      function references                                                                                                          ",{}]],"18":[["        translates YCP function references as `fun_ref` calls",{"fg":2}],["                                                                      ",{}]],"19":[["    expressions                                                                                                                    ",{}]],"20":[["      variables                                                                                                                    ",{}]],"21":[["        translates YCP variables as Ruby variables",{"fg":2}],["                                                                                 ",{}]],"22":[["      equality operators                                                                                                           ",{}]],"23":[["        translates YCP equality operators as equivalent Ruby operators",{"fg":2}],["                                                             ",{}]],"24":[["      comparison operators                                                                                                         ",{}]],"25":[["        translates YCP comparison operators as `Ops",{"fg":2}],["                                                                                ",{}]],"26":[["      arithmetic operators                                                                                                         ",{}]],"27":[["        translates YCP arithmetic operators as equivalent Ruby operators when it is",{"fg":2}],["                                                ",{}]],"28":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"29":[["        translates YCP arithmetic operators as `Ops",{"fg":2}],["                                                                                ",{}]],"30":[["      bitwise operators                                                                                                            ",{}]],"31":[["        translates YCP bitwise operators as equivalent Ruby operators when it is",{"fg":2}],["                                                   ",{}]],"32":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"33":[["        translates YCP bitwise operators as `Ops",{"fg":2}],["                                                                                   ",{}]],"34":[["      logical operators                                                                                                            ",{}]],"35":[["        translates YCP logical operators as Ruby logical operators",{"fg":2}],["                                                                 ",{}]],"36":[["      ternary operator                                                                                                             ",{}]],"37":[["        translates YCP ternary operators as Ruby ternary operators",{"fg":2}],["                                                                 ",{}]],"38":[["      index operator                                                                                                               ",{}]],"39":[["        translates YCP index operators as `Ops",{"fg":2}],["                                                                                     ",{}]],"40":[["        translates YCP index operators as appropriate `Ops",{"fg":2}],["                                                                         ",{}]],"41":[["      `is` operator                                                                                                                ",{}]],"42":[["        translates YCP `is` operators as `Ops",{"fg":2}],["                                                                                      ",{}]],"43":[["        translates YCP `is` operators as appropriate `Ops",{"fg":2}],["                                                                          ",{}]],"44":[["      double quote operator                                                                                                        ",{}]],"45":[["        translates YCP double quote operators as Ruby lambdas",{"fg":2}],["                                                                      ",{}]],"46":[["      type conversions                                                                                                             ",{}]],"47":[["        translates YCP type conversions as `Convert",{"fg":2}],["                                                                                ",{}]],"48":[["        translates YCP type conversions from `any` as appropriate `Convert",{"fg":2}],["                                                         ",{}]],"49":[["      `_` calls                                                                                                                    ",{}]],"50":[["        translates YCP `_` calls as `_` calls",{"fg":2}],["                                                                                      ",{}]],"51":[["      builtin calls                                                                                                                ",{}]],"52":[["        translates YCP builtin calls as `Builtins",{"fg":2}],["                                                                                  ",{}]]}}],[0.051532,{"lines":{"0":[["      symbols                                                                                                                      ",{}]],"1":[["        translates YCP symbols as Ruby symbols",{"fg":2}],["                                                                                     ",{}]],"2":[["      strings                                                                                                                      ",{}]],"3":[["        translates YCP strings as Ruby strings",{"fg":2}],["                                                                                     ",{}]],"4":[["      paths                                                                                                                        ",{}]],"5":[["        translates YCP paths as `path` calls",{"fg":2}],["                                                                                       ",{}]],"6":[["      lists                                                                                                                        ",{}]],"7":[["        translates YCP lists as Ruby arrays",{"fg":2}],["                                                                                        ",{}]],"8":[["      maps                                                                                                                         ",{}]],"9":[["        translates YCP maps as Ruby hashes",{"fg":2}],["                                                                                         ",{}]],"10":[["      terms                                                                                                                        ",{}]],"11":[["        translates YCP terms as `term` calls",{"fg":2}],["                                                                                       ",{}]],"12":[["        translates some widely used terms as calls to shortcut methods instead of",{"fg":2}],["                                                  ",{}]],"13":[["        `term` calls                                                                                                               ",{"fg":2}]],"14":[["      blocks                                                                                                                       ",{}]],"15":[["        translates YCP blocks as Ruby lambdas",{"fg":2}],["                                                                                      ",{}]],"16":[["      function references                                                                                                          ",{}]],"17":[["        translates YCP function references as `fun_ref` calls",{"fg":2}],["                                                                      ",{}]],"18":[["    expressions                                                                                                                    ",{}]],"19":[["      variables                                                                                                                    ",{}]],"20":[["        translates YCP variables as Ruby variables",{"fg":2}],["                                                                                 ",{}]],"21":[["      equality operators                                                                                                           ",{}]],"22":[["        translates YCP equality operators as equivalent Ruby operators",{"fg":2}],["                                                             ",{}]],"23":[["      comparison operators                                                                                                         ",{}]],"24":[["        translates YCP comparison operators as `Ops",{"fg":2}],["                                                                                ",{}]],"25":[["      arithmetic operators                                                                                                         ",{}]],"26":[["        translates YCP arithmetic operators as equivalent Ruby operators when it is",{"fg":2}],["                                                ",{}]],"27":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"28":[["        translates YCP arithmetic operators as `Ops",{"fg":2}],["                                                                                ",{}]],"29":[["      bitwise operators                                                                                                            ",{}]],"30":[["        translates YCP bitwise operators as equivalent Ruby operators when it is",{"fg":2}],["                                                   ",{}]],"31":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"32":[["        translates YCP bitwise operators as `Ops",{"fg":2}],["                                                                                   ",{}]],"33":[["      logical operators                                                                                                            ",{}]],"34":[["        translates YCP logical operators as Ruby logical operators",{"fg":2}],["                                                                 ",{}]],"35":[["      ternary operator                                                                                                             ",{}]],"36":[["        translates YCP ternary operators as Ruby ternary operators",{"fg":2}],["                                                                 ",{}]],"37":[["      index operator                                                                                                               ",{}]],"38":[["        translates YCP index operators as `Ops",{"fg":2}],["                                                                                     ",{}]],"39":[["        translates YCP index operators as appropriate `Ops",{"fg":2}],["                                                                         ",{}]],"40":[["      `is` operator                                                                                                                ",{}]],"41":[["        translates YCP `is` operators as `Ops",{"fg":2}],["                                                                                      ",{}]],"42":[["        translates YCP `is` operators as appropriate `Ops",{"fg":2}],["                                                                          ",{}]],"43":[["      double quote operator                                                                                                        ",{}]],"44":[["        translates YCP double quote operators as Ruby lambdas",{"fg":2}],["                                                                      ",{}]],"45":[["      type conversions                                                                                                             ",{}]],"46":[["        translates YCP type conversions as `Convert",{"fg":2}],["                                                                                ",{}]],"47":[["        translates YCP type conversions from `any` as appropriate `Convert",{"fg":2}],["                                                         ",{}]],"48":[["      `_` calls                                                                                                                    ",{}]],"49":[["        translates YCP `_` calls as `_` calls",{"fg":2}],["                                                                                      ",{}]],"50":[["      builtin calls                                                                                                                ",{}]],"51":[["        translates YCP builtin calls as `Builtins",{"fg":2}],["                                                                                  ",{}]],"52":[["        handles YCP builtin calls with a block as the last argument specially",{"fg":2}],["                                                      ",{}]]}}],[0.083483,{"lines":{"0":[["      strings                                                                                                                      ",{}]],"1":[["        translates YCP strings as Ruby strings",{"fg":2}],["                                                                                     ",{}]],"2":[["      paths                                                                                                                        ",{}]],"3":[["        translates YCP paths as `path` calls",{"fg":2}],["                                                                                       ",{}]],"4":[["      lists                                                                                                                        ",{}]],"5":[["        translates YCP lists as Ruby arrays",{"fg":2}],["                                                                                        ",{}]],"6":[["      maps                                                                                                                         ",{}]],"7":[["        translates YCP maps as Ruby hashes",{"fg":2}],["                                                                                         ",{}]],"8":[["      terms                                                                                                                        ",{}]],"9":[["        translates YCP terms as `term` calls",{"fg":2}],["                                                                                       ",{}]],"10":[["        translates some widely used terms as calls to shortcut methods instead of",{"fg":2}],["                                                  ",{}]],"11":[["        `term` calls                                                                                                               ",{"fg":2}]],"12":[["      blocks                                                                                                                       ",{}]],"13":[["        translates YCP blocks as Ruby lambdas",{"fg":2}],["                                                                                      ",{}]],"14":[["      function references                                                                                                          ",{}]],"15":[["        translates YCP function references as `fun_ref` calls",{"fg":2}],["                                                                      ",{}]],"16":[["    expressions                                                                                                                    ",{}]],"17":[["      variables                                                                                                                    ",{}]],"18":[["        translates YCP variables as Ruby variables",{"fg":2}],["                                                                                 ",{}]],"19":[["      equality operators                                                                                                           ",{}]],"20":[["        translates YCP equality operators as equivalent Ruby operators",{"fg":2}],["                                                             ",{}]],"21":[["      comparison operators                                                                                                         ",{}]],"22":[["        translates YCP comparison operators as `Ops",{"fg":2}],["                                                                                ",{}]],"23":[["      arithmetic operators                                                                                                         ",{}]],"24":[["        translates YCP arithmetic operators as equivalent Ruby operators when it is",{"fg":2}],["                                                ",{}]],"25":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"26":[["        translates YCP arithmetic operators as `Ops",{"fg":2}],["                                                                                ",{}]],"27":[["      bitwise operators                                                                                                            ",{}]],"28":[["        translates YCP bitwise operators as equivalent Ruby operators when it is",{"fg":2}],["                                                   ",{}]],"29":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"30":[["        translates YCP bitwise operators as `Ops",{"fg":2}],["                                                                                   ",{}]],"31":[["      logical operators                                                                                                            ",{}]],"32":[["        translates YCP logical operators as Ruby logical operators",{"fg":2}],["                                                                 ",{}]],"33":[["      ternary operator                                                                                                             ",{}]],"34":[["        translates YCP ternary operators as Ruby ternary operators",{"fg":2}],["                                                                 ",{}]],"35":[["      index operator                                                                                                               ",{}]],"36":[["        translates YCP index operators as `Ops",{"fg":2}],["                                                                                     ",{}]],"37":[["        translates YCP index operators as appropriate `Ops",{"fg":2}],["                                                                         ",{}]],"38":[["      `is` operator                                                                                                                ",{}]],"39":[["        translates YCP `is` operators as `Ops",{"fg":2}],["                                                                                      ",{}]],"40":[["        translates YCP `is` operators as appropriate `Ops",{"fg":2}],["                                                                          ",{}]],"41":[["      double quote operator                                                                                                        ",{}]],"42":[["        translates YCP double quote operators as Ruby lambdas",{"fg":2}],["                                                                      ",{}]],"43":[["      type conversions                                                                                                             ",{}]],"44":[["        translates YCP type conversions as `Convert",{"fg":2}],["                                                                                ",{}]],"45":[["        translates YCP type conversions from `any` as appropriate `Convert",{"fg":2}],["                                                         ",{}]],"46":[["      `_` calls                                                                                                                    ",{}]],"47":[["        translates YCP `_` calls as `_` calls",{"fg":2}],["                                                                                      ",{}]],"48":[["      builtin calls                                                                                                                ",{}]],"49":[["        translates YCP builtin calls as `Builtins",{"fg":2}],["                                                                                  ",{}]],"50":[["        handles YCP builtin calls with a block as the last argument specially",{"fg":2}],["                                                      ",{}]],"51":[["        handles YCP builtin calls with a double quote expression as the last",{"fg":2}],["                                                       ",{}]],"52":[["        argument specially                                                                                                         ",{"fg":2}]]}}],[0.000123,{"lines":{"0":[["        translates YCP strings as Ruby strings",{"fg":2}],["                                                                                     ",{}]],"1":[["      paths                                                                                                                        ",{}]],"2":[["        translates YCP paths as `path` calls",{"fg":2}],["                                                                                       ",{}]],"3":[["      lists                                                                                                                        ",{}]],"4":[["        translates YCP lists as Ruby arrays",{"fg":2}],["                                                                                        ",{}]],"5":[["      maps                                                                                                                         ",{}]],"6":[["        translates YCP maps as Ruby hashes",{"fg":2}],["                                                                                         ",{}]],"7":[["      terms                                                                                                                        ",{}]],"8":[["        translates YCP terms as `term` calls",{"fg":2}],["                                                                                       ",{}]],"9":[["        translates some widely used terms as calls to shortcut methods instead of",{"fg":2}],["                                                  ",{}]],"10":[["        `term` calls                                                                                                               ",{"fg":2}]],"11":[["      blocks                                                                                                                       ",{}]],"12":[["        translates YCP blocks as Ruby lambdas",{"fg":2}],["                                                                                      ",{}]],"13":[["      function references                                                                                                          ",{}]],"14":[["        translates YCP function references as `fun_ref` calls",{"fg":2}],["                                                                      ",{}]],"15":[["    expressions                                                                                                                    ",{}]],"16":[["      variables                                                                                                                    ",{}]],"17":[["        translates YCP variables as Ruby variables",{"fg":2}],["                                                                                 ",{}]],"18":[["      equality operators                                                                                                           ",{}]],"19":[["        translates YCP equality operators as equivalent Ruby operators",{"fg":2}],["                                                             ",{}]],"20":[["      comparison operators                                                                                                         ",{}]],"21":[["        translates YCP comparison operators as `Ops",{"fg":2}],["                                                                                ",{}]],"22":[["      arithmetic operators                                                                                                         ",{}]],"23":[["        translates YCP arithmetic operators as equivalent Ruby operators when it is",{"fg":2}],["                                                ",{}]],"24":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"25":[["        translates YCP arithmetic operators as `Ops",{"fg":2}],["                                                                                ",{}]],"26":[["      bitwise operators                                                                                                            ",{}]],"27":[["        translates YCP bitwise operators as equivalent Ruby operators when it is",{"fg":2}],["                                                   ",{}]],"28":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"29":[["        translates YCP bitwise operators as `Ops",{"fg":2}],["                                                                                   ",{}]],"30":[["      logical operators                                                                                                            ",{}]],"31":[["        translates YCP logical operators as Ruby logical operators",{"fg":2}],["                                                                 ",{}]],"32":[["      ternary operator                                                                                                             ",{}]],"33":[["        translates YCP ternary operators as Ruby ternary operators",{"fg":2}],["                                                                 ",{}]],"34":[["      index operator                                                                                                               ",{}]],"35":[["        translates YCP index operators as `Ops",{"fg":2}],["                                                                                     ",{}]],"36":[["        translates YCP index operators as appropriate `Ops",{"fg":2}],["                                                                         ",{}]],"37":[["      `is` operator                                                                                                                ",{}]],"38":[["        translates YCP `is` operators as `Ops",{"fg":2}],["                                                                                      ",{}]],"39":[["        translates YCP `is` operators as appropriate `Ops",{"fg":2}],["                                                                          ",{}]],"40":[["      double quote operator                                                                                                        ",{}]],"41":[["        translates YCP double quote operators as Ruby lambdas",{"fg":2}],["                                                                      ",{}]],"42":[["      type conversions                                                                                                             ",{}]],"43":[["        translates YCP type conversions as `Convert",{"fg":2}],["                                                                                ",{}]],"44":[["        translates YCP type conversions from `any` as appropriate `Convert",{"fg":2}],["                                                         ",{}]],"45":[["      `_` calls                                                                                                                    ",{}]],"46":[["        translates YCP `_` calls as `_` calls",{"fg":2}],["                                                                                      ",{}]],"47":[["      builtin calls                                                                                                                ",{}]],"48":[["        translates YCP builtin calls as `Builtins",{"fg":2}],["                                                                                  ",{}]],"49":[["        handles YCP builtin calls with a block as the last argument specially",{"fg":2}],["                                                      ",{}]],"50":[["        handles YCP builtin calls with a double quote expression as the last",{"fg":2}],["                                                       ",{}]],"51":[["        argument specially                                                                                                         ",{"fg":2}]],"52":[["      function calls                                                                                                               ",{}]]}}],[0.061725,{"lines":{"0":[["      paths                                                                                                                        ",{}]],"1":[["        translates YCP paths as `path` calls",{"fg":2}],["                                                                                       ",{}]],"2":[["      lists                                                                                                                        ",{}]],"3":[["        translates YCP lists as Ruby arrays",{"fg":2}],["                                                                                        ",{}]],"4":[["      maps                                                                                                                         ",{}]],"5":[["        translates YCP maps as Ruby hashes",{"fg":2}],["                                                                                         ",{}]],"6":[["      terms                                                                                                                        ",{}]],"7":[["        translates YCP terms as `term` calls",{"fg":2}],["                                                                                       ",{}]],"8":[["        translates some widely used terms as calls to shortcut methods instead of",{"fg":2}],["                                                  ",{}]],"9":[["        `term` calls                                                                                                               ",{"fg":2}]],"10":[["      blocks                                                                                                                       ",{}]],"11":[["        translates YCP blocks as Ruby lambdas",{"fg":2}],["                                                                                      ",{}]],"12":[["      function references                                                                                                          ",{}]],"13":[["        translates YCP function references as `fun_ref` calls",{"fg":2}],["                                                                      ",{}]],"14":[["    expressions                                                                                                                    ",{}]],"15":[["      variables                                                                                                                    ",{}]],"16":[["        translates YCP variables as Ruby variables",{"fg":2}],["                                                                                 ",{}]],"17":[["      equality operators                                                                                                           ",{}]],"18":[["        translates YCP equality operators as equivalent Ruby operators",{"fg":2}],["                                                             ",{}]],"19":[["      comparison operators                                                                                                         ",{}]],"20":[["        translates YCP comparison operators as `Ops",{"fg":2}],["                                                                                ",{}]],"21":[["      arithmetic operators                                                                                                         ",{}]],"22":[["        translates YCP arithmetic operators as equivalent Ruby operators when it is",{"fg":2}],["                                                ",{}]],"23":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"24":[["        translates YCP arithmetic operators as `Ops",{"fg":2}],["                                                                                ",{}]],"25":[["      bitwise operators                                                                                                            ",{}]],"26":[["        translates YCP bitwise operators as equivalent Ruby operators when it is",{"fg":2}],["                                                   ",{}]],"27":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"28":[["        translates YCP bitwise operators as `Ops",{"fg":2}],["                                                                                   ",{}]],"29":[["      logical operators                                                                                                            ",{}]],"30":[["        translates YCP logical operators as Ruby logical operators",{"fg":2}],["                                                                 ",{}]],"31":[["      ternary operator                                                                                                             ",{}]],"32":[["        translates YCP ternary operators as Ruby ternary operators",{"fg":2}],["                                                                 ",{}]],"33":[["      index operator                                                                                                               ",{}]],"34":[["        translates YCP index operators as `Ops",{"fg":2}],["                                                                                     ",{}]],"35":[["        translates YCP index operators as appropriate `Ops",{"fg":2}],["                                                                         ",{}]],"36":[["      `is` operator                                                                                                                ",{}]],"37":[["        translates YCP `is` operators as `Ops",{"fg":2}],["                                                                                      ",{}]],"38":[["        translates YCP `is` operators as appropriate `Ops",{"fg":2}],["                                                                          ",{}]],"39":[["      double quote operator                                                                                                        ",{}]],"40":[["        translates YCP double quote operators as Ruby lambdas",{"fg":2}],["                                                                      ",{}]],"41":[["      type conversions                                                                                                             ",{}]],"42":[["        translates YCP type conversions as `Convert",{"fg":2}],["                                                                                ",{}]],"43":[["        translates YCP type conversions from `any` as appropriate `Convert",{"fg":2}],["                                                         ",{}]],"44":[["      `_` calls                                                                                                                    ",{}]],"45":[["        translates YCP `_` calls as `_` calls",{"fg":2}],["                                                                                      ",{}]],"46":[["      builtin calls                                                                                                                ",{}]],"47":[["        translates YCP builtin calls as `Builtins",{"fg":2}],["                                                                                  ",{}]],"48":[["        handles YCP builtin calls with a block as the last argument specially",{"fg":2}],["                                                      ",{}]],"49":[["        handles YCP builtin calls with a double quote expression as the last",{"fg":2}],["                                                       ",{}]],"50":[["        argument specially                                                                                                         ",{"fg":2}]],"51":[["      function calls                                                                                                               ",{}]],"52":[["        translates YCP function calls of toplevel functions as Ruby method calls",{"fg":2}],["                                                   ",{}]]}}],[0.058885,{"lines":{"0":[["      lists                                                                                                                        ",{}]],"1":[["        translates YCP lists as Ruby arrays",{"fg":2}],["                                                                                        ",{}]],"2":[["      maps                                                                                                                         ",{}]],"3":[["        translates YCP maps as Ruby hashes",{"fg":2}],["                                                                                         ",{}]],"4":[["      terms                                                                                                                        ",{}]],"5":[["        translates YCP terms as `term` calls",{"fg":2}],["                                                                                       ",{}]],"6":[["        translates some widely used terms as calls to shortcut methods instead of",{"fg":2}],["                                                  ",{}]],"7":[["        `term` calls                                                                                                               ",{"fg":2}]],"8":[["      blocks                                                                                                                       ",{}]],"9":[["        translates YCP blocks as Ruby lambdas",{"fg":2}],["                                                                                      ",{}]],"10":[["      function references                                                                                                          ",{}]],"11":[["        translates YCP function references as `fun_ref` calls",{"fg":2}],["                                                                      ",{}]],"12":[["    expressions                                                                                                                    ",{}]],"13":[["      variables                                                                                                                    ",{}]],"14":[["        translates YCP variables as Ruby variables",{"fg":2}],["                                                                                 ",{}]],"15":[["      equality operators                                                                                                           ",{}]],"16":[["        translates YCP equality operators as equivalent Ruby operators",{"fg":2}],["                                                             ",{}]],"17":[["      comparison operators                                                                                                         ",{}]],"18":[["        translates YCP comparison operators as `Ops",{"fg":2}],["                                                                                ",{}]],"19":[["      arithmetic operators                                                                                                         ",{}]],"20":[["        translates YCP arithmetic operators as equivalent Ruby operators when it is",{"fg":2}],["                                                ",{}]],"21":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"22":[["        translates YCP arithmetic operators as `Ops",{"fg":2}],["                                                                                ",{}]],"23":[["      bitwise operators                                                                                                            ",{}]],"24":[["        translates YCP bitwise operators as equivalent Ruby operators when it is",{"fg":2}],["                                                   ",{}]],"25":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"26":[["        translates YCP bitwise operators as `Ops",{"fg":2}],["                                                                                   ",{}]],"27":[["      logical operators                                                                                                            ",{}]],"28":[["        translates YCP logical operators as Ruby logical operators",{"fg":2}],["                                                                 ",{}]],"29":[["      ternary operator                                                                                                             ",{}]],"30":[["        translates YCP ternary operators as Ruby ternary operators",{"fg":2}],["                                                                 ",{}]],"31":[["      index operator                                                                                                               ",{}]],"32":[["        translates YCP index operators as `Ops",{"fg":2}],["                                                                                     ",{}]],"33":[["        translates YCP index operators as appropriate `Ops",{"fg":2}],["                                                                         ",{}]],"34":[["      `is` operator                                                                                                                ",{}]],"35":[["        translates YCP `is` operators as `Ops",{"fg":2}],["                                                                                      ",{}]],"36":[["        translates YCP `is` operators as appropriate `Ops",{"fg":2}],["                                                                          ",{}]],"37":[["      double quote operator                                                                                                        ",{}]],"38":[["        translates YCP double quote operators as Ruby lambdas",{"fg":2}],["                                                                      ",{}]],"39":[["      type conversions                                                                                                             ",{}]],"40":[["        translates YCP type conversions as `Convert",{"fg":2}],["                                                                                ",{}]],"41":[["        translates YCP type conversions from `any` as appropriate `Convert",{"fg":2}],["                                                         ",{}]],"42":[["      `_` calls                                                                                                                    ",{}]],"43":[["        translates YCP `_` calls as `_` calls",{"fg":2}],["                                                                                      ",{}]],"44":[["      builtin calls                                                                                                                ",{}]],"45":[["        translates YCP builtin calls as `Builtins",{"fg":2}],["                                                                                  ",{}]],"46":[["        handles YCP builtin calls with a block as the last argument specially",{"fg":2}],["                                                      ",{}]],"47":[["        handles YCP builtin calls with a double quote expression as the last",{"fg":2}],["                                                       ",{}]],"48":[["        argument specially                                                                                                         ",{"fg":2}]],"49":[["      function calls                                                                                                               ",{}]],"50":[["        translates YCP function calls of toplevel functions as Ruby method calls",{"fg":2}],["                                                   ",{}]],"51":[["        translates YCP function calls of nested functions as invoking the `call`",{"fg":2}],["                                                   ",{}]],"52":[["        method on them                                                                                                             ",{"fg":2}]]}}],[0.057613,{"lines":{"0":[["      maps                                                                                                                         ",{}]],"1":[["        translates YCP maps as Ruby hashes",{"fg":2}],["                                                                                         ",{}]],"2":[["      terms                                                                                                                        ",{}]],"3":[["        translates YCP terms as `term` calls",{"fg":2}],["                                                                                       ",{}]],"4":[["        translates some widely used terms as calls to shortcut methods instead of",{"fg":2}],["                                                  ",{}]],"5":[["        `term` calls                                                                                                               ",{"fg":2}]],"6":[["      blocks                                                                                                                       ",{}]],"7":[["        translates YCP blocks as Ruby lambdas",{"fg":2}],["                                                                                      ",{}]],"8":[["      function references                                                                                                          ",{}]],"9":[["        translates YCP function references as `fun_ref` calls",{"fg":2}],["                                                                      ",{}]],"10":[["    expressions                                                                                                                    ",{}]],"11":[["      variables                                                                                                                    ",{}]],"12":[["        translates YCP variables as Ruby variables",{"fg":2}],["                                                                                 ",{}]],"13":[["      equality operators                                                                                                           ",{}]],"14":[["        translates YCP equality operators as equivalent Ruby operators",{"fg":2}],["                                                             ",{}]],"15":[["      comparison operators                                                                                                         ",{}]],"16":[["        translates YCP comparison operators as `Ops",{"fg":2}],["                                                                                ",{}]],"17":[["      arithmetic operators                                                                                                         ",{}]],"18":[["        translates YCP arithmetic operators as equivalent Ruby operators when it is",{"fg":2}],["                                                ",{}]],"19":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"20":[["        translates YCP arithmetic operators as `Ops",{"fg":2}],["                                                                                ",{}]],"21":[["      bitwise operators                                                                                                            ",{}]],"22":[["        translates YCP bitwise operators as equivalent Ruby operators when it is",{"fg":2}],["                                                   ",{}]],"23":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"24":[["        translates YCP bitwise operators as `Ops",{"fg":2}],["                                                                                   ",{}]],"25":[["      logical operators                                                                                                            ",{}]],"26":[["        translates YCP logical operators as Ruby logical operators",{"fg":2}],["                                                                 ",{}]],"27":[["      ternary operator                                                                                                             ",{}]],"28":[["        translates YCP ternary operators as Ruby ternary operators",{"fg":2}],["                                                                 ",{}]],"29":[["      index operator                                                                                                               ",{}]],"30":[["        translates YCP index operators as `Ops",{"fg":2}],["                                                                                     ",{}]],"31":[["        translates YCP index operators as appropriate `Ops",{"fg":2}],["                                                                         ",{}]],"32":[["      `is` operator                                                                                                                ",{}]],"33":[["        translates YCP `is` operators as `Ops",{"fg":2}],["                                                                                      ",{}]],"34":[["        translates YCP `is` operators as appropriate `Ops",{"fg":2}],["                                                                          ",{}]],"35":[["      double quote operator                                                                                                        ",{}]],"36":[["        translates YCP double quote operators as Ruby lambdas",{"fg":2}],["                                                                      ",{}]],"37":[["      type conversions                                                                                                             ",{}]],"38":[["        translates YCP type conversions as `Convert",{"fg":2}],["                                                                                ",{}]],"39":[["        translates YCP type conversions from `any` as appropriate `Convert",{"fg":2}],["                                                         ",{}]],"40":[["      `_` calls                                                                                                                    ",{}]],"41":[["        translates YCP `_` calls as `_` calls",{"fg":2}],["                                                                                      ",{}]],"42":[["      builtin calls                                                                                                                ",{}]],"43":[["        translates YCP builtin calls as `Builtins",{"fg":2}],["                                                                                  ",{}]],"44":[["        handles YCP builtin calls with a block as the last argument specially",{"fg":2}],["                                                      ",{}]],"45":[["        handles YCP builtin calls with a double quote expression as the last",{"fg":2}],["                                                       ",{}]],"46":[["        argument specially                                                                                                         ",{"fg":2}]],"47":[["      function calls                                                                                                               ",{}]],"48":[["        translates YCP function calls of toplevel functions as Ruby method calls",{"fg":2}],["                                                   ",{}]],"49":[["        translates YCP function calls of nested functions as invoking the `call`",{"fg":2}],["                                                   ",{}]],"50":[["        method on them                                                                                                             ",{"fg":2}]],"51":[["        translates YCP function reference calls as invoking the `call` method on",{"fg":2}],["                                                   ",{}]],"52":[["        them                                                                                                                       ",{"fg":2}]]}}],[0.076962,{"lines":{"0":[["      terms                                                                                                                        ",{}]],"1":[["        translates YCP terms as `term` calls",{"fg":2}],["                                                                                       ",{}]],"2":[["        translates some widely used terms as calls to shortcut methods instead of",{"fg":2}],["                                                  ",{}]],"3":[["        `term` calls                                                                                                               ",{"fg":2}]],"4":[["      blocks                                                                                                                       ",{}]],"5":[["        translates YCP blocks as Ruby lambdas",{"fg":2}],["                                                                                      ",{}]],"6":[["      function references                                                                                                          ",{}]],"7":[["        translates YCP function references as `fun_ref` calls",{"fg":2}],["                                                                      ",{}]],"8":[["    expressions                                                                                                                    ",{}]],"9":[["      variables                                                                                                                    ",{}]],"10":[["        translates YCP variables as Ruby variables",{"fg":2}],["                                                                                 ",{}]],"11":[["      equality operators                                                                                                           ",{}]],"12":[["        translates YCP equality operators as equivalent Ruby operators",{"fg":2}],["                                                             ",{}]],"13":[["      comparison operators                                                                                                         ",{}]],"14":[["        translates YCP comparison operators as `Ops",{"fg":2}],["                                                                                ",{}]],"15":[["      arithmetic operators                                                                                                         ",{}]],"16":[["        translates YCP arithmetic operators as equivalent Ruby operators when it is",{"fg":2}],["                                                ",{}]],"17":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"18":[["        translates YCP arithmetic operators as `Ops",{"fg":2}],["                                                                                ",{}]],"19":[["      bitwise operators                                                                                                            ",{}]],"20":[["        translates YCP bitwise operators as equivalent Ruby operators when it is",{"fg":2}],["                                                   ",{}]],"21":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"22":[["        translates YCP bitwise operators as `Ops",{"fg":2}],["                                                                                   ",{}]],"23":[["      logical operators                                                                                                            ",{}]],"24":[["        translates YCP logical operators as Ruby logical operators",{"fg":2}],["                                                                 ",{}]],"25":[["      ternary operator                                                                                                             ",{}]],"26":[["        translates YCP ternary operators as Ruby ternary operators",{"fg":2}],["                                                                 ",{}]],"27":[["      index operator                                                                                                               ",{}]],"28":[["        translates YCP index operators as `Ops",{"fg":2}],["                                                                                     ",{}]],"29":[["        translates YCP index operators as appropriate `Ops",{"fg":2}],["                                                                         ",{}]],"30":[["      `is` operator                                                                                                                ",{}]],"31":[["        translates YCP `is` operators as `Ops",{"fg":2}],["                                                                                      ",{}]],"32":[["        translates YCP `is` operators as appropriate `Ops",{"fg":2}],["                                                                          ",{}]],"33":[["      double quote operator                                                                                                        ",{}]],"34":[["        translates YCP double quote operators as Ruby lambdas",{"fg":2}],["                                                                      ",{}]],"35":[["      type conversions                                                                                                             ",{}]],"36":[["        translates YCP type conversions as `Convert",{"fg":2}],["                                                                                ",{}]],"37":[["        translates YCP type conversions from `any` as appropriate `Convert",{"fg":2}],["                                                         ",{}]],"38":[["      `_` calls                                                                                                                    ",{}]],"39":[["        translates YCP `_` calls as `_` calls",{"fg":2}],["                                                                                      ",{}]],"40":[["      builtin calls                                                                                                                ",{}]],"41":[["        translates YCP builtin calls as `Builtins",{"fg":2}],["                                                                                  ",{}]],"42":[["        handles YCP builtin calls with a block as the last argument specially",{"fg":2}],["                                                      ",{}]],"43":[["        handles YCP builtin calls with a double quote expression as the last",{"fg":2}],["                                                       ",{}]],"44":[["        argument specially                                                                                                         ",{"fg":2}]],"45":[["      function calls                                                                                                               ",{}]],"46":[["        translates YCP function calls of toplevel functions as Ruby method calls",{"fg":2}],["                                                   ",{}]],"47":[["        translates YCP function calls of nested functions as invoking the `call`",{"fg":2}],["                                                   ",{}]],"48":[["        method on them                                                                                                             ",{"fg":2}]],"49":[["        translates YCP function reference calls as invoking the `call` method on",{"fg":2}],["                                                   ",{}]],"50":[["        them                                                                                                                       ",{"fg":2}]],"51":[["        translates YCP function calls with arguments passed by reference as",{"fg":2}],["                                                        ",{}]],"52":[["        sequences of statements that emulate YCP behavior in Ruby                                                                  ",{"fg":2}]]}}],[0.000205,{"lines":{"0":[["        translates some widely used terms as calls to shortcut methods instead of",{"fg":2}],["                                                  ",{}]],"1":[["        `term` calls                                                                                                               ",{"fg":2}]],"2":[["      blocks                                                                                                                       ",{}]],"3":[["        translates YCP blocks as Ruby lambdas",{"fg":2}],["                                                                                      ",{}]],"4":[["      function references                                                                                                          ",{}]],"5":[["        translates YCP function references as `fun_ref` calls",{"fg":2}],["                                                                      ",{}]],"6":[["    expressions                                                                                                                    ",{}]],"7":[["      variables                                                                                                                    ",{}]],"8":[["        translates YCP variables as Ruby variables",{"fg":2}],["                                                                                 ",{}]],"9":[["      equality operators                                                                                                           ",{}]],"10":[["        translates YCP equality operators as equivalent Ruby operators",{"fg":2}],["                                                             ",{}]],"11":[["      comparison operators                                                                                                         ",{}]],"12":[["        translates YCP comparison operators as `Ops",{"fg":2}],["                                                                                ",{}]],"13":[["      arithmetic operators                                                                                                         ",{}]],"14":[["        translates YCP arithmetic operators as equivalent Ruby operators when it is",{"fg":2}],["                                                ",{}]],"15":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"16":[["        translates YCP arithmetic operators as `Ops",{"fg":2}],["                                                                                ",{}]],"17":[["      bitwise operators                                                                                                            ",{}]],"18":[["        translates YCP bitwise operators as equivalent Ruby operators when it is",{"fg":2}],["                                                   ",{}]],"19":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"20":[["        translates YCP bitwise operators as `Ops",{"fg":2}],["                                                                                   ",{}]],"21":[["      logical operators                                                                                                            ",{}]],"22":[["        translates YCP logical operators as Ruby logical operators",{"fg":2}],["                                                                 ",{}]],"23":[["      ternary operator                                                                                                             ",{}]],"24":[["        translates YCP ternary operators as Ruby ternary operators",{"fg":2}],["                                                                 ",{}]],"25":[["      index operator                                                                                                               ",{}]],"26":[["        translates YCP index operators as `Ops",{"fg":2}],["                                                                                     ",{}]],"27":[["        translates YCP index operators as appropriate `Ops",{"fg":2}],["                                                                         ",{}]],"28":[["      `is` operator                                                                                                                ",{}]],"29":[["        translates YCP `is` operators as `Ops",{"fg":2}],["                                                                                      ",{}]],"30":[["        translates YCP `is` operators as appropriate `Ops",{"fg":2}],["                                                                          ",{}]],"31":[["      double quote operator                                                                                                        ",{}]],"32":[["        translates YCP double quote operators as Ruby lambdas",{"fg":2}],["                                                                      ",{}]],"33":[["      type conversions                                                                                                             ",{}]],"34":[["        translates YCP type conversions as `Convert",{"fg":2}],["                                                                                ",{}]],"35":[["        translates YCP type conversions from `any` as appropriate `Convert",{"fg":2}],["                                                         ",{}]],"36":[["      `_` calls                                                                                                                    ",{}]],"37":[["        translates YCP `_` calls as `_` calls",{"fg":2}],["                                                                                      ",{}]],"38":[["      builtin calls                                                                                                                ",{}]],"39":[["        translates YCP builtin calls as `Builtins",{"fg":2}],["                                                                                  ",{}]],"40":[["        handles YCP builtin calls with a block as the last argument specially",{"fg":2}],["                                                      ",{}]],"41":[["        handles YCP builtin calls with a double quote expression as the last",{"fg":2}],["                                                       ",{}]],"42":[["        argument specially                                                                                                         ",{"fg":2}]],"43":[["      function calls                                                                                                               ",{}]],"44":[["        translates YCP function calls of toplevel functions as Ruby method calls",{"fg":2}],["                                                   ",{}]],"45":[["        translates YCP function calls of nested functions as invoking the `call`",{"fg":2}],["                                                   ",{}]],"46":[["        method on them                                                                                                             ",{"fg":2}]],"47":[["        translates YCP function reference calls as invoking the `call` method on",{"fg":2}],["                                                   ",{}]],"48":[["        them                                                                                                                       ",{"fg":2}]],"49":[["        translates YCP function calls with arguments passed by reference as",{"fg":2}],["                                                        ",{}]],"50":[["        sequences of statements that emulate YCP behavior in Ruby                                                                  ",{"fg":2}]],"51":[["    statements                                                                                                                     ",{}]],"52":[["      assignments                                                                                                                  ",{}]]}}],[0.046725,{"lines":{"0":[["        `term` calls                                                                                                               ",{"fg":2}]],"1":[["      blocks                                                                                                                       ",{}]],"2":[["        translates YCP blocks as Ruby lambdas",{"fg":2}],["                                                                                      ",{}]],"3":[["      function references                                                                                                          ",{}]],"4":[["        translates YCP function references as `fun_ref` calls",{"fg":2}],["                                                                      ",{}]],"5":[["    expressions                                                                                                                    ",{}]],"6":[["      variables                                                                                                                    ",{}]],"7":[["        translates YCP variables as Ruby variables",{"fg":2}],["                                                                                 ",{}]],"8":[["      equality operators                                                                                                           ",{}]],"9":[["        translates YCP equality operators as equivalent Ruby operators",{"fg":2}],["                                                             ",{}]],"10":[["      comparison operators                                                                                                         ",{}]],"11":[["        translates YCP comparison operators as `Ops",{"fg":2}],["                                                                                ",{}]],"12":[["      arithmetic operators                                                                                                         ",{}]],"13":[["        translates YCP arithmetic operators as equivalent Ruby operators when it is",{"fg":2}],["                                                ",{}]],"14":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"15":[["        translates YCP arithmetic operators as `Ops",{"fg":2}],["                                                                                ",{}]],"16":[["      bitwise operators                                                                                                            ",{}]],"17":[["        translates YCP bitwise operators as equivalent Ruby operators when it is",{"fg":2}],["                                                   ",{}]],"18":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"19":[["        translates YCP bitwise operators as `Ops",{"fg":2}],["                                                                                   ",{}]],"20":[["      logical operators                                                                                                            ",{}]],"21":[["        translates YCP logical operators as Ruby logical operators",{"fg":2}],["                                                                 ",{}]],"22":[["      ternary operator                                                                                                             ",{}]],"23":[["        translates YCP ternary operators as Ruby ternary operators",{"fg":2}],["                                                                 ",{}]],"24":[["      index operator                                                                                                               ",{}]],"25":[["        translates YCP index operators as `Ops",{"fg":2}],["                                                                                     ",{}]],"26":[["        translates YCP index operators as appropriate `Ops",{"fg":2}],["                                                                         ",{}]],"27":[["      `is` operator                                                                                                                ",{}]],"28":[["        translates YCP `is` operators as `Ops",{"fg":2}],["                                                                                      ",{}]],"29":[["        translates YCP `is` operators as appropriate `Ops",{"fg":2}],["                                                                          ",{}]],"30":[["      double quote operator                                                                                                        ",{}]],"31":[["        translates YCP double quote operators as Ruby lambdas",{"fg":2}],["                                                                      ",{}]],"32":[["      type conversions                                                                                                             ",{}]],"33":[["        translates YCP type conversions as `Convert",{"fg":2}],["                                                                                ",{}]],"34":[["        translates YCP type conversions from `any` as appropriate `Convert",{"fg":2}],["                                                         ",{}]],"35":[["      `_` calls                                                                                                                    ",{}]],"36":[["        translates YCP `_` calls as `_` calls",{"fg":2}],["                                                                                      ",{}]],"37":[["      builtin calls                                                                                                                ",{}]],"38":[["        translates YCP builtin calls as `Builtins",{"fg":2}],["                                                                                  ",{}]],"39":[["        handles YCP builtin calls with a block as the last argument specially",{"fg":2}],["                                                      ",{}]],"40":[["        handles YCP builtin calls with a double quote expression as the last",{"fg":2}],["                                                       ",{}]],"41":[["        argument specially                                                                                                         ",{"fg":2}]],"42":[["      function calls                                                                                                               ",{}]],"43":[["        translates YCP function calls of toplevel functions as Ruby method calls",{"fg":2}],["                                                   ",{}]],"44":[["        translates YCP function calls of nested functions as invoking the `call`",{"fg":2}],["                                                   ",{}]],"45":[["        method on them                                                                                                             ",{"fg":2}]],"46":[["        translates YCP function reference calls as invoking the `call` method on",{"fg":2}],["                                                   ",{}]],"47":[["        them                                                                                                                       ",{"fg":2}]],"48":[["        translates YCP function calls with arguments passed by reference as",{"fg":2}],["                                                        ",{}]],"49":[["        sequences of statements that emulate YCP behavior in Ruby                                                                  ",{"fg":2}]],"50":[["    statements                                                                                                                     ",{}]],"51":[["      assignments                                                                                                                  ",{}]],"52":[["        translates simple YCP assignments as Ruby assignments",{"fg":2}],["                                                                      ",{}]]}}],[0.09196699999999999,{"lines":{"0":[["      blocks                                                                                                                       ",{}]],"1":[["        translates YCP blocks as Ruby lambdas",{"fg":2}],["                                                                                      ",{}]],"2":[["      function references                                                                                                          ",{}]],"3":[["        translates YCP function references as `fun_ref` calls",{"fg":2}],["                                                                      ",{}]],"4":[["    expressions                                                                                                                    ",{}]],"5":[["      variables                                                                                                                    ",{}]],"6":[["        translates YCP variables as Ruby variables",{"fg":2}],["                                                                                 ",{}]],"7":[["      equality operators                                                                                                           ",{}]],"8":[["        translates YCP equality operators as equivalent Ruby operators",{"fg":2}],["                                                             ",{}]],"9":[["      comparison operators                                                                                                         ",{}]],"10":[["        translates YCP comparison operators as `Ops",{"fg":2}],["                                                                                ",{}]],"11":[["      arithmetic operators                                                                                                         ",{}]],"12":[["        translates YCP arithmetic operators as equivalent Ruby operators when it is",{"fg":2}],["                                                ",{}]],"13":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"14":[["        translates YCP arithmetic operators as `Ops",{"fg":2}],["                                                                                ",{}]],"15":[["      bitwise operators                                                                                                            ",{}]],"16":[["        translates YCP bitwise operators as equivalent Ruby operators when it is",{"fg":2}],["                                                   ",{}]],"17":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"18":[["        translates YCP bitwise operators as `Ops",{"fg":2}],["                                                                                   ",{}]],"19":[["      logical operators                                                                                                            ",{}]],"20":[["        translates YCP logical operators as Ruby logical operators",{"fg":2}],["                                                                 ",{}]],"21":[["      ternary operator                                                                                                             ",{}]],"22":[["        translates YCP ternary operators as Ruby ternary operators",{"fg":2}],["                                                                 ",{}]],"23":[["      index operator                                                                                                               ",{}]],"24":[["        translates YCP index operators as `Ops",{"fg":2}],["                                                                                     ",{}]],"25":[["        translates YCP index operators as appropriate `Ops",{"fg":2}],["                                                                         ",{}]],"26":[["      `is` operator                                                                                                                ",{}]],"27":[["        translates YCP `is` operators as `Ops",{"fg":2}],["                                                                                      ",{}]],"28":[["        translates YCP `is` operators as appropriate `Ops",{"fg":2}],["                                                                          ",{}]],"29":[["      double quote operator                                                                                                        ",{}]],"30":[["        translates YCP double quote operators as Ruby lambdas",{"fg":2}],["                                                                      ",{}]],"31":[["      type conversions                                                                                                             ",{}]],"32":[["        translates YCP type conversions as `Convert",{"fg":2}],["                                                                                ",{}]],"33":[["        translates YCP type conversions from `any` as appropriate `Convert",{"fg":2}],["                                                         ",{}]],"34":[["      `_` calls                                                                                                                    ",{}]],"35":[["        translates YCP `_` calls as `_` calls",{"fg":2}],["                                                                                      ",{}]],"36":[["      builtin calls                                                                                                                ",{}]],"37":[["        translates YCP builtin calls as `Builtins",{"fg":2}],["                                                                                  ",{}]],"38":[["        handles YCP builtin calls with a block as the last argument specially",{"fg":2}],["                                                      ",{}]],"39":[["        handles YCP builtin calls with a double quote expression as the last",{"fg":2}],["                                                       ",{}]],"40":[["        argument specially                                                                                                         ",{"fg":2}]],"41":[["      function calls                                                                                                               ",{}]],"42":[["        translates YCP function calls of toplevel functions as Ruby method calls",{"fg":2}],["                                                   ",{}]],"43":[["        translates YCP function calls of nested functions as invoking the `call`",{"fg":2}],["                                                   ",{}]],"44":[["        method on them                                                                                                             ",{"fg":2}]],"45":[["        translates YCP function reference calls as invoking the `call` method on",{"fg":2}],["                                                   ",{}]],"46":[["        them                                                                                                                       ",{"fg":2}]],"47":[["        translates YCP function calls with arguments passed by reference as",{"fg":2}],["                                                        ",{}]],"48":[["        sequences of statements that emulate YCP behavior in Ruby                                                                  ",{"fg":2}]],"49":[["    statements                                                                                                                     ",{}]],"50":[["      assignments                                                                                                                  ",{}]],"51":[["        translates simple YCP assignments as Ruby assignments",{"fg":2}],["                                                                      ",{}]],"52":[["        translates YCP assignments with brackets as `Ops",{"fg":2}],["                                                                           ",{}]]}}],[6.499999999999999e-05,{"lines":{"0":[["        translates YCP blocks as Ruby lambdas",{"fg":2}],["                                                                                      ",{}]],"1":[["      function references                                                                                                          ",{}]],"2":[["        translates YCP function references as `fun_ref` calls",{"fg":2}],["                                                                      ",{}]],"3":[["    expressions                                                                                                                    ",{}]],"4":[["      variables                                                                                                                    ",{}]],"5":[["        translates YCP variables as Ruby variables",{"fg":2}],["                                                                                 ",{}]],"6":[["      equality operators                                                                                                           ",{}]],"7":[["        translates YCP equality operators as equivalent Ruby operators",{"fg":2}],["                                                             ",{}]],"8":[["      comparison operators                                                                                                         ",{}]],"9":[["        translates YCP comparison operators as `Ops",{"fg":2}],["                                                                                ",{}]],"10":[["      arithmetic operators                                                                                                         ",{}]],"11":[["        translates YCP arithmetic operators as equivalent Ruby operators when it is",{"fg":2}],["                                                ",{}]],"12":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"13":[["        translates YCP arithmetic operators as `Ops",{"fg":2}],["                                                                                ",{}]],"14":[["      bitwise operators                                                                                                            ",{}]],"15":[["        translates YCP bitwise operators as equivalent Ruby operators when it is",{"fg":2}],["                                                   ",{}]],"16":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"17":[["        translates YCP bitwise operators as `Ops",{"fg":2}],["                                                                                   ",{}]],"18":[["      logical operators                                                                                                            ",{}]],"19":[["        translates YCP logical operators as Ruby logical operators",{"fg":2}],["                                                                 ",{}]],"20":[["      ternary operator                                                                                                             ",{}]],"21":[["        translates YCP ternary operators as Ruby ternary operators",{"fg":2}],["                                                                 ",{}]],"22":[["      index operator                                                                                                               ",{}]],"23":[["        translates YCP index operators as `Ops",{"fg":2}],["                                                                                     ",{}]],"24":[["        translates YCP index operators as appropriate `Ops",{"fg":2}],["                                                                         ",{}]],"25":[["      `is` operator                                                                                                                ",{}]],"26":[["        translates YCP `is` operators as `Ops",{"fg":2}],["                                                                                      ",{}]],"27":[["        translates YCP `is` operators as appropriate `Ops",{"fg":2}],["                                                                          ",{}]],"28":[["      double quote operator                                                                                                        ",{}]],"29":[["        translates YCP double quote operators as Ruby lambdas",{"fg":2}],["                                                                      ",{}]],"30":[["      type conversions                                                                                                             ",{}]],"31":[["        translates YCP type conversions as `Convert",{"fg":2}],["                                                                                ",{}]],"32":[["        translates YCP type conversions from `any` as appropriate `Convert",{"fg":2}],["                                                         ",{}]],"33":[["      `_` calls                                                                                                                    ",{}]],"34":[["        translates YCP `_` calls as `_` calls",{"fg":2}],["                                                                                      ",{}]],"35":[["      builtin calls                                                                                                                ",{}]],"36":[["        translates YCP builtin calls as `Builtins",{"fg":2}],["                                                                                  ",{}]],"37":[["        handles YCP builtin calls with a block as the last argument specially",{"fg":2}],["                                                      ",{}]],"38":[["        handles YCP builtin calls with a double quote expression as the last",{"fg":2}],["                                                       ",{}]],"39":[["        argument specially                                                                                                         ",{"fg":2}]],"40":[["      function calls                                                                                                               ",{}]],"41":[["        translates YCP function calls of toplevel functions as Ruby method calls",{"fg":2}],["                                                   ",{}]],"42":[["        translates YCP function calls of nested functions as invoking the `call`",{"fg":2}],["                                                   ",{}]],"43":[["        method on them                                                                                                             ",{"fg":2}]],"44":[["        translates YCP function reference calls as invoking the `call` method on",{"fg":2}],["                                                   ",{}]],"45":[["        them                                                                                                                       ",{"fg":2}]],"46":[["        translates YCP function calls with arguments passed by reference as",{"fg":2}],["                                                        ",{}]],"47":[["        sequences of statements that emulate YCP behavior in Ruby                                                                  ",{"fg":2}]],"48":[["    statements                                                                                                                     ",{}]],"49":[["      assignments                                                                                                                  ",{}]],"50":[["        translates simple YCP assignments as Ruby assignments",{"fg":2}],["                                                                      ",{}]],"51":[["        translates YCP assignments with brackets as `Ops",{"fg":2}],["                                                                           ",{}]],"52":[["      `textdomain` statement                                                                                                       ",{}]]}}],[0.047896,{"lines":{"0":[["      function references                                                                                                          ",{}]],"1":[["        translates YCP function references as `fun_ref` calls",{"fg":2}],["                                                                      ",{}]],"2":[["    expressions                                                                                                                    ",{}]],"3":[["      variables                                                                                                                    ",{}]],"4":[["        translates YCP variables as Ruby variables",{"fg":2}],["                                                                                 ",{}]],"5":[["      equality operators                                                                                                           ",{}]],"6":[["        translates YCP equality operators as equivalent Ruby operators",{"fg":2}],["                                                             ",{}]],"7":[["      comparison operators                                                                                                         ",{}]],"8":[["        translates YCP comparison operators as `Ops",{"fg":2}],["                                                                                ",{}]],"9":[["      arithmetic operators                                                                                                         ",{}]],"10":[["        translates YCP arithmetic operators as equivalent Ruby operators when it is",{"fg":2}],["                                                ",{}]],"11":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"12":[["        translates YCP arithmetic operators as `Ops",{"fg":2}],["                                                                                ",{}]],"13":[["      bitwise operators                                                                                                            ",{}]],"14":[["        translates YCP bitwise operators as equivalent Ruby operators when it is",{"fg":2}],["                                                   ",{}]],"15":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"16":[["        translates YCP bitwise operators as `Ops",{"fg":2}],["                                                                                   ",{}]],"17":[["      logical operators                                                                                                            ",{}]],"18":[["        translates YCP logical operators as Ruby logical operators",{"fg":2}],["                                                                 ",{}]],"19":[["      ternary operator                                                                                                             ",{}]],"20":[["        translates YCP ternary operators as Ruby ternary operators",{"fg":2}],["                                                                 ",{}]],"21":[["      index operator                                                                                                               ",{}]],"22":[["        translates YCP index operators as `Ops",{"fg":2}],["                                                                                     ",{}]],"23":[["        translates YCP index operators as appropriate `Ops",{"fg":2}],["                                                                         ",{}]],"24":[["      `is` operator                                                                                                                ",{}]],"25":[["        translates YCP `is` operators as `Ops",{"fg":2}],["                                                                                      ",{}]],"26":[["        translates YCP `is` operators as appropriate `Ops",{"fg":2}],["                                                                          ",{}]],"27":[["      double quote operator                                                                                                        ",{}]],"28":[["        translates YCP double quote operators as Ruby lambdas",{"fg":2}],["                                                                      ",{}]],"29":[["      type conversions                                                                                                             ",{}]],"30":[["        translates YCP type conversions as `Convert",{"fg":2}],["                                                                                ",{}]],"31":[["        translates YCP type conversions from `any` as appropriate `Convert",{"fg":2}],["                                                         ",{}]],"32":[["      `_` calls                                                                                                                    ",{}]],"33":[["        translates YCP `_` calls as `_` calls",{"fg":2}],["                                                                                      ",{}]],"34":[["      builtin calls                                                                                                                ",{}]],"35":[["        translates YCP builtin calls as `Builtins",{"fg":2}],["                                                                                  ",{}]],"36":[["        handles YCP builtin calls with a block as the last argument specially",{"fg":2}],["                                                      ",{}]],"37":[["        handles YCP builtin calls with a double quote expression as the last",{"fg":2}],["                                                       ",{}]],"38":[["        argument specially                                                                                                         ",{"fg":2}]],"39":[["      function calls                                                                                                               ",{}]],"40":[["        translates YCP function calls of toplevel functions as Ruby method calls",{"fg":2}],["                                                   ",{}]],"41":[["        translates YCP function calls of nested functions as invoking the `call`",{"fg":2}],["                                                   ",{}]],"42":[["        method on them                                                                                                             ",{"fg":2}]],"43":[["        translates YCP function reference calls as invoking the `call` method on",{"fg":2}],["                                                   ",{}]],"44":[["        them                                                                                                                       ",{"fg":2}]],"45":[["        translates YCP function calls with arguments passed by reference as",{"fg":2}],["                                                        ",{}]],"46":[["        sequences of statements that emulate YCP behavior in Ruby                                                                  ",{"fg":2}]],"47":[["    statements                                                                                                                     ",{}]],"48":[["      assignments                                                                                                                  ",{}]],"49":[["        translates simple YCP assignments as Ruby assignments",{"fg":2}],["                                                                      ",{}]],"50":[["        translates YCP assignments with brackets as `Ops",{"fg":2}],["                                                                           ",{}]],"51":[["      `textdomain` statement                                                                                                       ",{}]],"52":[["        translates YCP `textdomain` statements as `textdomain` calls",{"fg":2}],["                                                               ",{}]]}}],[0.000146,{"lines":{"0":[["        translates YCP function references as `fun_ref` calls",{"fg":2}],["                                                                      ",{}]],"1":[["    expressions                                                                                                                    ",{}]],"2":[["      variables                                                                                                                    ",{}]],"3":[["        translates YCP variables as Ruby variables",{"fg":2}],["                                                                                 ",{}]],"4":[["      equality operators                                                                                                           ",{}]],"5":[["        translates YCP equality operators as equivalent Ruby operators",{"fg":2}],["                                                             ",{}]],"6":[["      comparison operators                                                                                                         ",{}]],"7":[["        translates YCP comparison operators as `Ops",{"fg":2}],["                                                                                ",{}]],"8":[["      arithmetic operators                                                                                                         ",{}]],"9":[["        translates YCP arithmetic operators as equivalent Ruby operators when it is",{"fg":2}],["                                                ",{}]],"10":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"11":[["        translates YCP arithmetic operators as `Ops",{"fg":2}],["                                                                                ",{}]],"12":[["      bitwise operators                                                                                                            ",{}]],"13":[["        translates YCP bitwise operators as equivalent Ruby operators when it is",{"fg":2}],["                                                   ",{}]],"14":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"15":[["        translates YCP bitwise operators as `Ops",{"fg":2}],["                                                                                   ",{}]],"16":[["      logical operators                                                                                                            ",{}]],"17":[["        translates YCP logical operators as Ruby logical operators",{"fg":2}],["                                                                 ",{}]],"18":[["      ternary operator                                                                                                             ",{}]],"19":[["        translates YCP ternary operators as Ruby ternary operators",{"fg":2}],["                                                                 ",{}]],"20":[["      index operator                                                                                                               ",{}]],"21":[["        translates YCP index operators as `Ops",{"fg":2}],["                                                                                     ",{}]],"22":[["        translates YCP index operators as appropriate `Ops",{"fg":2}],["                                                                         ",{}]],"23":[["      `is` operator                                                                                                                ",{}]],"24":[["        translates YCP `is` operators as `Ops",{"fg":2}],["                                                                                      ",{}]],"25":[["        translates YCP `is` operators as appropriate `Ops",{"fg":2}],["                                                                          ",{}]],"26":[["      double quote operator                                                                                                        ",{}]],"27":[["        translates YCP double quote operators as Ruby lambdas",{"fg":2}],["                                                                      ",{}]],"28":[["      type conversions                                                                                                             ",{}]],"29":[["        translates YCP type conversions as `Convert",{"fg":2}],["                                                                                ",{}]],"30":[["        translates YCP type conversions from `any` as appropriate `Convert",{"fg":2}],["                                                         ",{}]],"31":[["      `_` calls                                                                                                                    ",{}]],"32":[["        translates YCP `_` calls as `_` calls",{"fg":2}],["                                                                                      ",{}]],"33":[["      builtin calls                                                                                                                ",{}]],"34":[["        translates YCP builtin calls as `Builtins",{"fg":2}],["                                                                                  ",{}]],"35":[["        handles YCP builtin calls with a block as the last argument specially",{"fg":2}],["                                                      ",{}]],"36":[["        handles YCP builtin calls with a double quote expression as the last",{"fg":2}],["                                                       ",{}]],"37":[["        argument specially                                                                                                         ",{"fg":2}]],"38":[["      function calls                                                                                                               ",{}]],"39":[["        translates YCP function calls of toplevel functions as Ruby method calls",{"fg":2}],["                                                   ",{}]],"40":[["        translates YCP function calls of nested functions as invoking the `call`",{"fg":2}],["                                                   ",{}]],"41":[["        method on them                                                                                                             ",{"fg":2}]],"42":[["        translates YCP function reference calls as invoking the `call` method on",{"fg":2}],["                                                   ",{}]],"43":[["        them                                                                                                                       ",{"fg":2}]],"44":[["        translates YCP function calls with arguments passed by reference as",{"fg":2}],["                                                        ",{}]],"45":[["        sequences of statements that emulate YCP behavior in Ruby                                                                  ",{"fg":2}]],"46":[["    statements                                                                                                                     ",{}]],"47":[["      assignments                                                                                                                  ",{}]],"48":[["        translates simple YCP assignments as Ruby assignments",{"fg":2}],["                                                                      ",{}]],"49":[["        translates YCP assignments with brackets as `Ops",{"fg":2}],["                                                                           ",{}]],"50":[["      `textdomain` statement                                                                                                       ",{}]],"51":[["        translates YCP `textdomain` statements as `textdomain` calls",{"fg":2}],["                                                               ",{}]],"52":[["      `import` statement                                                                                                           ",{}]]}}],[0.046953,{"lines":{"0":[["      variables                                                                                                                    ",{}]],"1":[["        translates YCP variables as Ruby variables",{"fg":2}],["                                                                                 ",{}]],"2":[["      equality operators                                                                                                           ",{}]],"3":[["        translates YCP equality operators as equivalent Ruby operators",{"fg":2}],["                                                             ",{}]],"4":[["      comparison operators                                                                                                         ",{}]],"5":[["        translates YCP comparison operators as `Ops",{"fg":2}],["                                                                                ",{}]],"6":[["      arithmetic operators                                                                                                         ",{}]],"7":[["        translates YCP arithmetic operators as equivalent Ruby operators when it is",{"fg":2}],["                                                ",{}]],"8":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"9":[["        translates YCP arithmetic operators as `Ops",{"fg":2}],["                                                                                ",{}]],"10":[["      bitwise operators                                                                                                            ",{}]],"11":[["        translates YCP bitwise operators as equivalent Ruby operators when it is",{"fg":2}],["                                                   ",{}]],"12":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"13":[["        translates YCP bitwise operators as `Ops",{"fg":2}],["                                                                                   ",{}]],"14":[["      logical operators                                                                                                            ",{}]],"15":[["        translates YCP logical operators as Ruby logical operators",{"fg":2}],["                                                                 ",{}]],"16":[["      ternary operator                                                                                                             ",{}]],"17":[["        translates YCP ternary operators as Ruby ternary operators",{"fg":2}],["                                                                 ",{}]],"18":[["      index operator                                                                                                               ",{}]],"19":[["        translates YCP index operators as `Ops",{"fg":2}],["                                                                                     ",{}]],"20":[["        translates YCP index operators as appropriate `Ops",{"fg":2}],["                                                                         ",{}]],"21":[["      `is` operator                                                                                                                ",{}]],"22":[["        translates YCP `is` operators as `Ops",{"fg":2}],["                                                                                      ",{}]],"23":[["        translates YCP `is` operators as appropriate `Ops",{"fg":2}],["                                                                          ",{}]],"24":[["      double quote operator                                                                                                        ",{}]],"25":[["        translates YCP double quote operators as Ruby lambdas",{"fg":2}],["                                                                      ",{}]],"26":[["      type conversions                                                                                                             ",{}]],"27":[["        translates YCP type conversions as `Convert",{"fg":2}],["                                                                                ",{}]],"28":[["        translates YCP type conversions from `any` as appropriate `Convert",{"fg":2}],["                                                         ",{}]],"29":[["      `_` calls                                                                                                                    ",{}]],"30":[["        translates YCP `_` calls as `_` calls",{"fg":2}],["                                                                                      ",{}]],"31":[["      builtin calls                                                                                                                ",{}]],"32":[["        translates YCP builtin calls as `Builtins",{"fg":2}],["                                                                                  ",{}]],"33":[["        handles YCP builtin calls with a block as the last argument specially",{"fg":2}],["                                                      ",{}]],"34":[["        handles YCP builtin calls with a double quote expression as the last",{"fg":2}],["                                                       ",{}]],"35":[["        argument specially                                                                                                         ",{"fg":2}]],"36":[["      function calls                                                                                                               ",{}]],"37":[["        translates YCP function calls of toplevel functions as Ruby method calls",{"fg":2}],["                                                   ",{}]],"38":[["        translates YCP function calls of nested functions as invoking the `call`",{"fg":2}],["                                                   ",{}]],"39":[["        method on them                                                                                                             ",{"fg":2}]],"40":[["        translates YCP function reference calls as invoking the `call` method on",{"fg":2}],["                                                   ",{}]],"41":[["        them                                                                                                                       ",{"fg":2}]],"42":[["        translates YCP function calls with arguments passed by reference as",{"fg":2}],["                                                        ",{}]],"43":[["        sequences of statements that emulate YCP behavior in Ruby                                                                  ",{"fg":2}]],"44":[["    statements                                                                                                                     ",{}]],"45":[["      assignments                                                                                                                  ",{}]],"46":[["        translates simple YCP assignments as Ruby assignments",{"fg":2}],["                                                                      ",{}]],"47":[["        translates YCP assignments with brackets as `Ops",{"fg":2}],["                                                                           ",{}]],"48":[["      `textdomain` statement                                                                                                       ",{}]],"49":[["        translates YCP `textdomain` statements as `textdomain` calls",{"fg":2}],["                                                               ",{}]],"50":[["      `import` statement                                                                                                           ",{}]],"51":[["        translates YCP `import` statements as `Yast",{"fg":2}],["                                                                                ",{}]],"52":[["      `include` statement                                                                                                          ",{}]]}}],[0.045227,{"lines":{"0":[["        translates YCP variables as Ruby variables",{"fg":2}],["                                                                                 ",{}]],"1":[["      equality operators                                                                                                           ",{}]],"2":[["        translates YCP equality operators as equivalent Ruby operators",{"fg":2}],["                                                             ",{}]],"3":[["      comparison operators                                                                                                         ",{}]],"4":[["        translates YCP comparison operators as `Ops",{"fg":2}],["                                                                                ",{}]],"5":[["      arithmetic operators                                                                                                         ",{}]],"6":[["        translates YCP arithmetic operators as equivalent Ruby operators when it is",{"fg":2}],["                                                ",{}]],"7":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"8":[["        translates YCP arithmetic operators as `Ops",{"fg":2}],["                                                                                ",{}]],"9":[["      bitwise operators                                                                                                            ",{}]],"10":[["        translates YCP bitwise operators as equivalent Ruby operators when it is",{"fg":2}],["                                                   ",{}]],"11":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"12":[["        translates YCP bitwise operators as `Ops",{"fg":2}],["                                                                                   ",{}]],"13":[["      logical operators                                                                                                            ",{}]],"14":[["        translates YCP logical operators as Ruby logical operators",{"fg":2}],["                                                                 ",{}]],"15":[["      ternary operator                                                                                                             ",{}]],"16":[["        translates YCP ternary operators as Ruby ternary operators",{"fg":2}],["                                                                 ",{}]],"17":[["      index operator                                                                                                               ",{}]],"18":[["        translates YCP index operators as `Ops",{"fg":2}],["                                                                                     ",{}]],"19":[["        translates YCP index operators as appropriate `Ops",{"fg":2}],["                                                                         ",{}]],"20":[["      `is` operator                                                                                                                ",{}]],"21":[["        translates YCP `is` operators as `Ops",{"fg":2}],["                                                                                      ",{}]],"22":[["        translates YCP `is` operators as appropriate `Ops",{"fg":2}],["                                                                          ",{}]],"23":[["      double quote operator                                                                                                        ",{}]],"24":[["        translates YCP double quote operators as Ruby lambdas",{"fg":2}],["                                                                      ",{}]],"25":[["      type conversions                                                                                                             ",{}]],"26":[["        translates YCP type conversions as `Convert",{"fg":2}],["                                                                                ",{}]],"27":[["        translates YCP type conversions from `any` as appropriate `Convert",{"fg":2}],["                                                         ",{}]],"28":[["      `_` calls                                                                                                                    ",{}]],"29":[["        translates YCP `_` calls as `_` calls",{"fg":2}],["                                                                                      ",{}]],"30":[["      builtin calls                                                                                                                ",{}]],"31":[["        translates YCP builtin calls as `Builtins",{"fg":2}],["                                                                                  ",{}]],"32":[["        handles YCP builtin calls with a block as the last argument specially",{"fg":2}],["                                                      ",{}]],"33":[["        handles YCP builtin calls with a double quote expression as the last",{"fg":2}],["                                                       ",{}]],"34":[["        argument specially                                                                                                         ",{"fg":2}]],"35":[["      function calls                                                                                                               ",{}]],"36":[["        translates YCP function calls of toplevel functions as Ruby method calls",{"fg":2}],["                                                   ",{}]],"37":[["        translates YCP function calls of nested functions as invoking the `call`",{"fg":2}],["                                                   ",{}]],"38":[["        method on them                                                                                                             ",{"fg":2}]],"39":[["        translates YCP function reference calls as invoking the `call` method on",{"fg":2}],["                                                   ",{}]],"40":[["        them                                                                                                                       ",{"fg":2}]],"41":[["        translates YCP function calls with arguments passed by reference as",{"fg":2}],["                                                        ",{}]],"42":[["        sequences of statements that emulate YCP behavior in Ruby                                                                  ",{"fg":2}]],"43":[["    statements                                                                                                                     ",{}]],"44":[["      assignments                                                                                                                  ",{}]],"45":[["        translates simple YCP assignments as Ruby assignments",{"fg":2}],["                                                                      ",{}]],"46":[["        translates YCP assignments with brackets as `Ops",{"fg":2}],["                                                                           ",{}]],"47":[["      `textdomain` statement                                                                                                       ",{}]],"48":[["        translates YCP `textdomain` statements as `textdomain` calls",{"fg":2}],["                                                               ",{}]],"49":[["      `import` statement                                                                                                           ",{}]],"50":[["        translates YCP `import` statements as `Yast",{"fg":2}],["                                                                                ",{}]],"51":[["      `include` statement                                                                                                          ",{}]],"52":[["        translates YCP `include` statements as `Yast",{"fg":2}],["                                                                               ",{}]]}}],[0.00013,{"lines":{"0":[["      equality operators                                                                                                           ",{}]],"1":[["        translates YCP equality operators as equivalent Ruby operators",{"fg":2}],["                                                             ",{}]],"2":[["      comparison operators                                                                                                         ",{}]],"3":[["        translates YCP comparison operators as `Ops",{"fg":2}],["                                                                                ",{}]],"4":[["      arithmetic operators                                                                                                         ",{}]],"5":[["        translates YCP arithmetic operators as equivalent Ruby operators when it is",{"fg":2}],["                                                ",{}]],"6":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"7":[["        translates YCP arithmetic operators as `Ops",{"fg":2}],["                                                                                ",{}]],"8":[["      bitwise operators                                                                                                            ",{}]],"9":[["        translates YCP bitwise operators as equivalent Ruby operators when it is",{"fg":2}],["                                                   ",{}]],"10":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"11":[["        translates YCP bitwise operators as `Ops",{"fg":2}],["                                                                                   ",{}]],"12":[["      logical operators                                                                                                            ",{}]],"13":[["        translates YCP logical operators as Ruby logical operators",{"fg":2}],["                                                                 ",{}]],"14":[["      ternary operator                                                                                                             ",{}]],"15":[["        translates YCP ternary operators as Ruby ternary operators",{"fg":2}],["                                                                 ",{}]],"16":[["      index operator                                                                                                               ",{}]],"17":[["        translates YCP index operators as `Ops",{"fg":2}],["                                                                                     ",{}]],"18":[["        translates YCP index operators as appropriate `Ops",{"fg":2}],["                                                                         ",{}]],"19":[["      `is` operator                                                                                                                ",{}]],"20":[["        translates YCP `is` operators as `Ops",{"fg":2}],["                                                                                      ",{}]],"21":[["        translates YCP `is` operators as appropriate `Ops",{"fg":2}],["                                                                          ",{}]],"22":[["      double quote operator                                                                                                        ",{}]],"23":[["        translates YCP double quote operators as Ruby lambdas",{"fg":2}],["                                                                      ",{}]],"24":[["      type conversions                                                                                                             ",{}]],"25":[["        translates YCP type conversions as `Convert",{"fg":2}],["                                                                                ",{}]],"26":[["        translates YCP type conversions from `any` as appropriate `Convert",{"fg":2}],["                                                         ",{}]],"27":[["      `_` calls                                                                                                                    ",{}]],"28":[["        translates YCP `_` calls as `_` calls",{"fg":2}],["                                                                                      ",{}]],"29":[["      builtin calls                                                                                                                ",{}]],"30":[["        translates YCP builtin calls as `Builtins",{"fg":2}],["                                                                                  ",{}]],"31":[["        handles YCP builtin calls with a block as the last argument specially",{"fg":2}],["                                                      ",{}]],"32":[["        handles YCP builtin calls with a double quote expression as the last",{"fg":2}],["                                                       ",{}]],"33":[["        argument specially                                                                                                         ",{"fg":2}]],"34":[["      function calls                                                                                                               ",{}]],"35":[["        translates YCP function calls of toplevel functions as Ruby method calls",{"fg":2}],["                                                   ",{}]],"36":[["        translates YCP function calls of nested functions as invoking the `call`",{"fg":2}],["                                                   ",{}]],"37":[["        method on them                                                                                                             ",{"fg":2}]],"38":[["        translates YCP function reference calls as invoking the `call` method on",{"fg":2}],["                                                   ",{}]],"39":[["        them                                                                                                                       ",{"fg":2}]],"40":[["        translates YCP function calls with arguments passed by reference as",{"fg":2}],["                                                        ",{}]],"41":[["        sequences of statements that emulate YCP behavior in Ruby                                                                  ",{"fg":2}]],"42":[["    statements                                                                                                                     ",{}]],"43":[["      assignments                                                                                                                  ",{}]],"44":[["        translates simple YCP assignments as Ruby assignments",{"fg":2}],["                                                                      ",{}]],"45":[["        translates YCP assignments with brackets as `Ops",{"fg":2}],["                                                                           ",{}]],"46":[["      `textdomain` statement                                                                                                       ",{}]],"47":[["        translates YCP `textdomain` statements as `textdomain` calls",{"fg":2}],["                                                               ",{}]],"48":[["      `import` statement                                                                                                           ",{}]],"49":[["        translates YCP `import` statements as `Yast",{"fg":2}],["                                                                                ",{}]],"50":[["      `include` statement                                                                                                          ",{}]],"51":[["        translates YCP `include` statements as `Yast",{"fg":2}],["                                                                               ",{}]],"52":[["      `return` statement                                                                                                           ",{}]]}}],[0.050182,{"lines":{"0":[["      comparison operators                                                                                                         ",{}]],"1":[["        translates YCP comparison operators as `Ops",{"fg":2}],["                                                                                ",{}]],"2":[["      arithmetic operators                                                                                                         ",{}]],"3":[["        translates YCP arithmetic operators as equivalent Ruby operators when it is",{"fg":2}],["                                                ",{}]],"4":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"5":[["        translates YCP arithmetic operators as `Ops",{"fg":2}],["                                                                                ",{}]],"6":[["      bitwise operators                                                                                                            ",{}]],"7":[["        translates YCP bitwise operators as equivalent Ruby operators when it is",{"fg":2}],["                                                   ",{}]],"8":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"9":[["        translates YCP bitwise operators as `Ops",{"fg":2}],["                                                                                   ",{}]],"10":[["      logical operators                                                                                                            ",{}]],"11":[["        translates YCP logical operators as Ruby logical operators",{"fg":2}],["                                                                 ",{}]],"12":[["      ternary operator                                                                                                             ",{}]],"13":[["        translates YCP ternary operators as Ruby ternary operators",{"fg":2}],["                                                                 ",{}]],"14":[["      index operator                                                                                                               ",{}]],"15":[["        translates YCP index operators as `Ops",{"fg":2}],["                                                                                     ",{}]],"16":[["        translates YCP index operators as appropriate `Ops",{"fg":2}],["                                                                         ",{}]],"17":[["      `is` operator                                                                                                                ",{}]],"18":[["        translates YCP `is` operators as `Ops",{"fg":2}],["                                                                                      ",{}]],"19":[["        translates YCP `is` operators as appropriate `Ops",{"fg":2}],["                                                                          ",{}]],"20":[["      double quote operator                                                                                                        ",{}]],"21":[["        translates YCP double quote operators as Ruby lambdas",{"fg":2}],["                                                                      ",{}]],"22":[["      type conversions                                                                                                             ",{}]],"23":[["        translates YCP type conversions as `Convert",{"fg":2}],["                                                                                ",{}]],"24":[["        translates YCP type conversions from `any` as appropriate `Convert",{"fg":2}],["                                                         ",{}]],"25":[["      `_` calls                                                                                                                    ",{}]],"26":[["        translates YCP `_` calls as `_` calls",{"fg":2}],["                                                                                      ",{}]],"27":[["      builtin calls                                                                                                                ",{}]],"28":[["        translates YCP builtin calls as `Builtins",{"fg":2}],["                                                                                  ",{}]],"29":[["        handles YCP builtin calls with a block as the last argument specially",{"fg":2}],["                                                      ",{}]],"30":[["        handles YCP builtin calls with a double quote expression as the last",{"fg":2}],["                                                       ",{}]],"31":[["        argument specially                                                                                                         ",{"fg":2}]],"32":[["      function calls                                                                                                               ",{}]],"33":[["        translates YCP function calls of toplevel functions as Ruby method calls",{"fg":2}],["                                                   ",{}]],"34":[["        translates YCP function calls of nested functions as invoking the `call`",{"fg":2}],["                                                   ",{}]],"35":[["        method on them                                                                                                             ",{"fg":2}]],"36":[["        translates YCP function reference calls as invoking the `call` method on",{"fg":2}],["                                                   ",{}]],"37":[["        them                                                                                                                       ",{"fg":2}]],"38":[["        translates YCP function calls with arguments passed by reference as",{"fg":2}],["                                                        ",{}]],"39":[["        sequences of statements that emulate YCP behavior in Ruby                                                                  ",{"fg":2}]],"40":[["    statements                                                                                                                     ",{}]],"41":[["      assignments                                                                                                                  ",{}]],"42":[["        translates simple YCP assignments as Ruby assignments",{"fg":2}],["                                                                      ",{}]],"43":[["        translates YCP assignments with brackets as `Ops",{"fg":2}],["                                                                           ",{}]],"44":[["      `textdomain` statement                                                                                                       ",{}]],"45":[["        translates YCP `textdomain` statements as `textdomain` calls",{"fg":2}],["                                                               ",{}]],"46":[["      `import` statement                                                                                                           ",{}]],"47":[["        translates YCP `import` statements as `Yast",{"fg":2}],["                                                                                ",{}]],"48":[["      `include` statement                                                                                                          ",{}]],"49":[["        translates YCP `include` statements as `Yast",{"fg":2}],["                                                                               ",{}]],"50":[["      `return` statement                                                                                                           ",{}]],"51":[["        translates YCP `return` statements inside functions as Ruby `return`",{"fg":2}],["                                                       ",{}]],"52":[["        statements                                                                                                                 ",{"fg":2}]]}}],[0.054847,{"lines":{"0":[["        translates YCP comparison operators as `Ops",{"fg":2}],["                                                                                ",{}]],"1":[["      arithmetic operators                                                                                                         ",{}]],"2":[["        translates YCP arithmetic operators as equivalent Ruby operators when it is",{"fg":2}],["                                                ",{}]],"3":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"4":[["        translates YCP arithmetic operators as `Ops",{"fg":2}],["                                                                                ",{}]],"5":[["      bitwise operators                                                                                                            ",{}]],"6":[["        translates YCP bitwise operators as equivalent Ruby operators when it is",{"fg":2}],["                                                   ",{}]],"7":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"8":[["        translates YCP bitwise operators as `Ops",{"fg":2}],["                                                                                   ",{}]],"9":[["      logical operators                                                                                                            ",{}]],"10":[["        translates YCP logical operators as Ruby logical operators",{"fg":2}],["                                                                 ",{}]],"11":[["      ternary operator                                                                                                             ",{}]],"12":[["        translates YCP ternary operators as Ruby ternary operators",{"fg":2}],["                                                                 ",{}]],"13":[["      index operator                                                                                                               ",{}]],"14":[["        translates YCP index operators as `Ops",{"fg":2}],["                                                                                     ",{}]],"15":[["        translates YCP index operators as appropriate `Ops",{"fg":2}],["                                                                         ",{}]],"16":[["      `is` operator                                                                                                                ",{}]],"17":[["        translates YCP `is` operators as `Ops",{"fg":2}],["                                                                                      ",{}]],"18":[["        translates YCP `is` operators as appropriate `Ops",{"fg":2}],["                                                                          ",{}]],"19":[["      double quote operator                                                                                                        ",{}]],"20":[["        translates YCP double quote operators as Ruby lambdas",{"fg":2}],["                                                                      ",{}]],"21":[["      type conversions                                                                                                             ",{}]],"22":[["        translates YCP type conversions as `Convert",{"fg":2}],["                                                                                ",{}]],"23":[["        translates YCP type conversions from `any` as appropriate `Convert",{"fg":2}],["                                                         ",{}]],"24":[["      `_` calls                                                                                                                    ",{}]],"25":[["        translates YCP `_` calls as `_` calls",{"fg":2}],["                                                                                      ",{}]],"26":[["      builtin calls                                                                                                                ",{}]],"27":[["        translates YCP builtin calls as `Builtins",{"fg":2}],["                                                                                  ",{}]],"28":[["        handles YCP builtin calls with a block as the last argument specially",{"fg":2}],["                                                      ",{}]],"29":[["        handles YCP builtin calls with a double quote expression as the last",{"fg":2}],["                                                       ",{}]],"30":[["        argument specially                                                                                                         ",{"fg":2}]],"31":[["      function calls                                                                                                               ",{}]],"32":[["        translates YCP function calls of toplevel functions as Ruby method calls",{"fg":2}],["                                                   ",{}]],"33":[["        translates YCP function calls of nested functions as invoking the `call`",{"fg":2}],["                                                   ",{}]],"34":[["        method on them                                                                                                             ",{"fg":2}]],"35":[["        translates YCP function reference calls as invoking the `call` method on",{"fg":2}],["                                                   ",{}]],"36":[["        them                                                                                                                       ",{"fg":2}]],"37":[["        translates YCP function calls with arguments passed by reference as",{"fg":2}],["                                                        ",{}]],"38":[["        sequences of statements that emulate YCP behavior in Ruby                                                                  ",{"fg":2}]],"39":[["    statements                                                                                                                     ",{}]],"40":[["      assignments                                                                                                                  ",{}]],"41":[["        translates simple YCP assignments as Ruby assignments",{"fg":2}],["                                                                      ",{}]],"42":[["        translates YCP assignments with brackets as `Ops",{"fg":2}],["                                                                           ",{}]],"43":[["      `textdomain` statement                                                                                                       ",{}]],"44":[["        translates YCP `textdomain` statements as `textdomain` calls",{"fg":2}],["                                                               ",{}]],"45":[["      `import` statement                                                                                                           ",{}]],"46":[["        translates YCP `import` statements as `Yast",{"fg":2}],["                                                                                ",{}]],"47":[["      `include` statement                                                                                                          ",{}]],"48":[["        translates YCP `include` statements as `Yast",{"fg":2}],["                                                                               ",{}]],"49":[["      `return` statement                                                                                                           ",{}]],"50":[["        translates YCP `return` statements inside functions as Ruby `return`",{"fg":2}],["                                                       ",{}]],"51":[["        statements                                                                                                                 ",{"fg":2}]],"52":[["        translates YCP `return` statements inside blocks as Ruby `next` statements",{"fg":2}],["                                                 ",{}]]}}],[0.000125,{"lines":{"0":[["      arithmetic operators                                                                                                         ",{}]],"1":[["        translates YCP arithmetic operators as equivalent Ruby operators when it is",{"fg":2}],["                                                ",{}]],"2":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"3":[["        translates YCP arithmetic operators as `Ops",{"fg":2}],["                                                                                ",{}]],"4":[["      bitwise operators                                                                                                            ",{}]],"5":[["        translates YCP bitwise operators as equivalent Ruby operators when it is",{"fg":2}],["                                                   ",{}]],"6":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"7":[["        translates YCP bitwise operators as `Ops",{"fg":2}],["                                                                                   ",{}]],"8":[["      logical operators                                                                                                            ",{}]],"9":[["        translates YCP logical operators as Ruby logical operators",{"fg":2}],["                                                                 ",{}]],"10":[["      ternary operator                                                                                                             ",{}]],"11":[["        translates YCP ternary operators as Ruby ternary operators",{"fg":2}],["                                                                 ",{}]],"12":[["      index operator                                                                                                               ",{}]],"13":[["        translates YCP index operators as `Ops",{"fg":2}],["                                                                                     ",{}]],"14":[["        translates YCP index operators as appropriate `Ops",{"fg":2}],["                                                                         ",{}]],"15":[["      `is` operator                                                                                                                ",{}]],"16":[["        translates YCP `is` operators as `Ops",{"fg":2}],["                                                                                      ",{}]],"17":[["        translates YCP `is` operators as appropriate `Ops",{"fg":2}],["                                                                          ",{}]],"18":[["      double quote operator                                                                                                        ",{}]],"19":[["        translates YCP double quote operators as Ruby lambdas",{"fg":2}],["                                                                      ",{}]],"20":[["      type conversions                                                                                                             ",{}]],"21":[["        translates YCP type conversions as `Convert",{"fg":2}],["                                                                                ",{}]],"22":[["        translates YCP type conversions from `any` as appropriate `Convert",{"fg":2}],["                                                         ",{}]],"23":[["      `_` calls                                                                                                                    ",{}]],"24":[["        translates YCP `_` calls as `_` calls",{"fg":2}],["                                                                                      ",{}]],"25":[["      builtin calls                                                                                                                ",{}]],"26":[["        translates YCP builtin calls as `Builtins",{"fg":2}],["                                                                                  ",{}]],"27":[["        handles YCP builtin calls with a block as the last argument specially",{"fg":2}],["                                                      ",{}]],"28":[["        handles YCP builtin calls with a double quote expression as the last",{"fg":2}],["                                                       ",{}]],"29":[["        argument specially                                                                                                         ",{"fg":2}]],"30":[["      function calls                                                                                                               ",{}]],"31":[["        translates YCP function calls of toplevel functions as Ruby method calls",{"fg":2}],["                                                   ",{}]],"32":[["        translates YCP function calls of nested functions as invoking the `call`",{"fg":2}],["                                                   ",{}]],"33":[["        method on them                                                                                                             ",{"fg":2}]],"34":[["        translates YCP function reference calls as invoking the `call` method on",{"fg":2}],["                                                   ",{}]],"35":[["        them                                                                                                                       ",{"fg":2}]],"36":[["        translates YCP function calls with arguments passed by reference as",{"fg":2}],["                                                        ",{}]],"37":[["        sequences of statements that emulate YCP behavior in Ruby                                                                  ",{"fg":2}]],"38":[["    statements                                                                                                                     ",{}]],"39":[["      assignments                                                                                                                  ",{}]],"40":[["        translates simple YCP assignments as Ruby assignments",{"fg":2}],["                                                                      ",{}]],"41":[["        translates YCP assignments with brackets as `Ops",{"fg":2}],["                                                                           ",{}]],"42":[["      `textdomain` statement                                                                                                       ",{}]],"43":[["        translates YCP `textdomain` statements as `textdomain` calls",{"fg":2}],["                                                               ",{}]],"44":[["      `import` statement                                                                                                           ",{}]],"45":[["        translates YCP `import` statements as `Yast",{"fg":2}],["                                                                                ",{}]],"46":[["      `include` statement                                                                                                          ",{}]],"47":[["        translates YCP `include` statements as `Yast",{"fg":2}],["                                                                               ",{}]],"48":[["      `return` statement                                                                                                           ",{}]],"49":[["        translates YCP `return` statements inside functions as Ruby `return`",{"fg":2}],["                                                       ",{}]],"50":[["        statements                                                                                                                 ",{"fg":2}]],"51":[["        translates YCP `return` statements inside blocks as Ruby `next` statements",{"fg":2}],["                                                 ",{}]],"52":[["      `break` statement                                                                                                            ",{}]]}}],[0.04895,{"lines":{"0":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"1":[["        translates YCP arithmetic operators as `Ops",{"fg":2}],["                                                                                ",{}]],"2":[["      bitwise operators                                                                                                            ",{}]],"3":[["        translates YCP bitwise operators as equivalent Ruby operators when it is",{"fg":2}],["                                                   ",{}]],"4":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"5":[["        translates YCP bitwise operators as `Ops",{"fg":2}],["                                                                                   ",{}]],"6":[["      logical operators                                                                                                            ",{}]],"7":[["        translates YCP logical operators as Ruby logical operators",{"fg":2}],["                                                                 ",{}]],"8":[["      ternary operator                                                                                                             ",{}]],"9":[["        translates YCP ternary operators as Ruby ternary operators",{"fg":2}],["                                                                 ",{}]],"10":[["      index operator                                                                                                               ",{}]],"11":[["        translates YCP index operators as `Ops",{"fg":2}],["                                                                                     ",{}]],"12":[["        translates YCP index operators as appropriate `Ops",{"fg":2}],["                                                                         ",{}]],"13":[["      `is` operator                                                                                                                ",{}]],"14":[["        translates YCP `is` operators as `Ops",{"fg":2}],["                                                                                      ",{}]],"15":[["        translates YCP `is` operators as appropriate `Ops",{"fg":2}],["                                                                          ",{}]],"16":[["      double quote operator                                                                                                        ",{}]],"17":[["        translates YCP double quote operators as Ruby lambdas",{"fg":2}],["                                                                      ",{}]],"18":[["      type conversions                                                                                                             ",{}]],"19":[["        translates YCP type conversions as `Convert",{"fg":2}],["                                                                                ",{}]],"20":[["        translates YCP type conversions from `any` as appropriate `Convert",{"fg":2}],["                                                         ",{}]],"21":[["      `_` calls                                                                                                                    ",{}]],"22":[["        translates YCP `_` calls as `_` calls",{"fg":2}],["                                                                                      ",{}]],"23":[["      builtin calls                                                                                                                ",{}]],"24":[["        translates YCP builtin calls as `Builtins",{"fg":2}],["                                                                                  ",{}]],"25":[["        handles YCP builtin calls with a block as the last argument specially",{"fg":2}],["                                                      ",{}]],"26":[["        handles YCP builtin calls with a double quote expression as the last",{"fg":2}],["                                                       ",{}]],"27":[["        argument specially                                                                                                         ",{"fg":2}]],"28":[["      function calls                                                                                                               ",{}]],"29":[["        translates YCP function calls of toplevel functions as Ruby method calls",{"fg":2}],["                                                   ",{}]],"30":[["        translates YCP function calls of nested functions as invoking the `call`",{"fg":2}],["                                                   ",{}]],"31":[["        method on them                                                                                                             ",{"fg":2}]],"32":[["        translates YCP function reference calls as invoking the `call` method on",{"fg":2}],["                                                   ",{}]],"33":[["        them                                                                                                                       ",{"fg":2}]],"34":[["        translates YCP function calls with arguments passed by reference as",{"fg":2}],["                                                        ",{}]],"35":[["        sequences of statements that emulate YCP behavior in Ruby                                                                  ",{"fg":2}]],"36":[["    statements                                                                                                                     ",{}]],"37":[["      assignments                                                                                                                  ",{}]],"38":[["        translates simple YCP assignments as Ruby assignments",{"fg":2}],["                                                                      ",{}]],"39":[["        translates YCP assignments with brackets as `Ops",{"fg":2}],["                                                                           ",{}]],"40":[["      `textdomain` statement                                                                                                       ",{}]],"41":[["        translates YCP `textdomain` statements as `textdomain` calls",{"fg":2}],["                                                               ",{}]],"42":[["      `import` statement                                                                                                           ",{}]],"43":[["        translates YCP `import` statements as `Yast",{"fg":2}],["                                                                                ",{}]],"44":[["      `include` statement                                                                                                          ",{}]],"45":[["        translates YCP `include` statements as `Yast",{"fg":2}],["                                                                               ",{}]],"46":[["      `return` statement                                                                                                           ",{}]],"47":[["        translates YCP `return` statements inside functions as Ruby `return`",{"fg":2}],["                                                       ",{}]],"48":[["        statements                                                                                                                 ",{"fg":2}]],"49":[["        translates YCP `return` statements inside blocks as Ruby `next` statements",{"fg":2}],["                                                 ",{}]],"50":[["      `break` statement                                                                                                            ",{}]],"51":[["        translates YCP `break` statements inside loops as Ruby `next`",{"fg":2}],["                                                              ",{}]],"52":[["        statements                                                                                                                 ",{"fg":2}]]}}],[0.084107,{"lines":{"0":[["        translates YCP arithmetic operators as `Ops",{"fg":2}],["                                                                                ",{}]],"1":[["      bitwise operators                                                                                                            ",{}]],"2":[["        translates YCP bitwise operators as equivalent Ruby operators when it is",{"fg":2}],["                                                   ",{}]],"3":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"4":[["        translates YCP bitwise operators as `Ops",{"fg":2}],["                                                                                   ",{}]],"5":[["      logical operators                                                                                                            ",{}]],"6":[["        translates YCP logical operators as Ruby logical operators",{"fg":2}],["                                                                 ",{}]],"7":[["      ternary operator                                                                                                             ",{}]],"8":[["        translates YCP ternary operators as Ruby ternary operators",{"fg":2}],["                                                                 ",{}]],"9":[["      index operator                                                                                                               ",{}]],"10":[["        translates YCP index operators as `Ops",{"fg":2}],["                                                                                     ",{}]],"11":[["        translates YCP index operators as appropriate `Ops",{"fg":2}],["                                                                         ",{}]],"12":[["      `is` operator                                                                                                                ",{}]],"13":[["        translates YCP `is` operators as `Ops",{"fg":2}],["                                                                                      ",{}]],"14":[["        translates YCP `is` operators as appropriate `Ops",{"fg":2}],["                                                                          ",{}]],"15":[["      double quote operator                                                                                                        ",{}]],"16":[["        translates YCP double quote operators as Ruby lambdas",{"fg":2}],["                                                                      ",{}]],"17":[["      type conversions                                                                                                             ",{}]],"18":[["        translates YCP type conversions as `Convert",{"fg":2}],["                                                                                ",{}]],"19":[["        translates YCP type conversions from `any` as appropriate `Convert",{"fg":2}],["                                                         ",{}]],"20":[["      `_` calls                                                                                                                    ",{}]],"21":[["        translates YCP `_` calls as `_` calls",{"fg":2}],["                                                                                      ",{}]],"22":[["      builtin calls                                                                                                                ",{}]],"23":[["        translates YCP builtin calls as `Builtins",{"fg":2}],["                                                                                  ",{}]],"24":[["        handles YCP builtin calls with a block as the last argument specially",{"fg":2}],["                                                      ",{}]],"25":[["        handles YCP builtin calls with a double quote expression as the last",{"fg":2}],["                                                       ",{}]],"26":[["        argument specially                                                                                                         ",{"fg":2}]],"27":[["      function calls                                                                                                               ",{}]],"28":[["        translates YCP function calls of toplevel functions as Ruby method calls",{"fg":2}],["                                                   ",{}]],"29":[["        translates YCP function calls of nested functions as invoking the `call`",{"fg":2}],["                                                   ",{}]],"30":[["        method on them                                                                                                             ",{"fg":2}]],"31":[["        translates YCP function reference calls as invoking the `call` method on",{"fg":2}],["                                                   ",{}]],"32":[["        them                                                                                                                       ",{"fg":2}]],"33":[["        translates YCP function calls with arguments passed by reference as",{"fg":2}],["                                                        ",{}]],"34":[["        sequences of statements that emulate YCP behavior in Ruby                                                                  ",{"fg":2}]],"35":[["    statements                                                                                                                     ",{}]],"36":[["      assignments                                                                                                                  ",{}]],"37":[["        translates simple YCP assignments as Ruby assignments",{"fg":2}],["                                                                      ",{}]],"38":[["        translates YCP assignments with brackets as `Ops",{"fg":2}],["                                                                           ",{}]],"39":[["      `textdomain` statement                                                                                                       ",{}]],"40":[["        translates YCP `textdomain` statements as `textdomain` calls",{"fg":2}],["                                                               ",{}]],"41":[["      `import` statement                                                                                                           ",{}]],"42":[["        translates YCP `import` statements as `Yast",{"fg":2}],["                                                                                ",{}]],"43":[["      `include` statement                                                                                                          ",{}]],"44":[["        translates YCP `include` statements as `Yast",{"fg":2}],["                                                                               ",{}]],"45":[["      `return` statement                                                                                                           ",{}]],"46":[["        translates YCP `return` statements inside functions as Ruby `return`",{"fg":2}],["                                                       ",{}]],"47":[["        statements                                                                                                                 ",{"fg":2}]],"48":[["        translates YCP `return` statements inside blocks as Ruby `next` statements",{"fg":2}],["                                                 ",{}]],"49":[["      `break` statement                                                                                                            ",{}]],"50":[["        translates YCP `break` statements inside loops as Ruby `next`",{"fg":2}],["                                                              ",{}]],"51":[["        statements                                                                                                                 ",{"fg":2}]],"52":[["        translates YCP `break` statements inside blocks as `raise Break` calls",{"fg":2}],["                                                     ",{}]]}}],[0.000122,{"lines":{"0":[["      bitwise operators                                                                                                            ",{}]],"1":[["        translates YCP bitwise operators as equivalent Ruby operators when it is",{"fg":2}],["                                                   ",{}]],"2":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"3":[["        translates YCP bitwise operators as `Ops",{"fg":2}],["                                                                                   ",{}]],"4":[["      logical operators                                                                                                            ",{}]],"5":[["        translates YCP logical operators as Ruby logical operators",{"fg":2}],["                                                                 ",{}]],"6":[["      ternary operator                                                                                                             ",{}]],"7":[["        translates YCP ternary operators as Ruby ternary operators",{"fg":2}],["                                                                 ",{}]],"8":[["      index operator                                                                                                               ",{}]],"9":[["        translates YCP index operators as `Ops",{"fg":2}],["                                                                                     ",{}]],"10":[["        translates YCP index operators as appropriate `Ops",{"fg":2}],["                                                                         ",{}]],"11":[["      `is` operator                                                                                                                ",{}]],"12":[["        translates YCP `is` operators as `Ops",{"fg":2}],["                                                                                      ",{}]],"13":[["        translates YCP `is` operators as appropriate `Ops",{"fg":2}],["                                                                          ",{}]],"14":[["      double quote operator                                                                                                        ",{}]],"15":[["        translates YCP double quote operators as Ruby lambdas",{"fg":2}],["                                                                      ",{}]],"16":[["      type conversions                                                                                                             ",{}]],"17":[["        translates YCP type conversions as `Convert",{"fg":2}],["                                                                                ",{}]],"18":[["        translates YCP type conversions from `any` as appropriate `Convert",{"fg":2}],["                                                         ",{}]],"19":[["      `_` calls                                                                                                                    ",{}]],"20":[["        translates YCP `_` calls as `_` calls",{"fg":2}],["                                                                                      ",{}]],"21":[["      builtin calls                                                                                                                ",{}]],"22":[["        translates YCP builtin calls as `Builtins",{"fg":2}],["                                                                                  ",{}]],"23":[["        handles YCP builtin calls with a block as the last argument specially",{"fg":2}],["                                                      ",{}]],"24":[["        handles YCP builtin calls with a double quote expression as the last",{"fg":2}],["                                                       ",{}]],"25":[["        argument specially                                                                                                         ",{"fg":2}]],"26":[["      function calls                                                                                                               ",{}]],"27":[["        translates YCP function calls of toplevel functions as Ruby method calls",{"fg":2}],["                                                   ",{}]],"28":[["        translates YCP function calls of nested functions as invoking the `call`",{"fg":2}],["                                                   ",{}]],"29":[["        method on them                                                                                                             ",{"fg":2}]],"30":[["        translates YCP function reference calls as invoking the `call` method on",{"fg":2}],["                                                   ",{}]],"31":[["        them                                                                                                                       ",{"fg":2}]],"32":[["        translates YCP function calls with arguments passed by reference as",{"fg":2}],["                                                        ",{}]],"33":[["        sequences of statements that emulate YCP behavior in Ruby                                                                  ",{"fg":2}]],"34":[["    statements                                                                                                                     ",{}]],"35":[["      assignments                                                                                                                  ",{}]],"36":[["        translates simple YCP assignments as Ruby assignments",{"fg":2}],["                                                                      ",{}]],"37":[["        translates YCP assignments with brackets as `Ops",{"fg":2}],["                                                                           ",{}]],"38":[["      `textdomain` statement                                                                                                       ",{}]],"39":[["        translates YCP `textdomain` statements as `textdomain` calls",{"fg":2}],["                                                               ",{}]],"40":[["      `import` statement                                                                                                           ",{}]],"41":[["        translates YCP `import` statements as `Yast",{"fg":2}],["                                                                                ",{}]],"42":[["      `include` statement                                                                                                          ",{}]],"43":[["        translates YCP `include` statements as `Yast",{"fg":2}],["                                                                               ",{}]],"44":[["      `return` statement                                                                                                           ",{}]],"45":[["        translates YCP `return` statements inside functions as Ruby `return`",{"fg":2}],["                                                       ",{}]],"46":[["        statements                                                                                                                 ",{"fg":2}]],"47":[["        translates YCP `return` statements inside blocks as Ruby `next` statements",{"fg":2}],["                                                 ",{}]],"48":[["      `break` statement                                                                                                            ",{}]],"49":[["        translates YCP `break` statements inside loops as Ruby `next`",{"fg":2}],["                                                              ",{}]],"50":[["        statements                                                                                                                 ",{"fg":2}]],"51":[["        translates YCP `break` statements inside blocks as `raise Break` calls",{"fg":2}],["                                                     ",{}]],"52":[["      `continue` statement                                                                                                         ",{}]]}}],[0.051138,{"lines":{"0":[["        translates YCP bitwise operators as equivalent Ruby operators when it is",{"fg":2}],["                                                   ",{}]],"1":[["        sure that no operand is `nil`                                                                                              ",{"fg":2}]],"2":[["        translates YCP bitwise operators as `Ops",{"fg":2}],["                                                                                   ",{}]],"3":[["      logical operators                                                                                                            ",{}]],"4":[["        translates YCP logical operators as Ruby logical operators",{"fg":2}],["                                                                 ",{}]],"5":[["      ternary operator                                                                                                             ",{}]],"6":[["        translates YCP ternary operators as Ruby ternary operators",{"fg":2}],["                                                                 ",{}]],"7":[["      index operator                                                                                                               ",{}]],"8":[["        translates YCP index operators as `Ops",{"fg":2}],["                                                                                     ",{}]],"9":[["        translates YCP index operators as appropriate `Ops",{"fg":2}],["                                                                         ",{}]],"10":[["      `is` operator                                                                                                                ",{}]],"11":[["        translates YCP `is` operators as `Ops",{"fg":2}],["                                                                                      ",{}]],"12":[["        translates YCP `is` operators as appropriate `Ops",{"fg":2}],["                                                                          ",{}]],"13":[["      double quote operator                                                                                                        ",{}]],"14":[["        translates YCP double quote operators as Ruby lambdas",{"fg":2}],["                                                                      ",{}]],"15":[["      type conversions                                                                                                             ",{}]],"16":[["        translates YCP type conversions as `Convert",{"fg":2}],["                                                                                ",{}]],"17":[["        translates YCP type conversions from `any` as appropriate `Convert",{"fg":2}],["                                                         ",{}]],"18":[["      `_` calls                                                                                                                    ",{}]],"19":[["        translates YCP `_` calls as `_` calls",{"fg":2}],["                                                                                      ",{}]],"20":[["      builtin calls                                                                                                                ",{}]],"21":[["        translates YCP builtin calls as `Builtins",{"fg":2}],["                                                                                  ",{}]],"22":[["        handles YCP builtin calls with a block as the last argument specially",{"fg":2}],["                                                      ",{}]],"23":[["        handles YCP builtin calls with a double quote expression as the last",{"fg":2}],["                                                       ",{}]],"24":[["        argument specially                                                                                                         ",{"fg":2}]],"25":[["      function calls                                                                                                               ",{}]],"26":[["        translates YCP function calls of toplevel functions as Ruby method calls",{"fg":2}],["                                                   ",{}]],"27":[["        translates YCP function calls of nested functions as invoking the `call`",{"fg":2}],["                                                   ",{}]],"28":[["        method on them                                                                                                             ",{"fg":2}]],"29":[["        translates YCP function reference calls as invoking the `call` method on",{"fg":2}],["                                                   ",{}]],"30":[["        them                                                                                                                       ",{"fg":2}]],"31":[["        translates YCP function calls with arguments passed by reference as",{"fg":2}],["                                                        ",{}]],"32":[["        sequences of statements that emulate YCP behavior in Ruby                                                                  ",{"fg":2}]],"33":[["    statements                                                                                                                     ",{}]],"34":[["      assignments                                                                                                                  ",{}]],"35":[["        translates simple YCP assignments as Ruby assignments",{"fg":2}],["                                                                      ",{}]],"36":[["        translates YCP assignments with brackets as `Ops",{"fg":2}],["                                                                           ",{}]],"37":[["      `textdomain` statement                                                                                                       ",{}]],"38":[["        translates YCP `textdomain` statements as `textdomain` calls",{"fg":2}],["                                                               ",{}]],"39":[["      `import` statement                                                                                                           ",{}]],"40":[["        translates YCP `import` statements as `Yast",{"fg":2}],["                                                                                ",{}]],"41":[["      `include` statement                                                                                                          ",{}]],"42":[["        translates YCP `include` statements as `Yast",{"fg":2}],["                                                                               ",{}]],"43":[["      `return` statement                                                                                                           ",{}]],"44":[["        translates YCP `return` statements inside functions as Ruby `return`",{"fg":2}],["                                                       ",{}]],"45":[["        statements                                                                                                                 ",{"fg":2}]],"46":[["        translates YCP `return` statements inside blocks as Ruby `next` statements",{"fg":2}],["                                                 ",{}]],"47":[["      `break` statement                                                                                                            ",{}]],"48":[["        translates YCP `break` statements inside loops as Ruby `next`",{"fg":2}],["                                                              ",{}]],"49":[["        statements                                                                                                                 ",{"fg":2}]],"50":[["        translates YCP `break` statements inside blocks as `raise Break` calls",{"fg":2}],["                                                     ",{}]],"51":[["      `continue` statement                                                                                                         ",{}]],"52":[["        translates YCP `continue` statements inside loops as Ruby `next` statements",{"fg":2}],["                                                ",{}]]}}],[0.052544,{"lines":{"0":[["        translates YCP bitwise operators as `Ops",{"fg":2}],["                                                                                   ",{}]],"1":[["      logical operators                                                                                                            ",{}]],"2":[["        translates YCP logical operators as Ruby logical operators",{"fg":2}],["                                                                 ",{}]],"3":[["      ternary operator                                                                                                             ",{}]],"4":[["        translates YCP ternary operators as Ruby ternary operators",{"fg":2}],["                                                                 ",{}]],"5":[["      index operator                                                                                                               ",{}]],"6":[["        translates YCP index operators as `Ops",{"fg":2}],["                                                                                     ",{}]],"7":[["        translates YCP index operators as appropriate `Ops",{"fg":2}],["                                                                         ",{}]],"8":[["      `is` operator                                                                                                                ",{}]],"9":[["        translates YCP `is` operators as `Ops",{"fg":2}],["                                                                                      ",{}]],"10":[["        translates YCP `is` operators as appropriate `Ops",{"fg":2}],["                                                                          ",{}]],"11":[["      double quote operator                                                                                                        ",{}]],"12":[["        translates YCP double quote operators as Ruby lambdas",{"fg":2}],["                                                                      ",{}]],"13":[["      type conversions                                                                                                             ",{}]],"14":[["        translates YCP type conversions as `Convert",{"fg":2}],["                                                                                ",{}]],"15":[["        translates YCP type conversions from `any` as appropriate `Convert",{"fg":2}],["                                                         ",{}]],"16":[["      `_` calls                                                                                                                    ",{}]],"17":[["        translates YCP `_` calls as `_` calls",{"fg":2}],["                                                                                      ",{}]],"18":[["      builtin calls                                                                                                                ",{}]],"19":[["        translates YCP builtin calls as `Builtins",{"fg":2}],["                                                                                  ",{}]],"20":[["        handles YCP builtin calls with a block as the last argument specially",{"fg":2}],["                                                      ",{}]],"21":[["        handles YCP builtin calls with a double quote expression as the last",{"fg":2}],["                                                       ",{}]],"22":[["        argument specially                                                                                                         ",{"fg":2}]],"23":[["      function calls                                                                                                               ",{}]],"24":[["        translates YCP function calls of toplevel functions as Ruby method calls",{"fg":2}],["                                                   ",{}]],"25":[["        translates YCP function calls of nested functions as invoking the `call`",{"fg":2}],["                                                   ",{}]],"26":[["        method on them                                                                                                             ",{"fg":2}]],"27":[["        translates YCP function reference calls as invoking the `call` method on",{"fg":2}],["                                                   ",{}]],"28":[["        them                                                                                                                       ",{"fg":2}]],"29":[["        translates YCP function calls with arguments passed by reference as",{"fg":2}],["                                                        ",{}]],"30":[["        sequences of statements that emulate YCP behavior in Ruby                                                                  ",{"fg":2}]],"31":[["    statements                                                                                                                     ",{}]],"32":[["      assignments                                                                                                                  ",{}]],"33":[["        translates simple YCP assignments as Ruby assignments",{"fg":2}],["                                                                      ",{}]],"34":[["        translates YCP assignments with brackets as `Ops",{"fg":2}],["                                                                           ",{}]],"35":[["      `textdomain` statement                                                                                                       ",{}]],"36":[["        translates YCP `textdomain` statements as `textdomain` calls",{"fg":2}],["                                                               ",{}]],"37":[["      `import` statement                                                                                                           ",{}]],"38":[["        translates YCP `import` statements as `Yast",{"fg":2}],["                                                                                ",{}]],"39":[["      `include` statement                                                                                                          ",{}]],"40":[["        translates YCP `include` statements as `Yast",{"fg":2}],["                                                                               ",{}]],"41":[["      `return` statement                                                                                                           ",{}]],"42":[["        translates YCP `return` statements inside functions as Ruby `return`",{"fg":2}],["                                                       ",{}]],"43":[["        statements                                                                                                                 ",{"fg":2}]],"44":[["        translates YCP `return` statements inside blocks as Ruby `next` statements",{"fg":2}],["                                                 ",{}]],"45":[["      `break` statement                                                                                                            ",{}]],"46":[["        translates YCP `break` statements inside loops as Ruby `next`",{"fg":2}],["                                                              ",{}]],"47":[["        statements                                                                                                                 ",{"fg":2}]],"48":[["        translates YCP `break` statements inside blocks as `raise Break` calls",{"fg":2}],["                                                     ",{}]],"49":[["      `continue` statement                                                                                                         ",{}]],"50":[["        translates YCP `continue` statements inside loops as Ruby `next` statements",{"fg":2}],["                                                ",{}]],"51":[["        translates YCP `continue` statements inside blocks as Ruby `next`",{"fg":2}],["                                                          ",{}]],"52":[["        statements                                                                                                                 ",{"fg":2}]]}}],[0.000117,{"lines":{"0":[["      logical operators                                                                                                            ",{}]],"1":[["        translates YCP logical operators as Ruby logical operators",{"fg":2}],["                                                                 ",{}]],"2":[["      ternary operator                                                                                                             ",{}]],"3":[["        translates YCP ternary operators as Ruby ternary operators",{"fg":2}],["                                                                 ",{}]],"4":[["      index operator                                                                                                               ",{}]],"5":[["        translates YCP index operators as `Ops",{"fg":2}],["                                                                                     ",{}]],"6":[["        translates YCP index operators as appropriate `Ops",{"fg":2}],["                                                                         ",{}]],"7":[["      `is` operator                                                                                                                ",{}]],"8":[["        translates YCP `is` operators as `Ops",{"fg":2}],["                                                                                      ",{}]],"9":[["        translates YCP `is` operators as appropriate `Ops",{"fg":2}],["                                                                          ",{}]],"10":[["      double quote operator                                                                                                        ",{}]],"11":[["        translates YCP double quote operators as Ruby lambdas",{"fg":2}],["                                                                      ",{}]],"12":[["      type conversions                                                                                                             ",{}]],"13":[["        translates YCP type conversions as `Convert",{"fg":2}],["                                                                                ",{}]],"14":[["        translates YCP type conversions from `any` as appropriate `Convert",{"fg":2}],["                                                         ",{}]],"15":[["      `_` calls                                                                                                                    ",{}]],"16":[["        translates YCP `_` calls as `_` calls",{"fg":2}],["                                                                                      ",{}]],"17":[["      builtin calls                                                                                                                ",{}]],"18":[["        translates YCP builtin calls as `Builtins",{"fg":2}],["                                                                                  ",{}]],"19":[["        handles YCP builtin calls with a block as the last argument specially",{"fg":2}],["                                                      ",{}]],"20":[["        handles YCP builtin calls with a double quote expression as the last",{"fg":2}],["                                                       ",{}]],"21":[["        argument specially                                                                                                         ",{"fg":2}]],"22":[["      function calls                                                                                                               ",{}]],"23":[["        translates YCP function calls of toplevel functions as Ruby method calls",{"fg":2}],["                                                   ",{}]],"24":[["        translates YCP function calls of nested functions as invoking the `call`",{"fg":2}],["                                                   ",{}]],"25":[["        method on them                                                                                                             ",{"fg":2}]],"26":[["        translates YCP function reference calls as invoking the `call` method on",{"fg":2}],["                                                   ",{}]],"27":[["        them                                                                                                                       ",{"fg":2}]],"28":[["        translates YCP function calls with arguments passed by reference as",{"fg":2}],["                                                        ",{}]],"29":[["        sequences of statements that emulate YCP behavior in Ruby                                                                  ",{"fg":2}]],"30":[["    statements                                                                                                                     ",{}]],"31":[["      assignments                                                                                                                  ",{}]],"32":[["        translates simple YCP assignments as Ruby assignments",{"fg":2}],["                                                                      ",{}]],"33":[["        translates YCP assignments with brackets as `Ops",{"fg":2}],["                                                                           ",{}]],"34":[["      `textdomain` statement                                                                                                       ",{}]],"35":[["        translates YCP `textdomain` statements as `textdomain` calls",{"fg":2}],["                                                               ",{}]],"36":[["      `import` statement                                                                                                           ",{}]],"37":[["        translates YCP `import` statements as `Yast",{"fg":2}],["                                                                                ",{}]],"38":[["      `include` statement                                                                                                          ",{}]],"39":[["        translates YCP `include` statements as `Yast",{"fg":2}],["                                                                               ",{}]],"40":[["      `return` statement                                                                                                           ",{}]],"41":[["        translates YCP `return` statements inside functions as Ruby `return`",{"fg":2}],["                                                       ",{}]],"42":[["        statements                                                                                                                 ",{"fg":2}]],"43":[["        translates YCP `return` statements inside blocks as Ruby `next` statements",{"fg":2}],["                                                 ",{}]],"44":[["      `break` statement                                                                                                            ",{}]],"45":[["        translates YCP `break` statements inside loops as Ruby `next`",{"fg":2}],["                                                              ",{}]],"46":[["        statements                                                                                                                 ",{"fg":2}]],"47":[["        translates YCP `break` statements inside blocks as `raise Break` calls",{"fg":2}],["                                                     ",{}]],"48":[["      `continue` statement                                                                                                         ",{}]],"49":[["        translates YCP `continue` statements inside loops as Ruby `next` statements",{"fg":2}],["                                                ",{}]],"50":[["        translates YCP `continue` statements inside blocks as Ruby `next`",{"fg":2}],["                                                          ",{}]],"51":[["        statements                                                                                                                 ",{"fg":2}]],"52":[["      statement blocks                                                                                                             ",{}]]}}],[0.049499,{"lines":{"0":[["        translates YCP logical operators as Ruby logical operators",{"fg":2}],["                                                                 ",{}]],"1":[["      ternary operator                                                                                                             ",{}]],"2":[["        translates YCP ternary operators as Ruby ternary operators",{"fg":2}],["                                                                 ",{}]],"3":[["      index operator                                                                                                               ",{}]],"4":[["        translates YCP index operators as `Ops",{"fg":2}],["                                                                                     ",{}]],"5":[["        translates YCP index operators as appropriate `Ops",{"fg":2}],["                                                                         ",{}]],"6":[["      `is` operator                                                                                                                ",{}]],"7":[["        translates YCP `is` operators as `Ops",{"fg":2}],["                                                                                      ",{}]],"8":[["        translates YCP `is` operators as appropriate `Ops",{"fg":2}],["                                                                          ",{}]],"9":[["      double quote operator                                                                                                        ",{}]],"10":[["        translates YCP double quote operators as Ruby lambdas",{"fg":2}],["                                                                      ",{}]],"11":[["      type conversions                                                                                                             ",{}]],"12":[["        translates YCP type conversions as `Convert",{"fg":2}],["                                                                                ",{}]],"13":[["        translates YCP type conversions from `any` as appropriate `Convert",{"fg":2}],["                                                         ",{}]],"14":[["      `_` calls                                                                                                                    ",{}]],"15":[["        translates YCP `_` calls as `_` calls",{"fg":2}],["                                                                                      ",{}]],"16":[["      builtin calls                                                                                                                ",{}]],"17":[["        translates YCP builtin calls as `Builtins",{"fg":2}],["                                                                                  ",{}]],"18":[["        handles YCP builtin calls with a block as the last argument specially",{"fg":2}],["                                                      ",{}]],"19":[["        handles YCP builtin calls with a double quote expression as the last",{"fg":2}],["                                                       ",{}]],"20":[["        argument specially                                                                                                         ",{"fg":2}]],"21":[["      function calls                                                                                                               ",{}]],"22":[["        translates YCP function calls of toplevel functions as Ruby method calls",{"fg":2}],["                                                   ",{}]],"23":[["        translates YCP function calls of nested functions as invoking the `call`",{"fg":2}],["                                                   ",{}]],"24":[["        method on them                                                                                                             ",{"fg":2}]],"25":[["        translates YCP function reference calls as invoking the `call` method on",{"fg":2}],["                                                   ",{}]],"26":[["        them                                                                                                                       ",{"fg":2}]],"27":[["        translates YCP function calls with arguments passed by reference as",{"fg":2}],["                                                        ",{}]],"28":[["        sequences of statements that emulate YCP behavior in Ruby                                                                  ",{"fg":2}]],"29":[["    statements                                                                                                                     ",{}]],"30":[["      assignments                                                                                                                  ",{}]],"31":[["        translates simple YCP assignments as Ruby assignments",{"fg":2}],["                                                                      ",{}]],"32":[["        translates YCP assignments with brackets as `Ops",{"fg":2}],["                                                                           ",{}]],"33":[["      `textdomain` statement                                                                                                       ",{}]],"34":[["        translates YCP `textdomain` statements as `textdomain` calls",{"fg":2}],["                                                               ",{}]],"35":[["      `import` statement                                                                                                           ",{}]],"36":[["        translates YCP `import` statements as `Yast",{"fg":2}],["                                                                                ",{}]],"37":[["      `include` statement                                                                                                          ",{}]],"38":[["        translates YCP `include` statements as `Yast",{"fg":2}],["                                                                               ",{}]],"39":[["      `return` statement                                                                                                           ",{}]],"40":[["        translates YCP `return` statements inside functions as Ruby `return`",{"fg":2}],["                                                       ",{}]],"41":[["        statements                                                                                                                 ",{"fg":2}]],"42":[["        translates YCP `return` statements inside blocks as Ruby `next` statements",{"fg":2}],["                                                 ",{}]],"43":[["      `break` statement                                                                                                            ",{}]],"44":[["        translates YCP `break` statements inside loops as Ruby `next`",{"fg":2}],["                                                              ",{}]],"45":[["        statements                                                                                                                 ",{"fg":2}]],"46":[["        translates YCP `break` statements inside blocks as `raise Break` calls",{"fg":2}],["                                                     ",{}]],"47":[["      `continue` statement                                                                                                         ",{}]],"48":[["        translates YCP `continue` statements inside loops as Ruby `next` statements",{"fg":2}],["                                                ",{}]],"49":[["        translates YCP `continue` statements inside blocks as Ruby `next`",{"fg":2}],["                                                          ",{}]],"50":[["        statements                                                                                                                 ",{"fg":2}]],"51":[["      statement blocks                                                                                                             ",{}]],"52":[["        translates YCP statement blocks as Ruby statements",{"fg":2}],["                                                                         ",{}]]}}],[0.000134,{"lines":{"0":[["      ternary operator                                                                                                             ",{}]],"1":[["        translates YCP ternary operators as Ruby ternary operators",{"fg":2}],["                                                                 ",{}]],"2":[["      index operator                                                                                                               ",{}]],"3":[["        translates YCP index operators as `Ops",{"fg":2}],["                                                                                     ",{}]],"4":[["        translates YCP index operators as appropriate `Ops",{"fg":2}],["                                                                         ",{}]],"5":[["      `is` operator                                                                                                                ",{}]],"6":[["        translates YCP `is` operators as `Ops",{"fg":2}],["                                                                                      ",{}]],"7":[["        translates YCP `is` operators as appropriate `Ops",{"fg":2}],["                                                                          ",{}]],"8":[["      double quote operator                                                                                                        ",{}]],"9":[["        translates YCP double quote operators as Ruby lambdas",{"fg":2}],["                                                                      ",{}]],"10":[["      type conversions                                                                                                             ",{}]],"11":[["        translates YCP type conversions as `Convert",{"fg":2}],["                                                                                ",{}]],"12":[["        translates YCP type conversions from `any` as appropriate `Convert",{"fg":2}],["                                                         ",{}]],"13":[["      `_` calls                                                                                                                    ",{}]],"14":[["        translates YCP `_` calls as `_` calls",{"fg":2}],["                                                                                      ",{}]],"15":[["      builtin calls                                                                                                                ",{}]],"16":[["        translates YCP builtin calls as `Builtins",{"fg":2}],["                                                                                  ",{}]],"17":[["        handles YCP builtin calls with a block as the last argument specially",{"fg":2}],["                                                      ",{}]],"18":[["        handles YCP builtin calls with a double quote expression as the last",{"fg":2}],["                                                       ",{}]],"19":[["        argument specially                                                                                                         ",{"fg":2}]],"20":[["      function calls                                                                                                               ",{}]],"21":[["        translates YCP function calls of toplevel functions as Ruby method calls",{"fg":2}],["                                                   ",{}]],"22":[["        translates YCP function calls of nested functions as invoking the `call`",{"fg":2}],["                                                   ",{}]],"23":[["        method on them                                                                                                             ",{"fg":2}]],"24":[["        translates YCP function reference calls as invoking the `call` method on",{"fg":2}],["                                                   ",{}]],"25":[["        them                                                                                                                       ",{"fg":2}]],"26":[["        translates YCP function calls with arguments passed by reference as",{"fg":2}],["                                                        ",{}]],"27":[["        sequences of statements that emulate YCP behavior in Ruby                                                                  ",{"fg":2}]],"28":[["    statements                                                                                                                     ",{}]],"29":[["      assignments                                                                                                                  ",{}]],"30":[["        translates simple YCP assignments as Ruby assignments",{"fg":2}],["                                                                      ",{}]],"31":[["        translates YCP assignments with brackets as `Ops",{"fg":2}],["                                                                           ",{}]],"32":[["      `textdomain` statement                                                                                                       ",{}]],"33":[["        translates YCP `textdomain` statements as `textdomain` calls",{"fg":2}],["                                                               ",{}]],"34":[["      `import` statement                                                                                                           ",{}]],"35":[["        translates YCP `import` statements as `Yast",{"fg":2}],["                                                                                ",{}]],"36":[["      `include` statement                                                                                                          ",{}]],"37":[["        translates YCP `include` statements as `Yast",{"fg":2}],["                                                                               ",{}]],"38":[["      `return` statement                                                                                                           ",{}]],"39":[["        translates YCP `return` statements inside functions as Ruby `return`",{"fg":2}],["                                                       ",{}]],"40":[["        statements                                                                                                                 ",{"fg":2}]],"41":[["        translates YCP `return` statements inside blocks as Ruby `next` statements",{"fg":2}],["                                                 ",{}]],"42":[["      `break` statement                                                                                                            ",{}]],"43":[["        translates YCP `break` statements inside loops as Ruby `next`",{"fg":2}],["                                                              ",{}]],"44":[["        statements                                                                                                                 ",{"fg":2}]],"45":[["        translates YCP `break` statements inside blocks as `raise Break` calls",{"fg":2}],["                                                     ",{}]],"46":[["      `continue` statement                                                                                                         ",{}]],"47":[["        translates YCP `continue` statements inside loops as Ruby `next` statements",{"fg":2}],["                                                ",{}]],"48":[["        translates YCP `continue` statements inside blocks as Ruby `next`",{"fg":2}],["                                                          ",{}]],"49":[["        statements                                                                                                                 ",{"fg":2}]],"50":[["      statement blocks                                                                                                             ",{}]],"51":[["        translates YCP statement blocks as Ruby statements",{"fg":2}],["                                                                         ",{}]],"52":[["      `if` statement                                                                                                               ",{}]]}}],[0.050781,{"lines":{"0":[["        translates YCP ternary operators as Ruby ternary operators",{"fg":2}],["                                                                 ",{}]],"1":[["      index operator                                                                                                               ",{}]],"2":[["        translates YCP index operators as `Ops",{"fg":2}],["                                                                                     ",{}]],"3":[["        translates YCP index operators as appropriate `Ops",{"fg":2}],["                                                                         ",{}]],"4":[["      `is` operator                                                                                                                ",{}]],"5":[["        translates YCP `is` operators as `Ops",{"fg":2}],["                                                                                      ",{}]],"6":[["        translates YCP `is` operators as appropriate `Ops",{"fg":2}],["                                                                          ",{}]],"7":[["      double quote operator                                                                                                        ",{}]],"8":[["        translates YCP double quote operators as Ruby lambdas",{"fg":2}],["                                                                      ",{}]],"9":[["      type conversions                                                                                                             ",{}]],"10":[["        translates YCP type conversions as `Convert",{"fg":2}],["                                                                                ",{}]],"11":[["        translates YCP type conversions from `any` as appropriate `Convert",{"fg":2}],["                                                         ",{}]],"12":[["      `_` calls                                                                                                                    ",{}]],"13":[["        translates YCP `_` calls as `_` calls",{"fg":2}],["                                                                                      ",{}]],"14":[["      builtin calls                                                                                                                ",{}]],"15":[["        translates YCP builtin calls as `Builtins",{"fg":2}],["                                                                                  ",{}]],"16":[["        handles YCP builtin calls with a block as the last argument specially",{"fg":2}],["                                                      ",{}]],"17":[["        handles YCP builtin calls with a double quote expression as the last",{"fg":2}],["                                                       ",{}]],"18":[["        argument specially                                                                                                         ",{"fg":2}]],"19":[["      function calls                                                                                                               ",{}]],"20":[["        translates YCP function calls of toplevel functions as Ruby method calls",{"fg":2}],["                                                   ",{}]],"21":[["        translates YCP function calls of nested functions as invoking the `call`",{"fg":2}],["                                                   ",{}]],"22":[["        method on them                                                                                                             ",{"fg":2}]],"23":[["        translates YCP function reference calls as invoking the `call` method on",{"fg":2}],["                                                   ",{}]],"24":[["        them                                                                                                                       ",{"fg":2}]],"25":[["        translates YCP function calls with arguments passed by reference as",{"fg":2}],["                                                        ",{}]],"26":[["        sequences of statements that emulate YCP behavior in Ruby                                                                  ",{"fg":2}]],"27":[["    statements                                                                                                                     ",{}]],"28":[["      assignments                                                                                                                  ",{}]],"29":[["        translates simple YCP assignments as Ruby assignments",{"fg":2}],["                                                                      ",{}]],"30":[["        translates YCP assignments with brackets as `Ops",{"fg":2}],["                                                                           ",{}]],"31":[["      `textdomain` statement                                                                                                       ",{}]],"32":[["        translates YCP `textdomain` statements as `textdomain` calls",{"fg":2}],["                                                               ",{}]],"33":[["      `import` statement                                                                                                           ",{}]],"34":[["        translates YCP `import` statements as `Yast",{"fg":2}],["                                                                                ",{}]],"35":[["      `include` statement                                                                                                          ",{}]],"36":[["        translates YCP `include` statements as `Yast",{"fg":2}],["                                                                               ",{}]],"37":[["      `return` statement                                                                                                           ",{}]],"38":[["        translates YCP `return` statements inside functions as Ruby `return`",{"fg":2}],["                                                       ",{}]],"39":[["        statements                                                                                                                 ",{"fg":2}]],"40":[["        translates YCP `return` statements inside blocks as Ruby `next` statements",{"fg":2}],["                                                 ",{}]],"41":[["      `break` statement                                                                                                            ",{}]],"42":[["        translates YCP `break` statements inside loops as Ruby `next`",{"fg":2}],["                                                              ",{}]],"43":[["        statements                                                                                                                 ",{"fg":2}]],"44":[["        translates YCP `break` statements inside blocks as `raise Break` calls",{"fg":2}],["                                                     ",{}]],"45":[["      `continue` statement                                                                                                         ",{}]],"46":[["        translates YCP `continue` statements inside loops as Ruby `next` statements",{"fg":2}],["                                                ",{}]],"47":[["        translates YCP `continue` statements inside blocks as Ruby `next`",{"fg":2}],["                                                          ",{}]],"48":[["        statements                                                                                                                 ",{"fg":2}]],"49":[["      statement blocks                                                                                                             ",{}]],"50":[["        translates YCP statement blocks as Ruby statements",{"fg":2}],["                                                                         ",{}]],"51":[["      `if` statement                                                                                                               ",{}]],"52":[["        translates YCP `if` statements as Ruby `if` statements",{"fg":2}],["                                                                     ",{}]]}}],[0.000107,{"lines":{"0":[["      index operator                                                                                                               ",{}]],"1":[["        translates YCP index operators as `Ops",{"fg":2}],["                                                                                     ",{}]],"2":[["        translates YCP index operators as appropriate `Ops",{"fg":2}],["                                                                         ",{}]],"3":[["      `is` operator                                                                                                                ",{}]],"4":[["        translates YCP `is` operators as `Ops",{"fg":2}],["                                                                                      ",{}]],"5":[["        translates YCP `is` operators as appropriate `Ops",{"fg":2}],["                                                                          ",{}]],"6":[["      double quote operator                                                                                                        ",{}]],"7":[["        translates YCP double quote operators as Ruby lambdas",{"fg":2}],["                                                                      ",{}]],"8":[["      type conversions                                                                                                             ",{}]],"9":[["        translates YCP type conversions as `Convert",{"fg":2}],["                                                                                ",{}]],"10":[["        translates YCP type conversions from `any` as appropriate `Convert",{"fg":2}],["                                                         ",{}]],"11":[["      `_` calls                                                                                                                    ",{}]],"12":[["        translates YCP `_` calls as `_` calls",{"fg":2}],["                                                                                      ",{}]],"13":[["      builtin calls                                                                                                                ",{}]],"14":[["        translates YCP builtin calls as `Builtins",{"fg":2}],["                                                                                  ",{}]],"15":[["        handles YCP builtin calls with a block as the last argument specially",{"fg":2}],["                                                      ",{}]],"16":[["        handles YCP builtin calls with a double quote expression as the last",{"fg":2}],["                                                       ",{}]],"17":[["        argument specially                                                                                                         ",{"fg":2}]],"18":[["      function calls                                                                                                               ",{}]],"19":[["        translates YCP function calls of toplevel functions as Ruby method calls",{"fg":2}],["                                                   ",{}]],"20":[["        translates YCP function calls of nested functions as invoking the `call`",{"fg":2}],["                                                   ",{}]],"21":[["        method on them                                                                                                             ",{"fg":2}]],"22":[["        translates YCP function reference calls as invoking the `call` method on",{"fg":2}],["                                                   ",{}]],"23":[["        them                                                                                                                       ",{"fg":2}]],"24":[["        translates YCP function calls with arguments passed by reference as",{"fg":2}],["                                                        ",{}]],"25":[["        sequences of statements that emulate YCP behavior in Ruby                                                                  ",{"fg":2}]],"26":[["    statements                                                                                                                     ",{}]],"27":[["      assignments                                                                                                                  ",{}]],"28":[["        translates simple YCP assignments as Ruby assignments",{"fg":2}],["                                                                      ",{}]],"29":[["        translates YCP assignments with brackets as `Ops",{"fg":2}],["                                                                           ",{}]],"30":[["      `textdomain` statement                                                                                                       ",{}]],"31":[["        translates YCP `textdomain` statements as `textdomain` calls",{"fg":2}],["                                                               ",{}]],"32":[["      `import` statement                                                                                                           ",{}]],"33":[["        translates YCP `import` statements as `Yast",{"fg":2}],["                                                                                ",{}]],"34":[["      `include` statement                                                                                                          ",{}]],"35":[["        translates YCP `include` statements as `Yast",{"fg":2}],["                                                                               ",{}]],"36":[["      `return` statement                                                                                                           ",{}]],"37":[["        translates YCP `return` statements inside functions as Ruby `return`",{"fg":2}],["                                                       ",{}]],"38":[["        statements                                                                                                                 ",{"fg":2}]],"39":[["        translates YCP `return` statements inside blocks as Ruby `next` statements",{"fg":2}],["                                                 ",{}]],"40":[["      `break` statement                                                                                                            ",{}]],"41":[["        translates YCP `break` statements inside loops as Ruby `next`",{"fg":2}],["                                                              ",{}]],"42":[["        statements                                                                                                                 ",{"fg":2}]],"43":[["        translates YCP `break` statements inside blocks as `raise Break` calls",{"fg":2}],["                                                     ",{}]],"44":[["      `continue` statement                                                                                                         ",{}]],"45":[["        translates YCP `continue` statements inside loops as Ruby `next` statements",{"fg":2}],["                                                ",{}]],"46":[["        translates YCP `continue` statements inside blocks as Ruby `next`",{"fg":2}],["                                                          ",{}]],"47":[["        statements                                                                                                                 ",{"fg":2}]],"48":[["      statement blocks                                                                                                             ",{}]],"49":[["        translates YCP statement blocks as Ruby statements",{"fg":2}],["                                                                         ",{}]],"50":[["      `if` statement                                                                                                               ",{}]],"51":[["        translates YCP `if` statements as Ruby `if` statements",{"fg":2}],["                                                                     ",{}]],"52":[["      `switch` statement                                                                                                           ",{}]]}}],[0.053917,{"lines":{"0":[["        translates YCP index operators as `Ops",{"fg":2}],["                                                                                     ",{}]],"1":[["        translates YCP index operators as appropriate `Ops",{"fg":2}],["                                                                         ",{}]],"2":[["      `is` operator                                                                                                                ",{}]],"3":[["        translates YCP `is` operators as `Ops",{"fg":2}],["                                                                                      ",{}]],"4":[["        translates YCP `is` operators as appropriate `Ops",{"fg":2}],["                                                                          ",{}]],"5":[["      double quote operator                                                                                                        ",{}]],"6":[["        translates YCP double quote operators as Ruby lambdas",{"fg":2}],["                                                                      ",{}]],"7":[["      type conversions                                                                                                             ",{}]],"8":[["        translates YCP type conversions as `Convert",{"fg":2}],["                                                                                ",{}]],"9":[["        translates YCP type conversions from `any` as appropriate `Convert",{"fg":2}],["                                                         ",{}]],"10":[["      `_` calls                                                                                                                    ",{}]],"11":[["        translates YCP `_` calls as `_` calls",{"fg":2}],["                                                                                      ",{}]],"12":[["      builtin calls                                                                                                                ",{}]],"13":[["        translates YCP builtin calls as `Builtins",{"fg":2}],["                                                                                  ",{}]],"14":[["        handles YCP builtin calls with a block as the last argument specially",{"fg":2}],["                                                      ",{}]],"15":[["        handles YCP builtin calls with a double quote expression as the last",{"fg":2}],["                                                       ",{}]],"16":[["        argument specially                                                                                                         ",{"fg":2}]],"17":[["      function calls                                                                                                               ",{}]],"18":[["        translates YCP function calls of toplevel functions as Ruby method calls",{"fg":2}],["                                                   ",{}]],"19":[["        translates YCP function calls of nested functions as invoking the `call`",{"fg":2}],["                                                   ",{}]],"20":[["        method on them                                                                                                             ",{"fg":2}]],"21":[["        translates YCP function reference calls as invoking the `call` method on",{"fg":2}],["                                                   ",{}]],"22":[["        them                                                                                                                       ",{"fg":2}]],"23":[["        translates YCP function calls with arguments passed by reference as",{"fg":2}],["                                                        ",{}]],"24":[["        sequences of statements that emulate YCP behavior in Ruby                                                                  ",{"fg":2}]],"25":[["    statements                                                                                                                     ",{}]],"26":[["      assignments                                                                                                                  ",{}]],"27":[["        translates simple YCP assignments as Ruby assignments",{"fg":2}],["                                                                      ",{}]],"28":[["        translates YCP assignments with brackets as `Ops",{"fg":2}],["                                                                           ",{}]],"29":[["      `textdomain` statement                                                                                                       ",{}]],"30":[["        translates YCP `textdomain` statements as `textdomain` calls",{"fg":2}],["                                                               ",{}]],"31":[["      `import` statement                                                                                                           ",{}]],"32":[["        translates YCP `import` statements as `Yast",{"fg":2}],["                                                                                ",{}]],"33":[["      `include` statement                                                                                                          ",{}]],"34":[["        translates YCP `include` statements as `Yast",{"fg":2}],["                                                                               ",{}]],"35":[["      `return` statement                                                                                                           ",{}]],"36":[["        translates YCP `return` statements inside functions as Ruby `return`",{"fg":2}],["                                                       ",{}]],"37":[["        statements                                                                                                                 ",{"fg":2}]],"38":[["        translates YCP `return` statements inside blocks as Ruby `next` statements",{"fg":2}],["                                                 ",{}]],"39":[["      `break` statement                                                                                                            ",{}]],"40":[["        translates YCP `break` statements inside loops as Ruby `next`",{"fg":2}],["                                                              ",{}]],"41":[["        statements                                                                                                                 ",{"fg":2}]],"42":[["        translates YCP `break` statements inside blocks as `raise Break` calls",{"fg":2}],["                                                     ",{}]],"43":[["      `continue` statement                                                                                                         ",{}]],"44":[["        translates YCP `continue` statements inside loops as Ruby `next` statements",{"fg":2}],["                                                ",{}]],"45":[["        translates YCP `continue` statements inside blocks as Ruby `next`",{"fg":2}],["                                                          ",{}]],"46":[["        statements                                                                                                                 ",{"fg":2}]],"47":[["      statement blocks                                                                                                             ",{}]],"48":[["        translates YCP statement blocks as Ruby statements",{"fg":2}],["                                                                         ",{}]],"49":[["      `if` statement                                                                                                               ",{}]],"50":[["        translates YCP `if` statements as Ruby `if` statements",{"fg":2}],["                                                                     ",{}]],"51":[["      `switch` statement                                                                                                           ",{}]],"52":[["        translates YCP `switch` statements as Ruby `case` statements",{"fg":2}],["                                                               ",{}]]}}],[0.04137,{"lines":{"0":[["        translates YCP index operators as appropriate `Ops",{"fg":2}],["                                                                         ",{}]],"1":[["      `is` operator                                                                                                                ",{}]],"2":[["        translates YCP `is` operators as `Ops",{"fg":2}],["                                                                                      ",{}]],"3":[["        translates YCP `is` operators as appropriate `Ops",{"fg":2}],["                                                                          ",{}]],"4":[["      double quote operator                                                                                                        ",{}]],"5":[["        translates YCP double quote operators as Ruby lambdas",{"fg":2}],["                                                                      ",{}]],"6":[["      type conversions                                                                                                             ",{}]],"7":[["        translates YCP type conversions as `Convert",{"fg":2}],["                                                                                ",{}]],"8":[["        translates YCP type conversions from `any` as appropriate `Convert",{"fg":2}],["                                                         ",{}]],"9":[["      `_` calls                                                                                                                    ",{}]],"10":[["        translates YCP `_` calls as `_` calls",{"fg":2}],["                                                                                      ",{}]],"11":[["      builtin calls                                                                                                                ",{}]],"12":[["        translates YCP builtin calls as `Builtins",{"fg":2}],["                                                                                  ",{}]],"13":[["        handles YCP builtin calls with a block as the last argument specially",{"fg":2}],["                                                      ",{}]],"14":[["        handles YCP builtin calls with a double quote expression as the last",{"fg":2}],["                                                       ",{}]],"15":[["        argument specially                                                                                                         ",{"fg":2}]],"16":[["      function calls                                                                                                               ",{}]],"17":[["        translates YCP function calls of toplevel functions as Ruby method calls",{"fg":2}],["                                                   ",{}]],"18":[["        translates YCP function calls of nested functions as invoking the `call`",{"fg":2}],["                                                   ",{}]],"19":[["        method on them                                                                                                             ",{"fg":2}]],"20":[["        translates YCP function reference calls as invoking the `call` method on",{"fg":2}],["                                                   ",{}]],"21":[["        them                                                                                                                       ",{"fg":2}]],"22":[["        translates YCP function calls with arguments passed by reference as",{"fg":2}],["                                                        ",{}]],"23":[["        sequences of statements that emulate YCP behavior in Ruby                                                                  ",{"fg":2}]],"24":[["    statements                                                                                                                     ",{}]],"25":[["      assignments                                                                                                                  ",{}]],"26":[["        translates simple YCP assignments as Ruby assignments",{"fg":2}],["                                                                      ",{}]],"27":[["        translates YCP assignments with brackets as `Ops",{"fg":2}],["                                                                           ",{}]],"28":[["      `textdomain` statement                                                                                                       ",{}]],"29":[["        translates YCP `textdomain` statements as `textdomain` calls",{"fg":2}],["                                                               ",{}]],"30":[["      `import` statement                                                                                                           ",{}]],"31":[["        translates YCP `import` statements as `Yast",{"fg":2}],["                                                                                ",{}]],"32":[["      `include` statement                                                                                                          ",{}]],"33":[["        translates YCP `include` statements as `Yast",{"fg":2}],["                                                                               ",{}]],"34":[["      `return` statement                                                                                                           ",{}]],"35":[["        translates YCP `return` statements inside functions as Ruby `return`",{"fg":2}],["                                                       ",{}]],"36":[["        statements                                                                                                                 ",{"fg":2}]],"37":[["        translates YCP `return` statements inside blocks as Ruby `next` statements",{"fg":2}],["                                                 ",{}]],"38":[["      `break` statement                                                                                                            ",{}]],"39":[["        translates YCP `break` statements inside loops as Ruby `next`",{"fg":2}],["                                                              ",{}]],"40":[["        statements                                                                                                                 ",{"fg":2}]],"41":[["        translates YCP `break` statements inside blocks as `raise Break` calls",{"fg":2}],["                                                     ",{}]],"42":[["      `continue` statement                                                                                                         ",{}]],"43":[["        translates YCP `continue` statements inside loops as Ruby `next` statements",{"fg":2}],["                                                ",{}]],"44":[["        translates YCP `continue` statements inside blocks as Ruby `next`",{"fg":2}],["                                                          ",{}]],"45":[["        statements                                                                                                                 ",{"fg":2}]],"46":[["      statement blocks                                                                                                             ",{}]],"47":[["        translates YCP statement blocks as Ruby statements",{"fg":2}],["                                                                         ",{}]],"48":[["      `if` statement                                                                                                               ",{}]],"49":[["        translates YCP `if` statements as Ruby `if` statements",{"fg":2}],["                                                                     ",{}]],"50":[["      `switch` statement                                                                                                           ",{}]],"51":[["        translates YCP `switch` statements as Ruby `case` statements",{"fg":2}],["                                                               ",{}]],"52":[["        does not support cases without a `break` or `return` at the end",{"fg":2}],["                                                            ",{}]]}}],[0.042695,{"lines":{"0":[["      `is` operator                                                                                                                ",{}]],"1":[["        translates YCP `is` operators as `Ops",{"fg":2}],["                                                                                      ",{}]],"2":[["        translates YCP `is` operators as appropriate `Ops",{"fg":2}],["                                                                          ",{}]],"3":[["      double quote operator                                                                                                        ",{}]],"4":[["        translates YCP double quote operators as Ruby lambdas",{"fg":2}],["                                                                      ",{}]],"5":[["      type conversions                                                                                                             ",{}]],"6":[["        translates YCP type conversions as `Convert",{"fg":2}],["                                                                                ",{}]],"7":[["        translates YCP type conversions from `any` as appropriate `Convert",{"fg":2}],["                                                         ",{}]],"8":[["      `_` calls                                                                                                                    ",{}]],"9":[["        translates YCP `_` calls as `_` calls",{"fg":2}],["                                                                                      ",{}]],"10":[["      builtin calls                                                                                                                ",{}]],"11":[["        translates YCP builtin calls as `Builtins",{"fg":2}],["                                                                                  ",{}]],"12":[["        handles YCP builtin calls with a block as the last argument specially",{"fg":2}],["                                                      ",{}]],"13":[["        handles YCP builtin calls with a double quote expression as the last",{"fg":2}],["                                                       ",{}]],"14":[["        argument specially                                                                                                         ",{"fg":2}]],"15":[["      function calls                                                                                                               ",{}]],"16":[["        translates YCP function calls of toplevel functions as Ruby method calls",{"fg":2}],["                                                   ",{}]],"17":[["        translates YCP function calls of nested functions as invoking the `call`",{"fg":2}],["                                                   ",{}]],"18":[["        method on them                                                                                                             ",{"fg":2}]],"19":[["        translates YCP function reference calls as invoking the `call` method on",{"fg":2}],["                                                   ",{}]],"20":[["        them                                                                                                                       ",{"fg":2}]],"21":[["        translates YCP function calls with arguments passed by reference as",{"fg":2}],["                                                        ",{}]],"22":[["        sequences of statements that emulate YCP behavior in Ruby                                                                  ",{"fg":2}]],"23":[["    statements                                                                                                                     ",{}]],"24":[["      assignments                                                                                                                  ",{}]],"25":[["        translates simple YCP assignments as Ruby assignments",{"fg":2}],["                                                                      ",{}]],"26":[["        translates YCP assignments with brackets as `Ops",{"fg":2}],["                                                                           ",{}]],"27":[["      `textdomain` statement                                                                                                       ",{}]],"28":[["        translates YCP `textdomain` statements as `textdomain` calls",{"fg":2}],["                                                               ",{}]],"29":[["      `import` statement                                                                                                           ",{}]],"30":[["        translates YCP `import` statements as `Yast",{"fg":2}],["                                                                                ",{}]],"31":[["      `include` statement                                                                                                          ",{}]],"32":[["        translates YCP `include` statements as `Yast",{"fg":2}],["                                                                               ",{}]],"33":[["      `return` statement                                                                                                           ",{}]],"34":[["        translates YCP `return` statements inside functions as Ruby `return`",{"fg":2}],["                                                       ",{}]],"35":[["        statements                                                                                                                 ",{"fg":2}]],"36":[["        translates YCP `return` statements inside blocks as Ruby `next` statements",{"fg":2}],["                                                 ",{}]],"37":[["      `break` statement                                                                                                            ",{}]],"38":[["        translates YCP `break` statements inside loops as Ruby `next`",{"fg":2}],["                                                              ",{}]],"39":[["        statements                                                                                                                 ",{"fg":2}]],"40":[["        translates YCP `break` statements inside blocks as `raise Break` calls",{"fg":2}],["                                                     ",{}]],"41":[["      `continue` statement                                                                                                         ",{}]],"42":[["        translates YCP `continue` statements inside loops as Ruby `next` statements",{"fg":2}],["                                                ",{}]],"43":[["        translates YCP `continue` statements inside blocks as Ruby `next`",{"fg":2}],["                                                          ",{}]],"44":[["        statements                                                                                                                 ",{"fg":2}]],"45":[["      statement blocks                                                                                                             ",{}]],"46":[["        translates YCP statement blocks as Ruby statements",{"fg":2}],["                                                                         ",{}]],"47":[["      `if` statement                                                                                                               ",{}]],"48":[["        translates YCP `if` statements as Ruby `if` statements",{"fg":2}],["                                                                     ",{}]],"49":[["      `switch` statement                                                                                                           ",{}]],"50":[["        translates YCP `switch` statements as Ruby `case` statements",{"fg":2}],["                                                               ",{}]],"51":[["        does not support cases without a `break` or `return` at the end",{"fg":2}],["                                                            ",{}]],"52":[["        does not support cases with `break` in the middle",{"fg":2}],["                                                                          ",{}]]}}],[0.08119800000000001,{"lines":{"0":[["        translates YCP `is` operators as `Ops",{"fg":2}],["                                                                                      ",{}]],"1":[["        translates YCP `is` operators as appropriate `Ops",{"fg":2}],["                                                                          ",{}]],"2":[["      double quote operator                                                                                                        ",{}]],"3":[["        translates YCP double quote operators as Ruby lambdas",{"fg":2}],["                                                                      ",{}]],"4":[["      type conversions                                                                                                             ",{}]],"5":[["        translates YCP type conversions as `Convert",{"fg":2}],["                                                                                ",{}]],"6":[["        translates YCP type conversions from `any` as appropriate `Convert",{"fg":2}],["                                                         ",{}]],"7":[["      `_` calls                                                                                                                    ",{}]],"8":[["        translates YCP `_` calls as `_` calls",{"fg":2}],["                                                                                      ",{}]],"9":[["      builtin calls                                                                                                                ",{}]],"10":[["        translates YCP builtin calls as `Builtins",{"fg":2}],["                                                                                  ",{}]],"11":[["        handles YCP builtin calls with a block as the last argument specially",{"fg":2}],["                                                      ",{}]],"12":[["        handles YCP builtin calls with a double quote expression as the last",{"fg":2}],["                                                       ",{}]],"13":[["        argument specially                                                                                                         ",{"fg":2}]],"14":[["      function calls                                                                                                               ",{}]],"15":[["        translates YCP function calls of toplevel functions as Ruby method calls",{"fg":2}],["                                                   ",{}]],"16":[["        translates YCP function calls of nested functions as invoking the `call`",{"fg":2}],["                                                   ",{}]],"17":[["        method on them                                                                                                             ",{"fg":2}]],"18":[["        translates YCP function reference calls as invoking the `call` method on",{"fg":2}],["                                                   ",{}]],"19":[["        them                                                                                                                       ",{"fg":2}]],"20":[["        translates YCP function calls with arguments passed by reference as",{"fg":2}],["                                                        ",{}]],"21":[["        sequences of statements that emulate YCP behavior in Ruby                                                                  ",{"fg":2}]],"22":[["    statements                                                                                                                     ",{}]],"23":[["      assignments                                                                                                                  ",{}]],"24":[["        translates simple YCP assignments as Ruby assignments",{"fg":2}],["                                                                      ",{}]],"25":[["        translates YCP assignments with brackets as `Ops",{"fg":2}],["                                                                           ",{}]],"26":[["      `textdomain` statement                                                                                                       ",{}]],"27":[["        translates YCP `textdomain` statements as `textdomain` calls",{"fg":2}],["                                                               ",{}]],"28":[["      `import` statement                                                                                                           ",{}]],"29":[["        translates YCP `import` statements as `Yast",{"fg":2}],["                                                                                ",{}]],"30":[["      `include` statement                                                                                                          ",{}]],"31":[["        translates YCP `include` statements as `Yast",{"fg":2}],["                                                                               ",{}]],"32":[["      `return` statement                                                                                                           ",{}]],"33":[["        translates YCP `return` statements inside functions as Ruby `return`",{"fg":2}],["                                                       ",{}]],"34":[["        statements                                                                                                                 ",{"fg":2}]],"35":[["        translates YCP `return` statements inside blocks as Ruby `next` statements",{"fg":2}],["                                                 ",{}]],"36":[["      `break` statement                                                                                                            ",{}]],"37":[["        translates YCP `break` statements inside loops as Ruby `next`",{"fg":2}],["                                                              ",{}]],"38":[["        statements                                                                                                                 ",{"fg":2}]],"39":[["        translates YCP `break` statements inside blocks as `raise Break` calls",{"fg":2}],["                                                     ",{}]],"40":[["      `continue` statement                                                                                                         ",{}]],"41":[["        translates YCP `continue` statements inside loops as Ruby `next` statements",{"fg":2}],["                                                ",{}]],"42":[["        translates YCP `continue` statements inside blocks as Ruby `next`",{"fg":2}],["                                                          ",{}]],"43":[["        statements                                                                                                                 ",{"fg":2}]],"44":[["      statement blocks                                                                                                             ",{}]],"45":[["        translates YCP statement blocks as Ruby statements",{"fg":2}],["                                                                         ",{}]],"46":[["      `if` statement                                                                                                               ",{}]],"47":[["        translates YCP `if` statements as Ruby `if` statements",{"fg":2}],["                                                                     ",{}]],"48":[["      `switch` statement                                                                                                           ",{}]],"49":[["        translates YCP `switch` statements as Ruby `case` statements",{"fg":2}],["                                                               ",{}]],"50":[["        does not support cases without a `break` or `return` at the end",{"fg":2}],["                                                            ",{}]],"51":[["        does not support cases with `break` in the middle",{"fg":2}],["                                                                          ",{}]],"52":[["        does not support defaults with `break` in the middle",{"fg":2}],["                                                                       ",{}]]}}],[0.000149,{"lines":{"0":[["        translates YCP `is` operators as appropriate `Ops",{"fg":2}],["                                                                          ",{}]],"1":[["      double quote operator                                                                                                        ",{}]],"2":[["        translates YCP double quote operators as Ruby lambdas",{"fg":2}],["                                                                      ",{}]],"3":[["      type conversions                                                                                                             ",{}]],"4":[["        translates YCP type conversions as `Convert",{"fg":2}],["                                                                                ",{}]],"5":[["        translates YCP type conversions from `any` as appropriate `Convert",{"fg":2}],["                                                         ",{}]],"6":[["      `_` calls                                                                                                                    ",{}]],"7":[["        translates YCP `_` calls as `_` calls",{"fg":2}],["                                                                                      ",{}]],"8":[["      builtin calls                                                                                                                ",{}]],"9":[["        translates YCP builtin calls as `Builtins",{"fg":2}],["                                                                                  ",{}]],"10":[["        handles YCP builtin calls with a block as the last argument specially",{"fg":2}],["                                                      ",{}]],"11":[["        handles YCP builtin calls with a double quote expression as the last",{"fg":2}],["                                                       ",{}]],"12":[["        argument specially                                                                                                         ",{"fg":2}]],"13":[["      function calls                                                                                                               ",{}]],"14":[["        translates YCP function calls of toplevel functions as Ruby method calls",{"fg":2}],["                                                   ",{}]],"15":[["        translates YCP function calls of nested functions as invoking the `call`",{"fg":2}],["                                                   ",{}]],"16":[["        method on them                                                                                                             ",{"fg":2}]],"17":[["        translates YCP function reference calls as invoking the `call` method on",{"fg":2}],["                                                   ",{}]],"18":[["        them                                                                                                                       ",{"fg":2}]],"19":[["        translates YCP function calls with arguments passed by reference as",{"fg":2}],["                                                        ",{}]],"20":[["        sequences of statements that emulate YCP behavior in Ruby                                                                  ",{"fg":2}]],"21":[["    statements                                                                                                                     ",{}]],"22":[["      assignments                                                                                                                  ",{}]],"23":[["        translates simple YCP assignments as Ruby assignments",{"fg":2}],["                                                                      ",{}]],"24":[["        translates YCP assignments with brackets as `Ops",{"fg":2}],["                                                                           ",{}]],"25":[["      `textdomain` statement                                                                                                       ",{}]],"26":[["        translates YCP `textdomain` statements as `textdomain` calls",{"fg":2}],["                                                               ",{}]],"27":[["      `import` statement                                                                                                           ",{}]],"28":[["        translates YCP `import` statements as `Yast",{"fg":2}],["                                                                                ",{}]],"29":[["      `include` statement                                                                                                          ",{}]],"30":[["        translates YCP `include` statements as `Yast",{"fg":2}],["                                                                               ",{}]],"31":[["      `return` statement                                                                                                           ",{}]],"32":[["        translates YCP `return` statements inside functions as Ruby `return`",{"fg":2}],["                                                       ",{}]],"33":[["        statements                                                                                                                 ",{"fg":2}]],"34":[["        translates YCP `return` statements inside blocks as Ruby `next` statements",{"fg":2}],["                                                 ",{}]],"35":[["      `break` statement                                                                                                            ",{}]],"36":[["        translates YCP `break` statements inside loops as Ruby `next`",{"fg":2}],["                                                              ",{}]],"37":[["        statements                                                                                                                 ",{"fg":2}]],"38":[["        translates YCP `break` statements inside blocks as `raise Break` calls",{"fg":2}],["                                                     ",{}]],"39":[["      `continue` statement                                                                                                         ",{}]],"40":[["        translates YCP `continue` statements inside loops as Ruby `next` statements",{"fg":2}],["                                                ",{}]],"41":[["        translates YCP `continue` statements inside blocks as Ruby `next`",{"fg":2}],["                                                          ",{}]],"42":[["        statements                                                                                                                 ",{"fg":2}]],"43":[["      statement blocks                                                                                                             ",{}]],"44":[["        translates YCP statement blocks as Ruby statements",{"fg":2}],["                                                                         ",{}]],"45":[["      `if` statement                                                                                                               ",{}]],"46":[["        translates YCP `if` statements as Ruby `if` statements",{"fg":2}],["                                                                     ",{}]],"47":[["      `switch` statement                                                                                                           ",{}]],"48":[["        translates YCP `switch` statements as Ruby `case` statements",{"fg":2}],["                                                               ",{}]],"49":[["        does not support cases without a `break` or `return` at the end",{"fg":2}],["                                                            ",{}]],"50":[["        does not support cases with `break` in the middle",{"fg":2}],["                                                                          ",{}]],"51":[["        does not support defaults with `break` in the middle",{"fg":2}],["                                                                       ",{}]],"52":[["      `while` statement                                                                                                            ",{}]]}}],[0.050757,{"lines":{"0":[["      double quote operator                                                                                                        ",{}]],"1":[["        translates YCP double quote operators as Ruby lambdas",{"fg":2}],["                                                                      ",{}]],"2":[["      type conversions                                                                                                             ",{}]],"3":[["        translates YCP type conversions as `Convert",{"fg":2}],["                                                                                ",{}]],"4":[["        translates YCP type conversions from `any` as appropriate `Convert",{"fg":2}],["                                                         ",{}]],"5":[["      `_` calls                                                                                                                    ",{}]],"6":[["        translates YCP `_` calls as `_` calls",{"fg":2}],["                                                                                      ",{}]],"7":[["      builtin calls                                                                                                                ",{}]],"8":[["        translates YCP builtin calls as `Builtins",{"fg":2}],["                                                                                  ",{}]],"9":[["        handles YCP builtin calls with a block as the last argument specially",{"fg":2}],["                                                      ",{}]],"10":[["        handles YCP builtin calls with a double quote expression as the last",{"fg":2}],["                                                       ",{}]],"11":[["        argument specially                                                                                                         ",{"fg":2}]],"12":[["      function calls                                                                                                               ",{}]],"13":[["        translates YCP function calls of toplevel functions as Ruby method calls",{"fg":2}],["                                                   ",{}]],"14":[["        translates YCP function calls of nested functions as invoking the `call`",{"fg":2}],["                                                   ",{}]],"15":[["        method on them                                                                                                             ",{"fg":2}]],"16":[["        translates YCP function reference calls as invoking the `call` method on",{"fg":2}],["                                                   ",{}]],"17":[["        them                                                                                                                       ",{"fg":2}]],"18":[["        translates YCP function calls with arguments passed by reference as",{"fg":2}],["                                                        ",{}]],"19":[["        sequences of statements that emulate YCP behavior in Ruby                                                                  ",{"fg":2}]],"20":[["    statements                                                                                                                     ",{}]],"21":[["      assignments                                                                                                                  ",{}]],"22":[["        translates simple YCP assignments as Ruby assignments",{"fg":2}],["                                                                      ",{}]],"23":[["        translates YCP assignments with brackets as `Ops",{"fg":2}],["                                                                           ",{}]],"24":[["      `textdomain` statement                                                                                                       ",{}]],"25":[["        translates YCP `textdomain` statements as `textdomain` calls",{"fg":2}],["                                                               ",{}]],"26":[["      `import` statement                                                                                                           ",{}]],"27":[["        translates YCP `import` statements as `Yast",{"fg":2}],["                                                                                ",{}]],"28":[["      `include` statement                                                                                                          ",{}]],"29":[["        translates YCP `include` statements as `Yast",{"fg":2}],["                                                                               ",{}]],"30":[["      `return` statement                                                                                                           ",{}]],"31":[["        translates YCP `return` statements inside functions as Ruby `return`",{"fg":2}],["                                                       ",{}]],"32":[["        statements                                                                                                                 ",{"fg":2}]],"33":[["        translates YCP `return` statements inside blocks as Ruby `next` statements",{"fg":2}],["                                                 ",{}]],"34":[["      `break` statement                                                                                                            ",{}]],"35":[["        translates YCP `break` statements inside loops as Ruby `next`",{"fg":2}],["                                                              ",{}]],"36":[["        statements                                                                                                                 ",{"fg":2}]],"37":[["        translates YCP `break` statements inside blocks as `raise Break` calls",{"fg":2}],["                                                     ",{}]],"38":[["      `continue` statement                                                                                                         ",{}]],"39":[["        translates YCP `continue` statements inside loops as Ruby `next` statements",{"fg":2}],["                                                ",{}]],"40":[["        translates YCP `continue` statements inside blocks as Ruby `next`",{"fg":2}],["                                                          ",{}]],"41":[["        statements                                                                                                                 ",{"fg":2}]],"42":[["      statement blocks                                                                                                             ",{}]],"43":[["        translates YCP statement blocks as Ruby statements",{"fg":2}],["                                                                         ",{}]],"44":[["      `if` statement                                                                                                               ",{}]],"45":[["        translates YCP `if` statements as Ruby `if` statements",{"fg":2}],["                                                                     ",{}]],"46":[["      `switch` statement                                                                                                           ",{}]],"47":[["        translates YCP `switch` statements as Ruby `case` statements",{"fg":2}],["                                                               ",{}]],"48":[["        does not support cases without a `break` or `return` at the end",{"fg":2}],["                                                            ",{}]],"49":[["        does not support cases with `break` in the middle",{"fg":2}],["                                                                          ",{}]],"50":[["        does not support defaults with `break` in the middle",{"fg":2}],["                                                                       ",{}]],"51":[["      `while` statement                                                                                                            ",{}]],"52":[["        translates YCP `while` statements as Ruby `while` statements",{"fg":2}],["                                                               ",{}]]}}],[0.000145,{"lines":{"0":[["        translates YCP double quote operators as Ruby lambdas",{"fg":2}],["                                                                      ",{}]],"1":[["      type conversions                                                                                                             ",{}]],"2":[["        translates YCP type conversions as `Convert",{"fg":2}],["                                                                                ",{}]],"3":[["        translates YCP type conversions from `any` as appropriate `Convert",{"fg":2}],["                                                         ",{}]],"4":[["      `_` calls                                                                                                                    ",{}]],"5":[["        translates YCP `_` calls as `_` calls",{"fg":2}],["                                                                                      ",{}]],"6":[["      builtin calls                                                                                                                ",{}]],"7":[["        translates YCP builtin calls as `Builtins",{"fg":2}],["                                                                                  ",{}]],"8":[["        handles YCP builtin calls with a block as the last argument specially",{"fg":2}],["                                                      ",{}]],"9":[["        handles YCP builtin calls with a double quote expression as the last",{"fg":2}],["                                                       ",{}]],"10":[["        argument specially                                                                                                         ",{"fg":2}]],"11":[["      function calls                                                                                                               ",{}]],"12":[["        translates YCP function calls of toplevel functions as Ruby method calls",{"fg":2}],["                                                   ",{}]],"13":[["        translates YCP function calls of nested functions as invoking the `call`",{"fg":2}],["                                                   ",{}]],"14":[["        method on them                                                                                                             ",{"fg":2}]],"15":[["        translates YCP function reference calls as invoking the `call` method on",{"fg":2}],["                                                   ",{}]],"16":[["        them                                                                                                                       ",{"fg":2}]],"17":[["        translates YCP function calls with arguments passed by reference as",{"fg":2}],["                                                        ",{}]],"18":[["        sequences of statements that emulate YCP behavior in Ruby                                                                  ",{"fg":2}]],"19":[["    statements                                                                                                                     ",{}]],"20":[["      assignments                                                                                                                  ",{}]],"21":[["        translates simple YCP assignments as Ruby assignments",{"fg":2}],["                                                                      ",{}]],"22":[["        translates YCP assignments with brackets as `Ops",{"fg":2}],["                                                                           ",{}]],"23":[["      `textdomain` statement                                                                                                       ",{}]],"24":[["        translates YCP `textdomain` statements as `textdomain` calls",{"fg":2}],["                                                               ",{}]],"25":[["      `import` statement                                                                                                           ",{}]],"26":[["        translates YCP `import` statements as `Yast",{"fg":2}],["                                                                                ",{}]],"27":[["      `include` statement                                                                                                          ",{}]],"28":[["        translates YCP `include` statements as `Yast",{"fg":2}],["                                                                               ",{}]],"29":[["      `return` statement                                                                                                           ",{}]],"30":[["        translates YCP `return` statements inside functions as Ruby `return`",{"fg":2}],["                                                       ",{}]],"31":[["        statements                                                                                                                 ",{"fg":2}]],"32":[["        translates YCP `return` statements inside blocks as Ruby `next` statements",{"fg":2}],["                                                 ",{}]],"33":[["      `break` statement                                                                                                            ",{}]],"34":[["        translates YCP `break` statements inside loops as Ruby `next`",{"fg":2}],["                                                              ",{}]],"35":[["        statements                                                                                                                 ",{"fg":2}]],"36":[["        translates YCP `break` statements inside blocks as `raise Break` calls",{"fg":2}],["                                                     ",{}]],"37":[["      `continue` statement                                                                                                         ",{}]],"38":[["        translates YCP `continue` statements inside loops as Ruby `next` statements",{"fg":2}],["                                                ",{}]],"39":[["        translates YCP `continue` statements inside blocks as Ruby `next`",{"fg":2}],["                                                          ",{}]],"40":[["        statements                                                                                                                 ",{"fg":2}]],"41":[["      statement blocks                                                                                                             ",{}]],"42":[["        translates YCP statement blocks as Ruby statements",{"fg":2}],["                                                                         ",{}]],"43":[["      `if` statement                                                                                                               ",{}]],"44":[["        translates YCP `if` statements as Ruby `if` statements",{"fg":2}],["                                                                     ",{}]],"45":[["      `switch` statement                                                                                                           ",{}]],"46":[["        translates YCP `switch` statements as Ruby `case` statements",{"fg":2}],["                                                               ",{}]],"47":[["        does not support cases without a `break` or `return` at the end",{"fg":2}],["                                                            ",{}]],"48":[["        does not support cases with `break` in the middle",{"fg":2}],["                                                                          ",{}]],"49":[["        does not support defaults with `break` in the middle",{"fg":2}],["                                                                       ",{}]],"50":[["      `while` statement                                                                                                            ",{}]],"51":[["        translates YCP `while` statements as Ruby `while` statements",{"fg":2}],["                                                               ",{}]],"52":[["      `do` statement                                                                                                               ",{}]]}}],[0.051016,{"lines":{"0":[["      type conversions                                                                                                             ",{}]],"1":[["        translates YCP type conversions as `Convert",{"fg":2}],["                                                                                ",{}]],"2":[["        translates YCP type conversions from `any` as appropriate `Convert",{"fg":2}],["                                                         ",{}]],"3":[["      `_` calls                                                                                                                    ",{}]],"4":[["        translates YCP `_` calls as `_` calls",{"fg":2}],["                                                                                      ",{}]],"5":[["      builtin calls                                                                                                                ",{}]],"6":[["        translates YCP builtin calls as `Builtins",{"fg":2}],["                                                                                  ",{}]],"7":[["        handles YCP builtin calls with a block as the last argument specially",{"fg":2}],["                                                      ",{}]],"8":[["        handles YCP builtin calls with a double quote expression as the last",{"fg":2}],["                                                       ",{}]],"9":[["        argument specially                                                                                                         ",{"fg":2}]],"10":[["      function calls                                                                                                               ",{}]],"11":[["        translates YCP function calls of toplevel functions as Ruby method calls",{"fg":2}],["                                                   ",{}]],"12":[["        translates YCP function calls of nested functions as invoking the `call`",{"fg":2}],["                                                   ",{}]],"13":[["        method on them                                                                                                             ",{"fg":2}]],"14":[["        translates YCP function reference calls as invoking the `call` method on",{"fg":2}],["                                                   ",{}]],"15":[["        them                                                                                                                       ",{"fg":2}]],"16":[["        translates YCP function calls with arguments passed by reference as",{"fg":2}],["                                                        ",{}]],"17":[["        sequences of statements that emulate YCP behavior in Ruby                                                                  ",{"fg":2}]],"18":[["    statements                                                                                                                     ",{}]],"19":[["      assignments                                                                                                                  ",{}]],"20":[["        translates simple YCP assignments as Ruby assignments",{"fg":2}],["                                                                      ",{}]],"21":[["        translates YCP assignments with brackets as `Ops",{"fg":2}],["                                                                           ",{}]],"22":[["      `textdomain` statement                                                                                                       ",{}]],"23":[["        translates YCP `textdomain` statements as `textdomain` calls",{"fg":2}],["                                                               ",{}]],"24":[["      `import` statement                                                                                                           ",{}]],"25":[["        translates YCP `import` statements as `Yast",{"fg":2}],["                                                                                ",{}]],"26":[["      `include` statement                                                                                                          ",{}]],"27":[["        translates YCP `include` statements as `Yast",{"fg":2}],["                                                                               ",{}]],"28":[["      `return` statement                                                                                                           ",{}]],"29":[["        translates YCP `return` statements inside functions as Ruby `return`",{"fg":2}],["                                                       ",{}]],"30":[["        statements                                                                                                                 ",{"fg":2}]],"31":[["        translates YCP `return` statements inside blocks as Ruby `next` statements",{"fg":2}],["                                                 ",{}]],"32":[["      `break` statement                                                                                                            ",{}]],"33":[["        translates YCP `break` statements inside loops as Ruby `next`",{"fg":2}],["                                                              ",{}]],"34":[["        statements                                                                                                                 ",{"fg":2}]],"35":[["        translates YCP `break` statements inside blocks as `raise Break` calls",{"fg":2}],["                                                     ",{}]],"36":[["      `continue` statement                                                                                                         ",{}]],"37":[["        translates YCP `continue` statements inside loops as Ruby `next` statements",{"fg":2}],["                                                ",{}]],"38":[["        translates YCP `continue` statements inside blocks as Ruby `next`",{"fg":2}],["                                                          ",{}]],"39":[["        statements                                                                                                                 ",{"fg":2}]],"40":[["      statement blocks                                                                                                             ",{}]],"41":[["        translates YCP statement blocks as Ruby statements",{"fg":2}],["                                                                         ",{}]],"42":[["      `if` statement                                                                                                               ",{}]],"43":[["        translates YCP `if` statements as Ruby `if` statements",{"fg":2}],["                                                                     ",{}]],"44":[["      `switch` statement                                                                                                           ",{}]],"45":[["        translates YCP `switch` statements as Ruby `case` statements",{"fg":2}],["                                                               ",{}]],"46":[["        does not support cases without a `break` or `return` at the end",{"fg":2}],["                                                            ",{}]],"47":[["        does not support cases with `break` in the middle",{"fg":2}],["                                                                          ",{}]],"48":[["        does not support defaults with `break` in the middle",{"fg":2}],["                                                                       ",{}]],"49":[["      `while` statement                                                                                                            ",{}]],"50":[["        translates YCP `while` statements as Ruby `while` statements",{"fg":2}],["                                                               ",{}]],"51":[["      `do` statement                                                                                                               ",{}]],"52":[["        translates YCP `do` statements as Ruby `while` statements",{"fg":2}],["                                                                  ",{}]]}}],[0.000115,{"lines":{"0":[["        translates YCP type conversions as `Convert",{"fg":2}],["                                                                                ",{}]],"1":[["        translates YCP type conversions from `any` as appropriate `Convert",{"fg":2}],["                                                         ",{}]],"2":[["      `_` calls                                                                                                                    ",{}]],"3":[["        translates YCP `_` calls as `_` calls",{"fg":2}],["                                                                                      ",{}]],"4":[["      builtin calls                                                                                                                ",{}]],"5":[["        translates YCP builtin calls as `Builtins",{"fg":2}],["                                                                                  ",{}]],"6":[["        handles YCP builtin calls with a block as the last argument specially",{"fg":2}],["                                                      ",{}]],"7":[["        handles YCP builtin calls with a double quote expression as the last",{"fg":2}],["                                                       ",{}]],"8":[["        argument specially                                                                                                         ",{"fg":2}]],"9":[["      function calls                                                                                                               ",{}]],"10":[["        translates YCP function calls of toplevel functions as Ruby method calls",{"fg":2}],["                                                   ",{}]],"11":[["        translates YCP function calls of nested functions as invoking the `call`",{"fg":2}],["                                                   ",{}]],"12":[["        method on them                                                                                                             ",{"fg":2}]],"13":[["        translates YCP function reference calls as invoking the `call` method on",{"fg":2}],["                                                   ",{}]],"14":[["        them                                                                                                                       ",{"fg":2}]],"15":[["        translates YCP function calls with arguments passed by reference as",{"fg":2}],["                                                        ",{}]],"16":[["        sequences of statements that emulate YCP behavior in Ruby                                                                  ",{"fg":2}]],"17":[["    statements                                                                                                                     ",{}]],"18":[["      assignments                                                                                                                  ",{}]],"19":[["        translates simple YCP assignments as Ruby assignments",{"fg":2}],["                                                                      ",{}]],"20":[["        translates YCP assignments with brackets as `Ops",{"fg":2}],["                                                                           ",{}]],"21":[["      `textdomain` statement                                                                                                       ",{}]],"22":[["        translates YCP `textdomain` statements as `textdomain` calls",{"fg":2}],["                                                               ",{}]],"23":[["      `import` statement                                                                                                           ",{}]],"24":[["        translates YCP `import` statements as `Yast",{"fg":2}],["                                                                                ",{}]],"25":[["      `include` statement                                                                                                          ",{}]],"26":[["        translates YCP `include` statements as `Yast",{"fg":2}],["                                                                               ",{}]],"27":[["      `return` statement                                                                                                           ",{}]],"28":[["        translates YCP `return` statements inside functions as Ruby `return`",{"fg":2}],["                                                       ",{}]],"29":[["        statements                                                                                                                 ",{"fg":2}]],"30":[["        translates YCP `return` statements inside blocks as Ruby `next` statements",{"fg":2}],["                                                 ",{}]],"31":[["      `break` statement                                                                                                            ",{}]],"32":[["        translates YCP `break` statements inside loops as Ruby `next`",{"fg":2}],["                                                              ",{}]],"33":[["        statements                                                                                                                 ",{"fg":2}]],"34":[["        translates YCP `break` statements inside blocks as `raise Break` calls",{"fg":2}],["                                                     ",{}]],"35":[["      `continue` statement                                                                                                         ",{}]],"36":[["        translates YCP `continue` statements inside loops as Ruby `next` statements",{"fg":2}],["                                                ",{}]],"37":[["        translates YCP `continue` statements inside blocks as Ruby `next`",{"fg":2}],["                                                          ",{}]],"38":[["        statements                                                                                                                 ",{"fg":2}]],"39":[["      statement blocks                                                                                                             ",{}]],"40":[["        translates YCP statement blocks as Ruby statements",{"fg":2}],["                                                                         ",{}]],"41":[["      `if` statement                                                                                                               ",{}]],"42":[["        translates YCP `if` statements as Ruby `if` statements",{"fg":2}],["                                                                     ",{}]],"43":[["      `switch` statement                                                                                                           ",{}]],"44":[["        translates YCP `switch` statements as Ruby `case` statements",{"fg":2}],["                                                               ",{}]],"45":[["        does not support cases without a `break` or `return` at the end",{"fg":2}],["                                                            ",{}]],"46":[["        does not support cases with `break` in the middle",{"fg":2}],["                                                                          ",{}]],"47":[["        does not support defaults with `break` in the middle",{"fg":2}],["                                                                       ",{}]],"48":[["      `while` statement                                                                                                            ",{}]],"49":[["        translates YCP `while` statements as Ruby `while` statements",{"fg":2}],["                                                               ",{}]],"50":[["      `do` statement                                                                                                               ",{}]],"51":[["        translates YCP `do` statements as Ruby `while` statements",{"fg":2}],["                                                                  ",{}]],"52":[["      `repeat` statement                                                                                                           ",{}]]}}],[0.048439,{"lines":{"0":[["        translates YCP type conversions from `any` as appropriate `Convert",{"fg":2}],["                                                         ",{}]],"1":[["      `_` calls                                                                                                                    ",{}]],"2":[["        translates YCP `_` calls as `_` calls",{"fg":2}],["                                                                                      ",{}]],"3":[["      builtin calls                                                                                                                ",{}]],"4":[["        translates YCP builtin calls as `Builtins",{"fg":2}],["                                                                                  ",{}]],"5":[["        handles YCP builtin calls with a block as the last argument specially",{"fg":2}],["                                                      ",{}]],"6":[["        handles YCP builtin calls with a double quote expression as the last",{"fg":2}],["                                                       ",{}]],"7":[["        argument specially                                                                                                         ",{"fg":2}]],"8":[["      function calls                                                                                                               ",{}]],"9":[["        translates YCP function calls of toplevel functions as Ruby method calls",{"fg":2}],["                                                   ",{}]],"10":[["        translates YCP function calls of nested functions as invoking the `call`",{"fg":2}],["                                                   ",{}]],"11":[["        method on them                                                                                                             ",{"fg":2}]],"12":[["        translates YCP function reference calls as invoking the `call` method on",{"fg":2}],["                                                   ",{}]],"13":[["        them                                                                                                                       ",{"fg":2}]],"14":[["        translates YCP function calls with arguments passed by reference as",{"fg":2}],["                                                        ",{}]],"15":[["        sequences of statements that emulate YCP behavior in Ruby                                                                  ",{"fg":2}]],"16":[["    statements                                                                                                                     ",{}]],"17":[["      assignments                                                                                                                  ",{}]],"18":[["        translates simple YCP assignments as Ruby assignments",{"fg":2}],["                                                                      ",{}]],"19":[["        translates YCP assignments with brackets as `Ops",{"fg":2}],["                                                                           ",{}]],"20":[["      `textdomain` statement                                                                                                       ",{}]],"21":[["        translates YCP `textdomain` statements as `textdomain` calls",{"fg":2}],["                                                               ",{}]],"22":[["      `import` statement                                                                                                           ",{}]],"23":[["        translates YCP `import` statements as `Yast",{"fg":2}],["                                                                                ",{}]],"24":[["      `include` statement                                                                                                          ",{}]],"25":[["        translates YCP `include` statements as `Yast",{"fg":2}],["                                                                               ",{}]],"26":[["      `return` statement                                                                                                           ",{}]],"27":[["        translates YCP `return` statements inside functions as Ruby `return`",{"fg":2}],["                                                       ",{}]],"28":[["        statements                                                                                                                 ",{"fg":2}]],"29":[["        translates YCP `return` statements inside blocks as Ruby `next` statements",{"fg":2}],["                                                 ",{}]],"30":[["      `break` statement                                                                                                            ",{}]],"31":[["        translates YCP `break` statements inside loops as Ruby `next`",{"fg":2}],["                                                              ",{}]],"32":[["        statements                                                                                                                 ",{"fg":2}]],"33":[["        translates YCP `break` statements inside blocks as `raise Break` calls",{"fg":2}],["                                                     ",{}]],"34":[["      `continue` statement                                                                                                         ",{}]],"35":[["        translates YCP `continue` statements inside loops as Ruby `next` statements",{"fg":2}],["                                                ",{}]],"36":[["        translates YCP `continue` statements inside blocks as Ruby `next`",{"fg":2}],["                                                          ",{}]],"37":[["        statements                                                                                                                 ",{"fg":2}]],"38":[["      statement blocks                                                                                                             ",{}]],"39":[["        translates YCP statement blocks as Ruby statements",{"fg":2}],["                                                                         ",{}]],"40":[["      `if` statement                                                                                                               ",{}]],"41":[["        translates YCP `if` statements as Ruby `if` statements",{"fg":2}],["                                                                     ",{}]],"42":[["      `switch` statement                                                                                                           ",{}]],"43":[["        translates YCP `switch` statements as Ruby `case` statements",{"fg":2}],["                                                               ",{}]],"44":[["        does not support cases without a `break` or `return` at the end",{"fg":2}],["                                                            ",{}]],"45":[["        does not support cases with `break` in the middle",{"fg":2}],["                                                                          ",{}]],"46":[["        does not support defaults with `break` in the middle",{"fg":2}],["                                                                       ",{}]],"47":[["      `while` statement                                                                                                            ",{}]],"48":[["        translates YCP `while` statements as Ruby `while` statements",{"fg":2}],["                                                               ",{}]],"49":[["      `do` statement                                                                                                               ",{}]],"50":[["        translates YCP `do` statements as Ruby `while` statements",{"fg":2}],["                                                                  ",{}]],"51":[["      `repeat` statement                                                                                                           ",{}]],"52":[["        translates YCP `repeat` statements as Ruby `until` statements",{"fg":2}],["                                                              ",{}]]}}],[0.000127,{"lines":{"0":[["      `_` calls                                                                                                                    ",{}]],"1":[["        translates YCP `_` calls as `_` calls",{"fg":2}],["                                                                                      ",{}]],"2":[["      builtin calls                                                                                                                ",{}]],"3":[["        translates YCP builtin calls as `Builtins",{"fg":2}],["                                                                                  ",{}]],"4":[["        handles YCP builtin calls with a block as the last argument specially",{"fg":2}],["                                                      ",{}]],"5":[["        handles YCP builtin calls with a double quote expression as the last",{"fg":2}],["                                                       ",{}]],"6":[["        argument specially                                                                                                         ",{"fg":2}]],"7":[["      function calls                                                                                                               ",{}]],"8":[["        translates YCP function calls of toplevel functions as Ruby method calls",{"fg":2}],["                                                   ",{}]],"9":[["        translates YCP function calls of nested functions as invoking the `call`",{"fg":2}],["                                                   ",{}]],"10":[["        method on them                                                                                                             ",{"fg":2}]],"11":[["        translates YCP function reference calls as invoking the `call` method on",{"fg":2}],["                                                   ",{}]],"12":[["        them                                                                                                                       ",{"fg":2}]],"13":[["        translates YCP function calls with arguments passed by reference as",{"fg":2}],["                                                        ",{}]],"14":[["        sequences of statements that emulate YCP behavior in Ruby                                                                  ",{"fg":2}]],"15":[["    statements                                                                                                                     ",{}]],"16":[["      assignments                                                                                                                  ",{}]],"17":[["        translates simple YCP assignments as Ruby assignments",{"fg":2}],["                                                                      ",{}]],"18":[["        translates YCP assignments with brackets as `Ops",{"fg":2}],["                                                                           ",{}]],"19":[["      `textdomain` statement                                                                                                       ",{}]],"20":[["        translates YCP `textdomain` statements as `textdomain` calls",{"fg":2}],["                                                               ",{}]],"21":[["      `import` statement                                                                                                           ",{}]],"22":[["        translates YCP `import` statements as `Yast",{"fg":2}],["                                                                                ",{}]],"23":[["      `include` statement                                                                                                          ",{}]],"24":[["        translates YCP `include` statements as `Yast",{"fg":2}],["                                                                               ",{}]],"25":[["      `return` statement                                                                                                           ",{}]],"26":[["        translates YCP `return` statements inside functions as Ruby `return`",{"fg":2}],["                                                       ",{}]],"27":[["        statements                                                                                                                 ",{"fg":2}]],"28":[["        translates YCP `return` statements inside blocks as Ruby `next` statements",{"fg":2}],["                                                 ",{}]],"29":[["      `break` statement                                                                                                            ",{}]],"30":[["        translates YCP `break` statements inside loops as Ruby `next`",{"fg":2}],["                                                              ",{}]],"31":[["        statements                                                                                                                 ",{"fg":2}]],"32":[["        translates YCP `break` statements inside blocks as `raise Break` calls",{"fg":2}],["                                                     ",{}]],"33":[["      `continue` statement                                                                                                         ",{}]],"34":[["        translates YCP `continue` statements inside loops as Ruby `next` statements",{"fg":2}],["                                                ",{}]],"35":[["        translates YCP `continue` statements inside blocks as Ruby `next`",{"fg":2}],["                                                          ",{}]],"36":[["        statements                                                                                                                 ",{"fg":2}]],"37":[["      statement blocks                                                                                                             ",{}]],"38":[["        translates YCP statement blocks as Ruby statements",{"fg":2}],["                                                                         ",{}]],"39":[["      `if` statement                                                                                                               ",{}]],"40":[["        translates YCP `if` statements as Ruby `if` statements",{"fg":2}],["                                                                     ",{}]],"41":[["      `switch` statement                                                                                                           ",{}]],"42":[["        translates YCP `switch` statements as Ruby `case` statements",{"fg":2}],["                                                               ",{}]],"43":[["        does not support cases without a `break` or `return` at the end",{"fg":2}],["                                                            ",{}]],"44":[["        does not support cases with `break` in the middle",{"fg":2}],["                                                                          ",{}]],"45":[["        does not support defaults with `break` in the middle",{"fg":2}],["                                                                       ",{}]],"46":[["      `while` statement                                                                                                            ",{}]],"47":[["        translates YCP `while` statements as Ruby `while` statements",{"fg":2}],["                                                               ",{}]],"48":[["      `do` statement                                                                                                               ",{}]],"49":[["        translates YCP `do` statements as Ruby `while` statements",{"fg":2}],["                                                                  ",{}]],"50":[["      `repeat` statement                                                                                                           ",{}]],"51":[["        translates YCP `repeat` statements as Ruby `until` statements",{"fg":2}],["                                                              ",{}]],"52":[["      function definitions                                                                                                         ",{}]]}}],[0.054578,{"lines":{"0":[["        translates YCP `_` calls as `_` calls",{"fg":2}],["                                                                                      ",{}]],"1":[["      builtin calls                                                                                                                ",{}]],"2":[["        translates YCP builtin calls as `Builtins",{"fg":2}],["                                                                                  ",{}]],"3":[["        handles YCP builtin calls with a block as the last argument specially",{"fg":2}],["                                                      ",{}]],"4":[["        handles YCP builtin calls with a double quote expression as the last",{"fg":2}],["                                                       ",{}]],"5":[["        argument specially                                                                                                         ",{"fg":2}]],"6":[["      function calls                                                                                                               ",{}]],"7":[["        translates YCP function calls of toplevel functions as Ruby method calls",{"fg":2}],["                                                   ",{}]],"8":[["        translates YCP function calls of nested functions as invoking the `call`",{"fg":2}],["                                                   ",{}]],"9":[["        method on them                                                                                                             ",{"fg":2}]],"10":[["        translates YCP function reference calls as invoking the `call` method on",{"fg":2}],["                                                   ",{}]],"11":[["        them                                                                                                                       ",{"fg":2}]],"12":[["        translates YCP function calls with arguments passed by reference as",{"fg":2}],["                                                        ",{}]],"13":[["        sequences of statements that emulate YCP behavior in Ruby                                                                  ",{"fg":2}]],"14":[["    statements                                                                                                                     ",{}]],"15":[["      assignments                                                                                                                  ",{}]],"16":[["        translates simple YCP assignments as Ruby assignments",{"fg":2}],["                                                                      ",{}]],"17":[["        translates YCP assignments with brackets as `Ops",{"fg":2}],["                                                                           ",{}]],"18":[["      `textdomain` statement                                                                                                       ",{}]],"19":[["        translates YCP `textdomain` statements as `textdomain` calls",{"fg":2}],["                                                               ",{}]],"20":[["      `import` statement                                                                                                           ",{}]],"21":[["        translates YCP `import` statements as `Yast",{"fg":2}],["                                                                                ",{}]],"22":[["      `include` statement                                                                                                          ",{}]],"23":[["        translates YCP `include` statements as `Yast",{"fg":2}],["                                                                               ",{}]],"24":[["      `return` statement                                                                                                           ",{}]],"25":[["        translates YCP `return` statements inside functions as Ruby `return`",{"fg":2}],["                                                       ",{}]],"26":[["        statements                                                                                                                 ",{"fg":2}]],"27":[["        translates YCP `return` statements inside blocks as Ruby `next` statements",{"fg":2}],["                                                 ",{}]],"28":[["      `break` statement                                                                                                            ",{}]],"29":[["        translates YCP `break` statements inside loops as Ruby `next`",{"fg":2}],["                                                              ",{}]],"30":[["        statements                                                                                                                 ",{"fg":2}]],"31":[["        translates YCP `break` statements inside blocks as `raise Break` calls",{"fg":2}],["                                                     ",{}]],"32":[["      `continue` statement                                                                                                         ",{}]],"33":[["        translates YCP `continue` statements inside loops as Ruby `next` statements",{"fg":2}],["                                                ",{}]],"34":[["        translates YCP `continue` statements inside blocks as Ruby `next`",{"fg":2}],["                                                          ",{}]],"35":[["        statements                                                                                                                 ",{"fg":2}]],"36":[["      statement blocks                                                                                                             ",{}]],"37":[["        translates YCP statement blocks as Ruby statements",{"fg":2}],["                                                                         ",{}]],"38":[["      `if` statement                                                                                                               ",{}]],"39":[["        translates YCP `if` statements as Ruby `if` statements",{"fg":2}],["                                                                     ",{}]],"40":[["      `switch` statement                                                                                                           ",{}]],"41":[["        translates YCP `switch` statements as Ruby `case` statements",{"fg":2}],["                                                               ",{}]],"42":[["        does not support cases without a `break` or `return` at the end",{"fg":2}],["                                                            ",{}]],"43":[["        does not support cases with `break` in the middle",{"fg":2}],["                                                                          ",{}]],"44":[["        does not support defaults with `break` in the middle",{"fg":2}],["                                                                       ",{}]],"45":[["      `while` statement                                                                                                            ",{}]],"46":[["        translates YCP `while` statements as Ruby `while` statements",{"fg":2}],["                                                               ",{}]],"47":[["      `do` statement                                                                                                               ",{}]],"48":[["        translates YCP `do` statements as Ruby `while` statements",{"fg":2}],["                                                                  ",{}]],"49":[["      `repeat` statement                                                                                                           ",{}]],"50":[["        translates YCP `repeat` statements as Ruby `until` statements",{"fg":2}],["                                                              ",{}]],"51":[["      function definitions                                                                                                         ",{}]],"52":[["        translates toplevel function definitions as Ruby method definitions",{"fg":2}],["                                                        ",{}]]}}],[0.055161,{"lines":{"0":[["      builtin calls                                                                                                                ",{}]],"1":[["        translates YCP builtin calls as `Builtins",{"fg":2}],["                                                                                  ",{}]],"2":[["        handles YCP builtin calls with a block as the last argument specially",{"fg":2}],["                                                      ",{}]],"3":[["        handles YCP builtin calls with a double quote expression as the last",{"fg":2}],["                                                       ",{}]],"4":[["        argument specially                                                                                                         ",{"fg":2}]],"5":[["      function calls                                                                                                               ",{}]],"6":[["        translates YCP function calls of toplevel functions as Ruby method calls",{"fg":2}],["                                                   ",{}]],"7":[["        translates YCP function calls of nested functions as invoking the `call`",{"fg":2}],["                                                   ",{}]],"8":[["        method on them                                                                                                             ",{"fg":2}]],"9":[["        translates YCP function reference calls as invoking the `call` method on",{"fg":2}],["                                                   ",{}]],"10":[["        them                                                                                                                       ",{"fg":2}]],"11":[["        translates YCP function calls with arguments passed by reference as",{"fg":2}],["                                                        ",{}]],"12":[["        sequences of statements that emulate YCP behavior in Ruby                                                                  ",{"fg":2}]],"13":[["    statements                                                                                                                     ",{}]],"14":[["      assignments                                                                                                                  ",{}]],"15":[["        translates simple YCP assignments as Ruby assignments",{"fg":2}],["                                                                      ",{}]],"16":[["        translates YCP assignments with brackets as `Ops",{"fg":2}],["                                                                           ",{}]],"17":[["      `textdomain` statement                                                                                                       ",{}]],"18":[["        translates YCP `textdomain` statements as `textdomain` calls",{"fg":2}],["                                                               ",{}]],"19":[["      `import` statement                                                                                                           ",{}]],"20":[["        translates YCP `import` statements as `Yast",{"fg":2}],["                                                                                ",{}]],"21":[["      `include` statement                                                                                                          ",{}]],"22":[["        translates YCP `include` statements as `Yast",{"fg":2}],["                                                                               ",{}]],"23":[["      `return` statement                                                                                                           ",{}]],"24":[["        translates YCP `return` statements inside functions as Ruby `return`",{"fg":2}],["                                                       ",{}]],"25":[["        statements                                                                                                                 ",{"fg":2}]],"26":[["        translates YCP `return` statements inside blocks as Ruby `next` statements",{"fg":2}],["                                                 ",{}]],"27":[["      `break` statement                                                                                                            ",{}]],"28":[["        translates YCP `break` statements inside loops as Ruby `next`",{"fg":2}],["                                                              ",{}]],"29":[["        statements                                                                                                                 ",{"fg":2}]],"30":[["        translates YCP `break` statements inside blocks as `raise Break` calls",{"fg":2}],["                                                     ",{}]],"31":[["      `continue` statement                                                                                                         ",{}]],"32":[["        translates YCP `continue` statements inside loops as Ruby `next` statements",{"fg":2}],["                                                ",{}]],"33":[["        translates YCP `continue` statements inside blocks as Ruby `next`",{"fg":2}],["                                                          ",{}]],"34":[["        statements                                                                                                                 ",{"fg":2}]],"35":[["      statement blocks                                                                                                             ",{}]],"36":[["        translates YCP statement blocks as Ruby statements",{"fg":2}],["                                                                         ",{}]],"37":[["      `if` statement                                                                                                               ",{}]],"38":[["        translates YCP `if` statements as Ruby `if` statements",{"fg":2}],["                                                                     ",{}]],"39":[["      `switch` statement                                                                                                           ",{}]],"40":[["        translates YCP `switch` statements as Ruby `case` statements",{"fg":2}],["                                                               ",{}]],"41":[["        does not support cases without a `break` or `return` at the end",{"fg":2}],["                                                            ",{}]],"42":[["        does not support cases with `break` in the middle",{"fg":2}],["                                                                          ",{}]],"43":[["        does not support defaults with `break` in the middle",{"fg":2}],["                                                                       ",{}]],"44":[["      `while` statement                                                                                                            ",{}]],"45":[["        translates YCP `while` statements as Ruby `while` statements",{"fg":2}],["                                                               ",{}]],"46":[["      `do` statement                                                                                                               ",{}]],"47":[["        translates YCP `do` statements as Ruby `while` statements",{"fg":2}],["                                                                  ",{}]],"48":[["      `repeat` statement                                                                                                           ",{}]],"49":[["        translates YCP `repeat` statements as Ruby `until` statements",{"fg":2}],["                                                              ",{}]],"50":[["      function definitions                                                                                                         ",{}]],"51":[["        translates toplevel function definitions as Ruby method definitions",{"fg":2}],["                                                        ",{}]],"52":[["        translates nested YCP function definitions as Ruby lambdas",{"fg":2}],["                                                                 ",{}]]}}],[0.054682,{"lines":{"0":[["        handles YCP builtin calls with a block as the last argument specially",{"fg":2}],["                                                      ",{}]],"1":[["        handles YCP builtin calls with a double quote expression as the last",{"fg":2}],["                                                       ",{}]],"2":[["        argument specially                                                                                                         ",{"fg":2}]],"3":[["      function calls                                                                                                               ",{}]],"4":[["        translates YCP function calls of toplevel functions as Ruby method calls",{"fg":2}],["                                                   ",{}]],"5":[["        translates YCP function calls of nested functions as invoking the `call`",{"fg":2}],["                                                   ",{}]],"6":[["        method on them                                                                                                             ",{"fg":2}]],"7":[["        translates YCP function reference calls as invoking the `call` method on",{"fg":2}],["                                                   ",{}]],"8":[["        them                                                                                                                       ",{"fg":2}]],"9":[["        translates YCP function calls with arguments passed by reference as",{"fg":2}],["                                                        ",{}]],"10":[["        sequences of statements that emulate YCP behavior in Ruby                                                                  ",{"fg":2}]],"11":[["    statements                                                                                                                     ",{}]],"12":[["      assignments                                                                                                                  ",{}]],"13":[["        translates simple YCP assignments as Ruby assignments",{"fg":2}],["                                                                      ",{}]],"14":[["        translates YCP assignments with brackets as `Ops",{"fg":2}],["                                                                           ",{}]],"15":[["      `textdomain` statement                                                                                                       ",{}]],"16":[["        translates YCP `textdomain` statements as `textdomain` calls",{"fg":2}],["                                                               ",{}]],"17":[["      `import` statement                                                                                                           ",{}]],"18":[["        translates YCP `import` statements as `Yast",{"fg":2}],["                                                                                ",{}]],"19":[["      `include` statement                                                                                                          ",{}]],"20":[["        translates YCP `include` statements as `Yast",{"fg":2}],["                                                                               ",{}]],"21":[["      `return` statement                                                                                                           ",{}]],"22":[["        translates YCP `return` statements inside functions as Ruby `return`",{"fg":2}],["                                                       ",{}]],"23":[["        statements                                                                                                                 ",{"fg":2}]],"24":[["        translates YCP `return` statements inside blocks as Ruby `next` statements",{"fg":2}],["                                                 ",{}]],"25":[["      `break` statement                                                                                                            ",{}]],"26":[["        translates YCP `break` statements inside loops as Ruby `next`",{"fg":2}],["                                                              ",{}]],"27":[["        statements                                                                                                                 ",{"fg":2}]],"28":[["        translates YCP `break` statements inside blocks as `raise Break` calls",{"fg":2}],["                                                     ",{}]],"29":[["      `continue` statement                                                                                                         ",{}]],"30":[["        translates YCP `continue` statements inside loops as Ruby `next` statements",{"fg":2}],["                                                ",{}]],"31":[["        translates YCP `continue` statements inside blocks as Ruby `next`",{"fg":2}],["                                                          ",{}]],"32":[["        statements                                                                                                                 ",{"fg":2}]],"33":[["      statement blocks                                                                                                             ",{}]],"34":[["        translates YCP statement blocks as Ruby statements",{"fg":2}],["                                                                         ",{}]],"35":[["      `if` statement                                                                                                               ",{}]],"36":[["        translates YCP `if` statements as Ruby `if` statements",{"fg":2}],["                                                                     ",{}]],"37":[["      `switch` statement                                                                                                           ",{}]],"38":[["        translates YCP `switch` statements as Ruby `case` statements",{"fg":2}],["                                                               ",{}]],"39":[["        does not support cases without a `break` or `return` at the end",{"fg":2}],["                                                            ",{}]],"40":[["        does not support cases with `break` in the middle",{"fg":2}],["                                                                          ",{}]],"41":[["        does not support defaults with `break` in the middle",{"fg":2}],["                                                                       ",{}]],"42":[["      `while` statement                                                                                                            ",{}]],"43":[["        translates YCP `while` statements as Ruby `while` statements",{"fg":2}],["                                                               ",{}]],"44":[["      `do` statement                                                                                                               ",{}]],"45":[["        translates YCP `do` statements as Ruby `while` statements",{"fg":2}],["                                                                  ",{}]],"46":[["      `repeat` statement                                                                                                           ",{}]],"47":[["        translates YCP `repeat` statements as Ruby `until` statements",{"fg":2}],["                                                              ",{}]],"48":[["      function definitions                                                                                                         ",{}]],"49":[["        translates toplevel function definitions as Ruby method definitions",{"fg":2}],["                                                        ",{}]],"50":[["        translates nested YCP function definitions as Ruby lambdas",{"fg":2}],["                                                                 ",{}]],"51":[["        maintains pass-by-value semantics of parameters by calling `deep_copy` on",{"fg":2}],["                                                  ",{}]],"52":[["        them                                                                                                                       ",{"fg":2}]]}}],[0.08877,{"lines":{"0":[["        argument specially                                                                                                         ",{"fg":2}]],"1":[["      function calls                                                                                                               ",{}]],"2":[["        translates YCP function calls of toplevel functions as Ruby method calls",{"fg":2}],["                                                   ",{}]],"3":[["        translates YCP function calls of nested functions as invoking the `call`",{"fg":2}],["                                                   ",{}]],"4":[["        method on them                                                                                                             ",{"fg":2}]],"5":[["        translates YCP function reference calls as invoking the `call` method on",{"fg":2}],["                                                   ",{}]],"6":[["        them                                                                                                                       ",{"fg":2}]],"7":[["        translates YCP function calls with arguments passed by reference as",{"fg":2}],["                                                        ",{}]],"8":[["        sequences of statements that emulate YCP behavior in Ruby                                                                  ",{"fg":2}]],"9":[["    statements                                                                                                                     ",{}]],"10":[["      assignments                                                                                                                  ",{}]],"11":[["        translates simple YCP assignments as Ruby assignments",{"fg":2}],["                                                                      ",{}]],"12":[["        translates YCP assignments with brackets as `Ops",{"fg":2}],["                                                                           ",{}]],"13":[["      `textdomain` statement                                                                                                       ",{}]],"14":[["        translates YCP `textdomain` statements as `textdomain` calls",{"fg":2}],["                                                               ",{}]],"15":[["      `import` statement                                                                                                           ",{}]],"16":[["        translates YCP `import` statements as `Yast",{"fg":2}],["                                                                                ",{}]],"17":[["      `include` statement                                                                                                          ",{}]],"18":[["        translates YCP `include` statements as `Yast",{"fg":2}],["                                                                               ",{}]],"19":[["      `return` statement                                                                                                           ",{}]],"20":[["        translates YCP `return` statements inside functions as Ruby `return`",{"fg":2}],["                                                       ",{}]],"21":[["        statements                                                                                                                 ",{"fg":2}]],"22":[["        translates YCP `return` statements inside blocks as Ruby `next` statements",{"fg":2}],["                                                 ",{}]],"23":[["      `break` statement                                                                                                            ",{}]],"24":[["        translates YCP `break` statements inside loops as Ruby `next`",{"fg":2}],["                                                              ",{}]],"25":[["        statements                                                                                                                 ",{"fg":2}]],"26":[["        translates YCP `break` statements inside blocks as `raise Break` calls",{"fg":2}],["                                                     ",{}]],"27":[["      `continue` statement                                                                                                         ",{}]],"28":[["        translates YCP `continue` statements inside loops as Ruby `next` statements",{"fg":2}],["                                                ",{}]],"29":[["        translates YCP `continue` statements inside blocks as Ruby `next`",{"fg":2}],["                                                          ",{}]],"30":[["        statements                                                                                                                 ",{"fg":2}]],"31":[["      statement blocks                                                                                                             ",{}]],"32":[["        translates YCP statement blocks as Ruby statements",{"fg":2}],["                                                                         ",{}]],"33":[["      `if` statement                                                                                                               ",{}]],"34":[["        translates YCP `if` statements as Ruby `if` statements",{"fg":2}],["                                                                     ",{}]],"35":[["      `switch` statement                                                                                                           ",{}]],"36":[["        translates YCP `switch` statements as Ruby `case` statements",{"fg":2}],["                                                               ",{}]],"37":[["        does not support cases without a `break` or `return` at the end",{"fg":2}],["                                                            ",{}]],"38":[["        does not support cases with `break` in the middle",{"fg":2}],["                                                                          ",{}]],"39":[["        does not support defaults with `break` in the middle",{"fg":2}],["                                                                       ",{}]],"40":[["      `while` statement                                                                                                            ",{}]],"41":[["        translates YCP `while` statements as Ruby `while` statements",{"fg":2}],["                                                               ",{}]],"42":[["      `do` statement                                                                                                               ",{}]],"43":[["        translates YCP `do` statements as Ruby `while` statements",{"fg":2}],["                                                                  ",{}]],"44":[["      `repeat` statement                                                                                                           ",{}]],"45":[["        translates YCP `repeat` statements as Ruby `until` statements",{"fg":2}],["                                                              ",{}]],"46":[["      function definitions                                                                                                         ",{}]],"47":[["        translates toplevel function definitions as Ruby method definitions",{"fg":2}],["                                                        ",{}]],"48":[["        translates nested YCP function definitions as Ruby lambdas",{"fg":2}],["                                                                 ",{}]],"49":[["        maintains pass-by-value semantics of parameters by calling `deep_copy` on",{"fg":2}],["                                                  ",{}]],"50":[["        them                                                                                                                       ",{"fg":2}]],"51":[["        maintains pass-by-value semantics of return values by calling `deep_copy` on",{"fg":2}],["                                               ",{}]],"52":[["        returned variables                                                                                                         ",{"fg":2}]]}}],[0.000309,{"lines":{"0":[["        translates YCP function calls of toplevel functions as Ruby method calls",{"fg":2}],["                                                   ",{}]],"1":[["        translates YCP function calls of nested functions as invoking the `call`",{"fg":2}],["                                                   ",{}]],"2":[["        method on them                                                                                                             ",{"fg":2}]],"3":[["        translates YCP function reference calls as invoking the `call` method on",{"fg":2}],["                                                   ",{}]],"4":[["        them                                                                                                                       ",{"fg":2}]],"5":[["        translates YCP function calls with arguments passed by reference as",{"fg":2}],["                                                        ",{}]],"6":[["        sequences of statements that emulate YCP behavior in Ruby                                                                  ",{"fg":2}]],"7":[["    statements                                                                                                                     ",{}]],"8":[["      assignments                                                                                                                  ",{}]],"9":[["        translates simple YCP assignments as Ruby assignments",{"fg":2}],["                                                                      ",{}]],"10":[["        translates YCP assignments with brackets as `Ops",{"fg":2}],["                                                                           ",{}]],"11":[["      `textdomain` statement                                                                                                       ",{}]],"12":[["        translates YCP `textdomain` statements as `textdomain` calls",{"fg":2}],["                                                               ",{}]],"13":[["      `import` statement                                                                                                           ",{}]],"14":[["        translates YCP `import` statements as `Yast",{"fg":2}],["                                                                                ",{}]],"15":[["      `include` statement                                                                                                          ",{}]],"16":[["        translates YCP `include` statements as `Yast",{"fg":2}],["                                                                               ",{}]],"17":[["      `return` statement                                                                                                           ",{}]],"18":[["        translates YCP `return` statements inside functions as Ruby `return`",{"fg":2}],["                                                       ",{}]],"19":[["        statements                                                                                                                 ",{"fg":2}]],"20":[["        translates YCP `return` statements inside blocks as Ruby `next` statements",{"fg":2}],["                                                 ",{}]],"21":[["      `break` statement                                                                                                            ",{}]],"22":[["        translates YCP `break` statements inside loops as Ruby `next`",{"fg":2}],["                                                              ",{}]],"23":[["        statements                                                                                                                 ",{"fg":2}]],"24":[["        translates YCP `break` statements inside blocks as `raise Break` calls",{"fg":2}],["                                                     ",{}]],"25":[["      `continue` statement                                                                                                         ",{}]],"26":[["        translates YCP `continue` statements inside loops as Ruby `next` statements",{"fg":2}],["                                                ",{}]],"27":[["        translates YCP `continue` statements inside blocks as Ruby `next`",{"fg":2}],["                                                          ",{}]],"28":[["        statements                                                                                                                 ",{"fg":2}]],"29":[["      statement blocks                                                                                                             ",{}]],"30":[["        translates YCP statement blocks as Ruby statements",{"fg":2}],["                                                                         ",{}]],"31":[["      `if` statement                                                                                                               ",{}]],"32":[["        translates YCP `if` statements as Ruby `if` statements",{"fg":2}],["                                                                     ",{}]],"33":[["      `switch` statement                                                                                                           ",{}]],"34":[["        translates YCP `switch` statements as Ruby `case` statements",{"fg":2}],["                                                               ",{}]],"35":[["        does not support cases without a `break` or `return` at the end",{"fg":2}],["                                                            ",{}]],"36":[["        does not support cases with `break` in the middle",{"fg":2}],["                                                                          ",{}]],"37":[["        does not support defaults with `break` in the middle",{"fg":2}],["                                                                       ",{}]],"38":[["      `while` statement                                                                                                            ",{}]],"39":[["        translates YCP `while` statements as Ruby `while` statements",{"fg":2}],["                                                               ",{}]],"40":[["      `do` statement                                                                                                               ",{}]],"41":[["        translates YCP `do` statements as Ruby `while` statements",{"fg":2}],["                                                                  ",{}]],"42":[["      `repeat` statement                                                                                                           ",{}]],"43":[["        translates YCP `repeat` statements as Ruby `until` statements",{"fg":2}],["                                                              ",{}]],"44":[["      function definitions                                                                                                         ",{}]],"45":[["        translates toplevel function definitions as Ruby method definitions",{"fg":2}],["                                                        ",{}]],"46":[["        translates nested YCP function definitions as Ruby lambdas",{"fg":2}],["                                                                 ",{}]],"47":[["        maintains pass-by-value semantics of parameters by calling `deep_copy` on",{"fg":2}],["                                                  ",{}]],"48":[["        them                                                                                                                       ",{"fg":2}]],"49":[["        maintains pass-by-value semantics of return values by calling `deep_copy` on",{"fg":2}],["                                               ",{}]],"50":[["        returned variables                                                                                                         ",{"fg":2}]],"51":[["    files                                                                                                                          ",{}]],"52":[["      clients                                                                                                                      ",{}]]}}],[0.051175,{"lines":{"0":[["        translates YCP function calls of nested functions as invoking the `call`",{"fg":2}],["                                                   ",{}]],"1":[["        method on them                                                                                                             ",{"fg":2}]],"2":[["        translates YCP function reference calls as invoking the `call` method on",{"fg":2}],["                                                   ",{}]],"3":[["        them                                                                                                                       ",{"fg":2}]],"4":[["        translates YCP function calls with arguments passed by reference as",{"fg":2}],["                                                        ",{}]],"5":[["        sequences of statements that emulate YCP behavior in Ruby                                                                  ",{"fg":2}]],"6":[["    statements                                                                                                                     ",{}]],"7":[["      assignments                                                                                                                  ",{}]],"8":[["        translates simple YCP assignments as Ruby assignments",{"fg":2}],["                                                                      ",{}]],"9":[["        translates YCP assignments with brackets as `Ops",{"fg":2}],["                                                                           ",{}]],"10":[["      `textdomain` statement                                                                                                       ",{}]],"11":[["        translates YCP `textdomain` statements as `textdomain` calls",{"fg":2}],["                                                               ",{}]],"12":[["      `import` statement                                                                                                           ",{}]],"13":[["        translates YCP `import` statements as `Yast",{"fg":2}],["                                                                                ",{}]],"14":[["      `include` statement                                                                                                          ",{}]],"15":[["        translates YCP `include` statements as `Yast",{"fg":2}],["                                                                               ",{}]],"16":[["      `return` statement                                                                                                           ",{}]],"17":[["        translates YCP `return` statements inside functions as Ruby `return`",{"fg":2}],["                                                       ",{}]],"18":[["        statements                                                                                                                 ",{"fg":2}]],"19":[["        translates YCP `return` statements inside blocks as Ruby `next` statements",{"fg":2}],["                                                 ",{}]],"20":[["      `break` statement                                                                                                            ",{}]],"21":[["        translates YCP `break` statements inside loops as Ruby `next`",{"fg":2}],["                                                              ",{}]],"22":[["        statements                                                                                                                 ",{"fg":2}]],"23":[["        translates YCP `break` statements inside blocks as `raise Break` calls",{"fg":2}],["                                                     ",{}]],"24":[["      `continue` statement                                                                                                         ",{}]],"25":[["        translates YCP `continue` statements inside loops as Ruby `next` statements",{"fg":2}],["                                                ",{}]],"26":[["        translates YCP `continue` statements inside blocks as Ruby `next`",{"fg":2}],["                                                          ",{}]],"27":[["        statements                                                                                                                 ",{"fg":2}]],"28":[["      statement blocks                                                                                                             ",{}]],"29":[["        translates YCP statement blocks as Ruby statements",{"fg":2}],["                                                                         ",{}]],"30":[["      `if` statement                                                                                                               ",{}]],"31":[["        translates YCP `if` statements as Ruby `if` statements",{"fg":2}],["                                                                     ",{}]],"32":[["      `switch` statement                                                                                                           ",{}]],"33":[["        translates YCP `switch` statements as Ruby `case` statements",{"fg":2}],["                                                               ",{}]],"34":[["        does not support cases without a `break` or `return` at the end",{"fg":2}],["                                                            ",{}]],"35":[["        does not support cases with `break` in the middle",{"fg":2}],["                                                                          ",{}]],"36":[["        does not support defaults with `break` in the middle",{"fg":2}],["                                                                       ",{}]],"37":[["      `while` statement                                                                                                            ",{}]],"38":[["        translates YCP `while` statements as Ruby `while` statements",{"fg":2}],["                                                               ",{}]],"39":[["      `do` statement                                                                                                               ",{}]],"40":[["        translates YCP `do` statements as Ruby `while` statements",{"fg":2}],["                                                                  ",{}]],"41":[["      `repeat` statement                                                                                                           ",{}]],"42":[["        translates YCP `repeat` statements as Ruby `until` statements",{"fg":2}],["                                                              ",{}]],"43":[["      function definitions                                                                                                         ",{}]],"44":[["        translates toplevel function definitions as Ruby method definitions",{"fg":2}],["                                                        ",{}]],"45":[["        translates nested YCP function definitions as Ruby lambdas",{"fg":2}],["                                                                 ",{}]],"46":[["        maintains pass-by-value semantics of parameters by calling `deep_copy` on",{"fg":2}],["                                                  ",{}]],"47":[["        them                                                                                                                       ",{"fg":2}]],"48":[["        maintains pass-by-value semantics of return values by calling `deep_copy` on",{"fg":2}],["                                               ",{}]],"49":[["        returned variables                                                                                                         ",{"fg":2}]],"50":[["    files                                                                                                                          ",{}]],"51":[["      clients                                                                                                                      ",{}]],"52":[["        translates YCP clients as Ruby classes that are instantiated",{"fg":2}],["                                                               ",{}]]}}],[0.000118,{"lines":{"0":[["        method on them                                                                                                             ",{"fg":2}]],"1":[["        translates YCP function reference calls as invoking the `call` method on",{"fg":2}],["                                                   ",{}]],"2":[["        them                                                                                                                       ",{"fg":2}]],"3":[["        translates YCP function calls with arguments passed by reference as",{"fg":2}],["                                                        ",{}]],"4":[["        sequences of statements that emulate YCP behavior in Ruby                                                                  ",{"fg":2}]],"5":[["    statements                                                                                                                     ",{}]],"6":[["      assignments                                                                                                                  ",{}]],"7":[["        translates simple YCP assignments as Ruby assignments",{"fg":2}],["                                                                      ",{}]],"8":[["        translates YCP assignments with brackets as `Ops",{"fg":2}],["                                                                           ",{}]],"9":[["      `textdomain` statement                                                                                                       ",{}]],"10":[["        translates YCP `textdomain` statements as `textdomain` calls",{"fg":2}],["                                                               ",{}]],"11":[["      `import` statement                                                                                                           ",{}]],"12":[["        translates YCP `import` statements as `Yast",{"fg":2}],["                                                                                ",{}]],"13":[["      `include` statement                                                                                                          ",{}]],"14":[["        translates YCP `include` statements as `Yast",{"fg":2}],["                                                                               ",{}]],"15":[["      `return` statement                                                                                                           ",{}]],"16":[["        translates YCP `return` statements inside functions as Ruby `return`",{"fg":2}],["                                                       ",{}]],"17":[["        statements                                                                                                                 ",{"fg":2}]],"18":[["        translates YCP `return` statements inside blocks as Ruby `next` statements",{"fg":2}],["                                                 ",{}]],"19":[["      `break` statement                                                                                                            ",{}]],"20":[["        translates YCP `break` statements inside loops as Ruby `next`",{"fg":2}],["                                                              ",{}]],"21":[["        statements                                                                                                                 ",{"fg":2}]],"22":[["        translates YCP `break` statements inside blocks as `raise Break` calls",{"fg":2}],["                                                     ",{}]],"23":[["      `continue` statement                                                                                                         ",{}]],"24":[["        translates YCP `continue` statements inside loops as Ruby `next` statements",{"fg":2}],["                                                ",{}]],"25":[["        translates YCP `continue` statements inside blocks as Ruby `next`",{"fg":2}],["                                                          ",{}]],"26":[["        statements                                                                                                                 ",{"fg":2}]],"27":[["      statement blocks                                                                                                             ",{}]],"28":[["        translates YCP statement blocks as Ruby statements",{"fg":2}],["                                                                         ",{}]],"29":[["      `if` statement                                                                                                               ",{}]],"30":[["        translates YCP `if` statements as Ruby `if` statements",{"fg":2}],["                                                                     ",{}]],"31":[["      `switch` statement                                                                                                           ",{}]],"32":[["        translates YCP `switch` statements as Ruby `case` statements",{"fg":2}],["                                                               ",{}]],"33":[["        does not support cases without a `break` or `return` at the end",{"fg":2}],["                                                            ",{}]],"34":[["        does not support cases with `break` in the middle",{"fg":2}],["                                                                          ",{}]],"35":[["        does not support defaults with `break` in the middle",{"fg":2}],["                                                                       ",{}]],"36":[["      `while` statement                                                                                                            ",{}]],"37":[["        translates YCP `while` statements as Ruby `while` statements",{"fg":2}],["                                                               ",{}]],"38":[["      `do` statement                                                                                                               ",{}]],"39":[["        translates YCP `do` statements as Ruby `while` statements",{"fg":2}],["                                                                  ",{}]],"40":[["      `repeat` statement                                                                                                           ",{}]],"41":[["        translates YCP `repeat` statements as Ruby `until` statements",{"fg":2}],["                                                              ",{}]],"42":[["      function definitions                                                                                                         ",{}]],"43":[["        translates toplevel function definitions as Ruby method definitions",{"fg":2}],["                                                        ",{}]],"44":[["        translates nested YCP function definitions as Ruby lambdas",{"fg":2}],["                                                                 ",{}]],"45":[["        maintains pass-by-value semantics of parameters by calling `deep_copy` on",{"fg":2}],["                                                  ",{}]],"46":[["        them                                                                                                                       ",{"fg":2}]],"47":[["        maintains pass-by-value semantics of return values by calling `deep_copy` on",{"fg":2}],["                                               ",{}]],"48":[["        returned variables                                                                                                         ",{"fg":2}]],"49":[["    files                                                                                                                          ",{}]],"50":[["      clients                                                                                                                      ",{}]],"51":[["        translates YCP clients as Ruby classes that are instantiated",{"fg":2}],["                                                               ",{}]],"52":[["      modules                                                                                                                      ",{}]]}}],[0.058612,{"lines":{"0":[["        translates YCP function reference calls as invoking the `call` method on",{"fg":2}],["                                                   ",{}]],"1":[["        them                                                                                                                       ",{"fg":2}]],"2":[["        translates YCP function calls with arguments passed by reference as",{"fg":2}],["                                                        ",{}]],"3":[["        sequences of statements that emulate YCP behavior in Ruby                                                                  ",{"fg":2}]],"4":[["    statements                                                                                                                     ",{}]],"5":[["      assignments                                                                                                                  ",{}]],"6":[["        translates simple YCP assignments as Ruby assignments",{"fg":2}],["                                                                      ",{}]],"7":[["        translates YCP assignments with brackets as `Ops",{"fg":2}],["                                                                           ",{}]],"8":[["      `textdomain` statement                                                                                                       ",{}]],"9":[["        translates YCP `textdomain` statements as `textdomain` calls",{"fg":2}],["                                                               ",{}]],"10":[["      `import` statement                                                                                                           ",{}]],"11":[["        translates YCP `import` statements as `Yast",{"fg":2}],["                                                                                ",{}]],"12":[["      `include` statement                                                                                                          ",{}]],"13":[["        translates YCP `include` statements as `Yast",{"fg":2}],["                                                                               ",{}]],"14":[["      `return` statement                                                                                                           ",{}]],"15":[["        translates YCP `return` statements inside functions as Ruby `return`",{"fg":2}],["                                                       ",{}]],"16":[["        statements                                                                                                                 ",{"fg":2}]],"17":[["        translates YCP `return` statements inside blocks as Ruby `next` statements",{"fg":2}],["                                                 ",{}]],"18":[["      `break` statement                                                                                                            ",{}]],"19":[["        translates YCP `break` statements inside loops as Ruby `next`",{"fg":2}],["                                                              ",{}]],"20":[["        statements                                                                                                                 ",{"fg":2}]],"21":[["        translates YCP `break` statements inside blocks as `raise Break` calls",{"fg":2}],["                                                     ",{}]],"22":[["      `continue` statement                                                                                                         ",{}]],"23":[["        translates YCP `continue` statements inside loops as Ruby `next` statements",{"fg":2}],["                                                ",{}]],"24":[["        translates YCP `continue` statements inside blocks as Ruby `next`",{"fg":2}],["                                                          ",{}]],"25":[["        statements                                                                                                                 ",{"fg":2}]],"26":[["      statement blocks                                                                                                             ",{}]],"27":[["        translates YCP statement blocks as Ruby statements",{"fg":2}],["                                                                         ",{}]],"28":[["      `if` statement                                                                                                               ",{}]],"29":[["        translates YCP `if` statements as Ruby `if` statements",{"fg":2}],["                                                                     ",{}]],"30":[["      `switch` statement                                                                                                           ",{}]],"31":[["        translates YCP `switch` statements as Ruby `case` statements",{"fg":2}],["                                                               ",{}]],"32":[["        does not support cases without a `break` or `return` at the end",{"fg":2}],["                                                            ",{}]],"33":[["        does not support cases with `break` in the middle",{"fg":2}],["                                                                          ",{}]],"34":[["        does not support defaults with `break` in the middle",{"fg":2}],["                                                                       ",{}]],"35":[["      `while` statement                                                                                                            ",{}]],"36":[["        translates YCP `while` statements as Ruby `while` statements",{"fg":2}],["                                                               ",{}]],"37":[["      `do` statement                                                                                                               ",{}]],"38":[["        translates YCP `do` statements as Ruby `while` statements",{"fg":2}],["                                                                  ",{}]],"39":[["      `repeat` statement                                                                                                           ",{}]],"40":[["        translates YCP `repeat` statements as Ruby `until` statements",{"fg":2}],["                                                              ",{}]],"41":[["      function definitions                                                                                                         ",{}]],"42":[["        translates toplevel function definitions as Ruby method definitions",{"fg":2}],["                                                        ",{}]],"43":[["        translates nested YCP function definitions as Ruby lambdas",{"fg":2}],["                                                                 ",{}]],"44":[["        maintains pass-by-value semantics of parameters by calling `deep_copy` on",{"fg":2}],["                                                  ",{}]],"45":[["        them                                                                                                                       ",{"fg":2}]],"46":[["        maintains pass-by-value semantics of return values by calling `deep_copy` on",{"fg":2}],["                                               ",{}]],"47":[["        returned variables                                                                                                         ",{"fg":2}]],"48":[["    files                                                                                                                          ",{}]],"49":[["      clients                                                                                                                      ",{}]],"50":[["        translates YCP clients as Ruby classes that are instantiated",{"fg":2}],["                                                               ",{}]],"51":[["      modules                                                                                                                      ",{}]],"52":[["        translates YCP modules as Ruby classes that are instantiated",{"fg":2}],["                                                               ",{}]]}}],[0.000195,{"lines":{"0":[["        translates YCP function calls with arguments passed by reference as",{"fg":2}],["                                                        ",{}]],"1":[["        sequences of statements that emulate YCP behavior in Ruby                                                                  ",{"fg":2}]],"2":[["    statements                                                                                                                     ",{}]],"3":[["      assignments                                                                                                                  ",{}]],"4":[["        translates simple YCP assignments as Ruby assignments",{"fg":2}],["                                                                      ",{}]],"5":[["        translates YCP assignments with brackets as `Ops",{"fg":2}],["                                                                           ",{}]],"6":[["      `textdomain` statement                                                                                                       ",{}]],"7":[["        translates YCP `textdomain` statements as `textdomain` calls",{"fg":2}],["                                                               ",{}]],"8":[["      `import` statement                                                                                                           ",{}]],"9":[["        translates YCP `import` statements as `Yast",{"fg":2}],["                                                                                ",{}]],"10":[["      `include` statement                                                                                                          ",{}]],"11":[["        translates YCP `include` statements as `Yast",{"fg":2}],["                                                                               ",{}]],"12":[["      `return` statement                                                                                                           ",{}]],"13":[["        translates YCP `return` statements inside functions as Ruby `return`",{"fg":2}],["                                                       ",{}]],"14":[["        statements                                                                                                                 ",{"fg":2}]],"15":[["        translates YCP `return` statements inside blocks as Ruby `next` statements",{"fg":2}],["                                                 ",{}]],"16":[["      `break` statement                                                                                                            ",{}]],"17":[["        translates YCP `break` statements inside loops as Ruby `next`",{"fg":2}],["                                                              ",{}]],"18":[["        statements                                                                                                                 ",{"fg":2}]],"19":[["        translates YCP `break` statements inside blocks as `raise Break` calls",{"fg":2}],["                                                     ",{}]],"20":[["      `continue` statement                                                                                                         ",{}]],"21":[["        translates YCP `continue` statements inside loops as Ruby `next` statements",{"fg":2}],["                                                ",{}]],"22":[["        translates YCP `continue` statements inside blocks as Ruby `next`",{"fg":2}],["                                                          ",{}]],"23":[["        statements                                                                                                                 ",{"fg":2}]],"24":[["      statement blocks                                                                                                             ",{}]],"25":[["        translates YCP statement blocks as Ruby statements",{"fg":2}],["                                                                         ",{}]],"26":[["      `if` statement                                                                                                               ",{}]],"27":[["        translates YCP `if` statements as Ruby `if` statements",{"fg":2}],["                                                                     ",{}]],"28":[["      `switch` statement                                                                                                           ",{}]],"29":[["        translates YCP `switch` statements as Ruby `case` statements",{"fg":2}],["                                                               ",{}]],"30":[["        does not support cases without a `break` or `return` at the end",{"fg":2}],["                                                            ",{}]],"31":[["        does not support cases with `break` in the middle",{"fg":2}],["                                                                          ",{}]],"32":[["        does not support defaults with `break` in the middle",{"fg":2}],["                                                                       ",{}]],"33":[["      `while` statement                                                                                                            ",{}]],"34":[["        translates YCP `while` statements as Ruby `while` statements",{"fg":2}],["                                                               ",{}]],"35":[["      `do` statement                                                                                                               ",{}]],"36":[["        translates YCP `do` statements as Ruby `while` statements",{"fg":2}],["                                                                  ",{}]],"37":[["      `repeat` statement                                                                                                           ",{}]],"38":[["        translates YCP `repeat` statements as Ruby `until` statements",{"fg":2}],["                                                              ",{}]],"39":[["      function definitions                                                                                                         ",{}]],"40":[["        translates toplevel function definitions as Ruby method definitions",{"fg":2}],["                                                        ",{}]],"41":[["        translates nested YCP function definitions as Ruby lambdas",{"fg":2}],["                                                                 ",{}]],"42":[["        maintains pass-by-value semantics of parameters by calling `deep_copy` on",{"fg":2}],["                                                  ",{}]],"43":[["        them                                                                                                                       ",{"fg":2}]],"44":[["        maintains pass-by-value semantics of return values by calling `deep_copy` on",{"fg":2}],["                                               ",{}]],"45":[["        returned variables                                                                                                         ",{"fg":2}]],"46":[["    files                                                                                                                          ",{}]],"47":[["      clients                                                                                                                      ",{}]],"48":[["        translates YCP clients as Ruby classes that are instantiated",{"fg":2}],["                                                               ",{}]],"49":[["      modules                                                                                                                      ",{}]],"50":[["        translates YCP modules as Ruby classes that are instantiated",{"fg":2}],["                                                               ",{}]],"51":[["    other                                                                                                                          ",{}]],"52":[["      comments                                                                                                                     ",{}]]}}],[0.047078,{"lines":{"0":[["        sequences of statements that emulate YCP behavior in Ruby                                                                  ",{"fg":2}]],"1":[["    statements                                                                                                                     ",{}]],"2":[["      assignments                                                                                                                  ",{}]],"3":[["        translates simple YCP assignments as Ruby assignments",{"fg":2}],["                                                                      ",{}]],"4":[["        translates YCP assignments with brackets as `Ops",{"fg":2}],["                                                                           ",{}]],"5":[["      `textdomain` statement                                                                                                       ",{}]],"6":[["        translates YCP `textdomain` statements as `textdomain` calls",{"fg":2}],["                                                               ",{}]],"7":[["      `import` statement                                                                                                           ",{}]],"8":[["        translates YCP `import` statements as `Yast",{"fg":2}],["                                                                                ",{}]],"9":[["      `include` statement                                                                                                          ",{}]],"10":[["        translates YCP `include` statements as `Yast",{"fg":2}],["                                                                               ",{}]],"11":[["      `return` statement                                                                                                           ",{}]],"12":[["        translates YCP `return` statements inside functions as Ruby `return`",{"fg":2}],["                                                       ",{}]],"13":[["        statements                                                                                                                 ",{"fg":2}]],"14":[["        translates YCP `return` statements inside blocks as Ruby `next` statements",{"fg":2}],["                                                 ",{}]],"15":[["      `break` statement                                                                                                            ",{}]],"16":[["        translates YCP `break` statements inside loops as Ruby `next`",{"fg":2}],["                                                              ",{}]],"17":[["        statements                                                                                                                 ",{"fg":2}]],"18":[["        translates YCP `break` statements inside blocks as `raise Break` calls",{"fg":2}],["                                                     ",{}]],"19":[["      `continue` statement                                                                                                         ",{}]],"20":[["        translates YCP `continue` statements inside loops as Ruby `next` statements",{"fg":2}],["                                                ",{}]],"21":[["        translates YCP `continue` statements inside blocks as Ruby `next`",{"fg":2}],["                                                          ",{}]],"22":[["        statements                                                                                                                 ",{"fg":2}]],"23":[["      statement blocks                                                                                                             ",{}]],"24":[["        translates YCP statement blocks as Ruby statements",{"fg":2}],["                                                                         ",{}]],"25":[["      `if` statement                                                                                                               ",{}]],"26":[["        translates YCP `if` statements as Ruby `if` statements",{"fg":2}],["                                                                     ",{}]],"27":[["      `switch` statement                                                                                                           ",{}]],"28":[["        translates YCP `switch` statements as Ruby `case` statements",{"fg":2}],["                                                               ",{}]],"29":[["        does not support cases without a `break` or `return` at the end",{"fg":2}],["                                                            ",{}]],"30":[["        does not support cases with `break` in the middle",{"fg":2}],["                                                                          ",{}]],"31":[["        does not support defaults with `break` in the middle",{"fg":2}],["                                                                       ",{}]],"32":[["      `while` statement                                                                                                            ",{}]],"33":[["        translates YCP `while` statements as Ruby `while` statements",{"fg":2}],["                                                               ",{}]],"34":[["      `do` statement                                                                                                               ",{}]],"35":[["        translates YCP `do` statements as Ruby `while` statements",{"fg":2}],["                                                                  ",{}]],"36":[["      `repeat` statement                                                                                                           ",{}]],"37":[["        translates YCP `repeat` statements as Ruby `until` statements",{"fg":2}],["                                                              ",{}]],"38":[["      function definitions                                                                                                         ",{}]],"39":[["        translates toplevel function definitions as Ruby method definitions",{"fg":2}],["                                                        ",{}]],"40":[["        translates nested YCP function definitions as Ruby lambdas",{"fg":2}],["                                                                 ",{}]],"41":[["        maintains pass-by-value semantics of parameters by calling `deep_copy` on",{"fg":2}],["                                                  ",{}]],"42":[["        them                                                                                                                       ",{"fg":2}]],"43":[["        maintains pass-by-value semantics of return values by calling `deep_copy` on",{"fg":2}],["                                               ",{}]],"44":[["        returned variables                                                                                                         ",{"fg":2}]],"45":[["    files                                                                                                                          ",{}]],"46":[["      clients                                                                                                                      ",{}]],"47":[["        translates YCP clients as Ruby classes that are instantiated",{"fg":2}],["                                                               ",{}]],"48":[["      modules                                                                                                                      ",{}]],"49":[["        translates YCP modules as Ruby classes that are instantiated",{"fg":2}],["                                                               ",{}]],"50":[["    other                                                                                                                          ",{}]],"51":[["      comments                                                                                                                     ",{}]],"52":[["        translates comments before statements and after them",{"fg":2}],["                                                                       ",{}]]}}],[0.047475,{"lines":{"0":[["    statements                                                                                                                     ",{}]],"1":[["      assignments                                                                                                                  ",{}]],"2":[["        translates simple YCP assignments as Ruby assignments",{"fg":2}],["                                                                      ",{}]],"3":[["        translates YCP assignments with brackets as `Ops",{"fg":2}],["                                                                           ",{}]],"4":[["      `textdomain` statement                                                                                                       ",{}]],"5":[["        translates YCP `textdomain` statements as `textdomain` calls",{"fg":2}],["                                                               ",{}]],"6":[["      `import` statement                                                                                                           ",{}]],"7":[["        translates YCP `import` statements as `Yast",{"fg":2}],["                                                                                ",{}]],"8":[["      `include` statement                                                                                                          ",{}]],"9":[["        translates YCP `include` statements as `Yast",{"fg":2}],["                                                                               ",{}]],"10":[["      `return` statement                                                                                                           ",{}]],"11":[["        translates YCP `return` statements inside functions as Ruby `return`",{"fg":2}],["                                                       ",{}]],"12":[["        statements                                                                                                                 ",{"fg":2}]],"13":[["        translates YCP `return` statements inside blocks as Ruby `next` statements",{"fg":2}],["                                                 ",{}]],"14":[["      `break` statement                                                                                                            ",{}]],"15":[["        translates YCP `break` statements inside loops as Ruby `next`",{"fg":2}],["                                                              ",{}]],"16":[["        statements                                                                                                                 ",{"fg":2}]],"17":[["        translates YCP `break` statements inside blocks as `raise Break` calls",{"fg":2}],["                                                     ",{}]],"18":[["      `continue` statement                                                                                                         ",{}]],"19":[["        translates YCP `continue` statements inside loops as Ruby `next` statements",{"fg":2}],["                                                ",{}]],"20":[["        translates YCP `continue` statements inside blocks as Ruby `next`",{"fg":2}],["                                                          ",{}]],"21":[["        statements                                                                                                                 ",{"fg":2}]],"22":[["      statement blocks                                                                                                             ",{}]],"23":[["        translates YCP statement blocks as Ruby statements",{"fg":2}],["                                                                         ",{}]],"24":[["      `if` statement                                                                                                               ",{}]],"25":[["        translates YCP `if` statements as Ruby `if` statements",{"fg":2}],["                                                                     ",{}]],"26":[["      `switch` statement                                                                                                           ",{}]],"27":[["        translates YCP `switch` statements as Ruby `case` statements",{"fg":2}],["                                                               ",{}]],"28":[["        does not support cases without a `break` or `return` at the end",{"fg":2}],["                                                            ",{}]],"29":[["        does not support cases with `break` in the middle",{"fg":2}],["                                                                          ",{}]],"30":[["        does not support defaults with `break` in the middle",{"fg":2}],["                                                                       ",{}]],"31":[["      `while` statement                                                                                                            ",{}]],"32":[["        translates YCP `while` statements as Ruby `while` statements",{"fg":2}],["                                                               ",{}]],"33":[["      `do` statement                                                                                                               ",{}]],"34":[["        translates YCP `do` statements as Ruby `while` statements",{"fg":2}],["                                                                  ",{}]],"35":[["      `repeat` statement                                                                                                           ",{}]],"36":[["        translates YCP `repeat` statements as Ruby `until` statements",{"fg":2}],["                                                              ",{}]],"37":[["      function definitions                                                                                                         ",{}]],"38":[["        translates toplevel function definitions as Ruby method definitions",{"fg":2}],["                                                        ",{}]],"39":[["        translates nested YCP function definitions as Ruby lambdas",{"fg":2}],["                                                                 ",{}]],"40":[["        maintains pass-by-value semantics of parameters by calling `deep_copy` on",{"fg":2}],["                                                  ",{}]],"41":[["        them                                                                                                                       ",{"fg":2}]],"42":[["        maintains pass-by-value semantics of return values by calling `deep_copy` on",{"fg":2}],["                                               ",{}]],"43":[["        returned variables                                                                                                         ",{"fg":2}]],"44":[["    files                                                                                                                          ",{}]],"45":[["      clients                                                                                                                      ",{}]],"46":[["        translates YCP clients as Ruby classes that are instantiated",{"fg":2}],["                                                               ",{}]],"47":[["      modules                                                                                                                      ",{}]],"48":[["        translates YCP modules as Ruby classes that are instantiated",{"fg":2}],["                                                               ",{}]],"49":[["    other                                                                                                                          ",{}]],"50":[["      comments                                                                                                                     ",{}]],"51":[["        translates comments before statements and after them",{"fg":2}],["                                                                       ",{}]],"52":[["        preserves whitespace between statements",{"fg":2}],["                                                                                    ",{}]]}}],[0.047411,{"lines":{"0":[["      assignments                                                                                                                  ",{}]],"1":[["        translates simple YCP assignments as Ruby assignments",{"fg":2}],["                                                                      ",{}]],"2":[["        translates YCP assignments with brackets as `Ops",{"fg":2}],["                                                                           ",{}]],"3":[["      `textdomain` statement                                                                                                       ",{}]],"4":[["        translates YCP `textdomain` statements as `textdomain` calls",{"fg":2}],["                                                               ",{}]],"5":[["      `import` statement                                                                                                           ",{}]],"6":[["        translates YCP `import` statements as `Yast",{"fg":2}],["                                                                                ",{}]],"7":[["      `include` statement                                                                                                          ",{}]],"8":[["        translates YCP `include` statements as `Yast",{"fg":2}],["                                                                               ",{}]],"9":[["      `return` statement                                                                                                           ",{}]],"10":[["        translates YCP `return` statements inside functions as Ruby `return`",{"fg":2}],["                                                       ",{}]],"11":[["        statements                                                                                                                 ",{"fg":2}]],"12":[["        translates YCP `return` statements inside blocks as Ruby `next` statements",{"fg":2}],["                                                 ",{}]],"13":[["      `break` statement                                                                                                            ",{}]],"14":[["        translates YCP `break` statements inside loops as Ruby `next`",{"fg":2}],["                                                              ",{}]],"15":[["        statements                                                                                                                 ",{"fg":2}]],"16":[["        translates YCP `break` statements inside blocks as `raise Break` calls",{"fg":2}],["                                                     ",{}]],"17":[["      `continue` statement                                                                                                         ",{}]],"18":[["        translates YCP `continue` statements inside loops as Ruby `next` statements",{"fg":2}],["                                                ",{}]],"19":[["        translates YCP `continue` statements inside blocks as Ruby `next`",{"fg":2}],["                                                          ",{}]],"20":[["        statements                                                                                                                 ",{"fg":2}]],"21":[["      statement blocks                                                                                                             ",{}]],"22":[["        translates YCP statement blocks as Ruby statements",{"fg":2}],["                                                                         ",{}]],"23":[["      `if` statement                                                                                                               ",{}]],"24":[["        translates YCP `if` statements as Ruby `if` statements",{"fg":2}],["                                                                     ",{}]],"25":[["      `switch` statement                                                                                                           ",{}]],"26":[["        translates YCP `switch` statements as Ruby `case` statements",{"fg":2}],["                                                               ",{}]],"27":[["        does not support cases without a `break` or `return` at the end",{"fg":2}],["                                                            ",{}]],"28":[["        does not support cases with `break` in the middle",{"fg":2}],["                                                                          ",{}]],"29":[["        does not support defaults with `break` in the middle",{"fg":2}],["                                                                       ",{}]],"30":[["      `while` statement                                                                                                            ",{}]],"31":[["        translates YCP `while` statements as Ruby `while` statements",{"fg":2}],["                                                               ",{}]],"32":[["      `do` statement                                                                                                               ",{}]],"33":[["        translates YCP `do` statements as Ruby `while` statements",{"fg":2}],["                                                                  ",{}]],"34":[["      `repeat` statement                                                                                                           ",{}]],"35":[["        translates YCP `repeat` statements as Ruby `until` statements",{"fg":2}],["                                                              ",{}]],"36":[["      function definitions                                                                                                         ",{}]],"37":[["        translates toplevel function definitions as Ruby method definitions",{"fg":2}],["                                                        ",{}]],"38":[["        translates nested YCP function definitions as Ruby lambdas",{"fg":2}],["                                                                 ",{}]],"39":[["        maintains pass-by-value semantics of parameters by calling `deep_copy` on",{"fg":2}],["                                                  ",{}]],"40":[["        them                                                                                                                       ",{"fg":2}]],"41":[["        maintains pass-by-value semantics of return values by calling `deep_copy` on",{"fg":2}],["                                               ",{}]],"42":[["        returned variables                                                                                                         ",{"fg":2}]],"43":[["    files                                                                                                                          ",{}]],"44":[["      clients                                                                                                                      ",{}]],"45":[["        translates YCP clients as Ruby classes that are instantiated",{"fg":2}],["                                                               ",{}]],"46":[["      modules                                                                                                                      ",{}]],"47":[["        translates YCP modules as Ruby classes that are instantiated",{"fg":2}],["                                                               ",{}]],"48":[["    other                                                                                                                          ",{}]],"49":[["      comments                                                                                                                     ",{}]],"50":[["        translates comments before statements and after them",{"fg":2}],["                                                                       ",{}]],"51":[["        preserves whitespace between statements",{"fg":2}],["                                                                                    ",{}]],"52":[["        handles all kinds of YCP comments correctly",{"fg":2}],["                                                                                ",{}]]}}],[0.055945,{"lines":{"0":[["        translates simple YCP assignments as Ruby assignments",{"fg":2}],["                                                                      ",{}]],"1":[["        translates YCP assignments with brackets as `Ops",{"fg":2}],["                                                                           ",{}]],"2":[["      `textdomain` statement                                                                                                       ",{}]],"3":[["        translates YCP `textdomain` statements as `textdomain` calls",{"fg":2}],["                                                               ",{}]],"4":[["      `import` statement                                                                                                           ",{}]],"5":[["        translates YCP `import` statements as `Yast",{"fg":2}],["                                                                                ",{}]],"6":[["      `include` statement                                                                                                          ",{}]],"7":[["        translates YCP `include` statements as `Yast",{"fg":2}],["                                                                               ",{}]],"8":[["      `return` statement                                                                                                           ",{}]],"9":[["        translates YCP `return` statements inside functions as Ruby `return`",{"fg":2}],["                                                       ",{}]],"10":[["        statements                                                                                                                 ",{"fg":2}]],"11":[["        translates YCP `return` statements inside blocks as Ruby `next` statements",{"fg":2}],["                                                 ",{}]],"12":[["      `break` statement                                                                                                            ",{}]],"13":[["        translates YCP `break` statements inside loops as Ruby `next`",{"fg":2}],["                                                              ",{}]],"14":[["        statements                                                                                                                 ",{"fg":2}]],"15":[["        translates YCP `break` statements inside blocks as `raise Break` calls",{"fg":2}],["                                                     ",{}]],"16":[["      `continue` statement                                                                                                         ",{}]],"17":[["        translates YCP `continue` statements inside loops as Ruby `next` statements",{"fg":2}],["                                                ",{}]],"18":[["        translates YCP `continue` statements inside blocks as Ruby `next`",{"fg":2}],["                                                          ",{}]],"19":[["        statements                                                                                                                 ",{"fg":2}]],"20":[["      statement blocks                                                                                                             ",{}]],"21":[["        translates YCP statement blocks as Ruby statements",{"fg":2}],["                                                                         ",{}]],"22":[["      `if` statement                                                                                                               ",{}]],"23":[["        translates YCP `if` statements as Ruby `if` statements",{"fg":2}],["                                                                     ",{}]],"24":[["      `switch` statement                                                                                                           ",{}]],"25":[["        translates YCP `switch` statements as Ruby `case` statements",{"fg":2}],["                                                               ",{}]],"26":[["        does not support cases without a `break` or `return` at the end",{"fg":2}],["                                                            ",{}]],"27":[["        does not support cases with `break` in the middle",{"fg":2}],["                                                                          ",{}]],"28":[["        does not support defaults with `break` in the middle",{"fg":2}],["                                                                       ",{}]],"29":[["      `while` statement                                                                                                            ",{}]],"30":[["        translates YCP `while` statements as Ruby `while` statements",{"fg":2}],["                                                               ",{}]],"31":[["      `do` statement                                                                                                               ",{}]],"32":[["        translates YCP `do` statements as Ruby `while` statements",{"fg":2}],["                                                                  ",{}]],"33":[["      `repeat` statement                                                                                                           ",{}]],"34":[["        translates YCP `repeat` statements as Ruby `until` statements",{"fg":2}],["                                                              ",{}]],"35":[["      function definitions                                                                                                         ",{}]],"36":[["        translates toplevel function definitions as Ruby method definitions",{"fg":2}],["                                                        ",{}]],"37":[["        translates nested YCP function definitions as Ruby lambdas",{"fg":2}],["                                                                 ",{}]],"38":[["        maintains pass-by-value semantics of parameters by calling `deep_copy` on",{"fg":2}],["                                                  ",{}]],"39":[["        them                                                                                                                       ",{"fg":2}]],"40":[["        maintains pass-by-value semantics of return values by calling `deep_copy` on",{"fg":2}],["                                               ",{}]],"41":[["        returned variables                                                                                                         ",{"fg":2}]],"42":[["    files                                                                                                                          ",{}]],"43":[["      clients                                                                                                                      ",{}]],"44":[["        translates YCP clients as Ruby classes that are instantiated",{"fg":2}],["                                                               ",{}]],"45":[["      modules                                                                                                                      ",{}]],"46":[["        translates YCP modules as Ruby classes that are instantiated",{"fg":2}],["                                                               ",{}]],"47":[["    other                                                                                                                          ",{}]],"48":[["      comments                                                                                                                     ",{}]],"49":[["        translates comments before statements and after them",{"fg":2}],["                                                                       ",{}]],"50":[["        preserves whitespace between statements",{"fg":2}],["                                                                                    ",{}]],"51":[["        handles all kinds of YCP comments correctly",{"fg":2}],["                                                                                ",{}]],"52":[["        translates YCP documentation comments into [YARD](http://yardoc",{"fg":2}],["                                                            ",{}]]}}],[0.000309,{"lines":{"0":[["        translates YCP `textdomain` statements as `textdomain` calls",{"fg":2}],["                                                               ",{}]],"1":[["      `import` statement                                                                                                           ",{}]],"2":[["        translates YCP `import` statements as `Yast",{"fg":2}],["                                                                                ",{}]],"3":[["      `include` statement                                                                                                          ",{}]],"4":[["        translates YCP `include` statements as `Yast",{"fg":2}],["                                                                               ",{}]],"5":[["      `return` statement                                                                                                           ",{}]],"6":[["        translates YCP `return` statements inside functions as Ruby `return`",{"fg":2}],["                                                       ",{}]],"7":[["        statements                                                                                                                 ",{"fg":2}]],"8":[["        translates YCP `return` statements inside blocks as Ruby `next` statements",{"fg":2}],["                                                 ",{}]],"9":[["      `break` statement                                                                                                            ",{}]],"10":[["        translates YCP `break` statements inside loops as Ruby `next`",{"fg":2}],["                                                              ",{}]],"11":[["        statements                                                                                                                 ",{"fg":2}]],"12":[["        translates YCP `break` statements inside blocks as `raise Break` calls",{"fg":2}],["                                                     ",{}]],"13":[["      `continue` statement                                                                                                         ",{}]],"14":[["        translates YCP `continue` statements inside loops as Ruby `next` statements",{"fg":2}],["                                                ",{}]],"15":[["        translates YCP `continue` statements inside blocks as Ruby `next`",{"fg":2}],["                                                          ",{}]],"16":[["        statements                                                                                                                 ",{"fg":2}]],"17":[["      statement blocks                                                                                                             ",{}]],"18":[["        translates YCP statement blocks as Ruby statements",{"fg":2}],["                                                                         ",{}]],"19":[["      `if` statement                                                                                                               ",{}]],"20":[["        translates YCP `if` statements as Ruby `if` statements",{"fg":2}],["                                                                     ",{}]],"21":[["      `switch` statement                                                                                                           ",{}]],"22":[["        translates YCP `switch` statements as Ruby `case` statements",{"fg":2}],["                                                               ",{}]],"23":[["        does not support cases without a `break` or `return` at the end",{"fg":2}],["                                                            ",{}]],"24":[["        does not support cases with `break` in the middle",{"fg":2}],["                                                                          ",{}]],"25":[["        does not support defaults with `break` in the middle",{"fg":2}],["                                                                       ",{}]],"26":[["      `while` statement                                                                                                            ",{}]],"27":[["        translates YCP `while` statements as Ruby `while` statements",{"fg":2}],["                                                               ",{}]],"28":[["      `do` statement                                                                                                               ",{}]],"29":[["        translates YCP `do` statements as Ruby `while` statements",{"fg":2}],["                                                                  ",{}]],"30":[["      `repeat` statement                                                                                                           ",{}]],"31":[["        translates YCP `repeat` statements as Ruby `until` statements",{"fg":2}],["                                                              ",{}]],"32":[["      function definitions                                                                                                         ",{}]],"33":[["        translates toplevel function definitions as Ruby method definitions",{"fg":2}],["                                                        ",{}]],"34":[["        translates nested YCP function definitions as Ruby lambdas",{"fg":2}],["                                                                 ",{}]],"35":[["        maintains pass-by-value semantics of parameters by calling `deep_copy` on",{"fg":2}],["                                                  ",{}]],"36":[["        them                                                                                                                       ",{"fg":2}]],"37":[["        maintains pass-by-value semantics of return values by calling `deep_copy` on",{"fg":2}],["                                               ",{}]],"38":[["        returned variables                                                                                                         ",{"fg":2}]],"39":[["    files                                                                                                                          ",{}]],"40":[["      clients                                                                                                                      ",{}]],"41":[["        translates YCP clients as Ruby classes that are instantiated",{"fg":2}],["                                                               ",{}]],"42":[["      modules                                                                                                                      ",{}]],"43":[["        translates YCP modules as Ruby classes that are instantiated",{"fg":2}],["                                                               ",{}]],"44":[["    other                                                                                                                          ",{}]],"45":[["      comments                                                                                                                     ",{}]],"46":[["        translates comments before statements and after them",{"fg":2}],["                                                                       ",{}]],"47":[["        preserves whitespace between statements",{"fg":2}],["                                                                                    ",{}]],"48":[["        handles all kinds of YCP comments correctly",{"fg":2}],["                                                                                ",{}]],"49":[["        translates YCP documentation comments into [YARD](http://yardoc",{"fg":2}],["                                                            ",{}]],"50":[["                                                                                                                                   ",{}]],"51":[["Finished in 6.98 seconds                                                                                                           ",{}]],"52":[["451 examples, 0 failures",{"fg":2}],["                                                                                                           ",{}]]}}],[0.029129,{}],[0.020199,{"lines":{"53":[["riot67",{"fg":2}],[" Y2R/y2r ",{}],["‹master› ",{"fg":3}],["»",{"bold":true}],["                                                                                                          ",{}]]},"cursor":{"x":26}}],[0.000114,{}],[1.588925,{"lines":{"0":[["      `import` statement                                                                                                           ",{}]],"1":[["        translates YCP `import` statements as `Yast",{"fg":2}],["                                                                                ",{}]],"2":[["      `include` statement                                                                                                          ",{}]],"3":[["        translates YCP `include` statements as `Yast",{"fg":2}],["                                                                               ",{}]],"4":[["      `return` statement                                                                                                           ",{}]],"5":[["        translates YCP `return` statements inside functions as Ruby `return`",{"fg":2}],["                                                       ",{}]],"6":[["        statements                                                                                                                 ",{"fg":2}]],"7":[["        translates YCP `return` statements inside blocks as Ruby `next` statements",{"fg":2}],["                                                 ",{}]],"8":[["      `break` statement                                                                                                            ",{}]],"9":[["        translates YCP `break` statements inside loops as Ruby `next`",{"fg":2}],["                                                              ",{}]],"10":[["        statements                                                                                                                 ",{"fg":2}]],"11":[["        translates YCP `break` statements inside blocks as `raise Break` calls",{"fg":2}],["                                                     ",{}]],"12":[["      `continue` statement                                                                                                         ",{}]],"13":[["        translates YCP `continue` statements inside loops as Ruby `next` statements",{"fg":2}],["                                                ",{}]],"14":[["        translates YCP `continue` statements inside blocks as Ruby `next`",{"fg":2}],["                                                          ",{}]],"15":[["        statements                                                                                                                 ",{"fg":2}]],"16":[["      statement blocks                                                                                                             ",{}]],"17":[["        translates YCP statement blocks as Ruby statements",{"fg":2}],["                                                                         ",{}]],"18":[["      `if` statement                                                                                                               ",{}]],"19":[["        translates YCP `if` statements as Ruby `if` statements",{"fg":2}],["                                                                     ",{}]],"20":[["      `switch` statement                                                                                                           ",{}]],"21":[["        translates YCP `switch` statements as Ruby `case` statements",{"fg":2}],["                                                               ",{}]],"22":[["        does not support cases without a `break` or `return` at the end",{"fg":2}],["                                                            ",{}]],"23":[["        does not support cases with `break` in the middle",{"fg":2}],["                                                                          ",{}]],"24":[["        does not support defaults with `break` in the middle",{"fg":2}],["                                                                       ",{}]],"25":[["      `while` statement                                                                                                            ",{}]],"26":[["        translates YCP `while` statements as Ruby `while` statements",{"fg":2}],["                                                               ",{}]],"27":[["      `do` statement                                                                                                               ",{}]],"28":[["        translates YCP `do` statements as Ruby `while` statements",{"fg":2}],["                                                                  ",{}]],"29":[["      `repeat` statement                                                                                                           ",{}]],"30":[["        translates YCP `repeat` statements as Ruby `until` statements",{"fg":2}],["                                                              ",{}]],"31":[["      function definitions                                                                                                         ",{}]],"32":[["        translates toplevel function definitions as Ruby method definitions",{"fg":2}],["                                                        ",{}]],"33":[["        translates nested YCP function definitions as Ruby lambdas",{"fg":2}],["                                                                 ",{}]],"34":[["        maintains pass-by-value semantics of parameters by calling `deep_copy` on",{"fg":2}],["                                                  ",{}]],"35":[["        them                                                                                                                       ",{"fg":2}]],"36":[["        maintains pass-by-value semantics of return values by calling `deep_copy` on",{"fg":2}],["                                               ",{}]],"37":[["        returned variables                                                                                                         ",{"fg":2}]],"38":[["    files                                                                                                                          ",{}]],"39":[["      clients                                                                                                                      ",{}]],"40":[["        translates YCP clients as Ruby classes that are instantiated",{"fg":2}],["                                                               ",{}]],"41":[["      modules                                                                                                                      ",{}]],"42":[["        translates YCP modules as Ruby classes that are instantiated",{"fg":2}],["                                                               ",{}]],"43":[["    other                                                                                                                          ",{}]],"44":[["      comments                                                                                                                     ",{}]],"45":[["        translates comments before statements and after them",{"fg":2}],["                                                                       ",{}]],"46":[["        preserves whitespace between statements",{"fg":2}],["                                                                                    ",{}]],"47":[["        handles all kinds of YCP comments correctly",{"fg":2}],["                                                                                ",{}]],"48":[["        translates YCP documentation comments into [YARD](http://yardoc",{"fg":2}],["                                                            ",{}]],"49":[["                                                                                                                                   ",{}]],"50":[["Finished in 6.98 seconds                                                                                                           ",{}]],"51":[["451 examples, 0 failures",{"fg":2}],["                                                                                                           ",{}]],"52":[["riot67",{"fg":2}],[" Y2R/y2r ",{}],["‹master› ",{"fg":3}],["»",{"bold":true}],["                                                                                                          ",{}]],"53":[["                                                                                                                                   ",{}]]},"cursor":{"x":0}}]]